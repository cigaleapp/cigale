name: End-to-end tests

on:
  push:
    branches: [main]
    paths: [src/**, tests/**, static/**, '*']
  pull_request:
    branches: [main]
    paths: [src/**, tests/**, static/**, '*']

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment:
      name: '#${{ github.event.number }}: End-to-end tests report'
      url: ${{ steps.deploy-preview.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers- {{ env.PLAYWRIGHT_VERSION }}

      - name: Setup Playwright
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Deploy results on github pages
        if: ${{ !cancelled() }}
        id: deploy-preview
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./playwright-report
          umbrella-dir: _playwright
          comment: false
