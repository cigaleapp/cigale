name: Checks

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Lint
        run: bun run lint

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    environment:
      name: '#${{ github.event.number }}: Unit tests report'
      url: ${{ steps.deploy-preview.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Run tests
        run: bun run test
      - name: Save aside coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v5
        with:
          name: vitest-report-head
          path: ./coverage
      - name: Deploy results to Github Pages
        if: ${{ !cancelled() }}
        uses: rossjrw/pr-preview-action@v1
        id: deploy-preview
        with:
          source-dir: ./html
          umbrella-dir: _vitest
          comment: false

  clutter:
    name: Check for clutter (unused stuff)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Check for clutter
        run: bun knip --reporter github-actions

  get-base-branch-coverage:
    name: Get base branch coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && !startsWith(github.head_ref, 'renovate/')
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Run tests
        run: bun run test
      - name: Save aside coverage report
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: vitest-report-base
          path: ./coverage

  upload-coverage-report:
    name: Coverage report
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: '#${{ github.event.number }}: Test coverage report'
      url: ${{ steps.deploy-preview.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v5
      - name: Get coverage report
        uses: actions/download-artifact@v6
        with:
          name: vitest-report-head
          path: ./coverage
      - name: Deploy coverage report to Github Pages
        if: always()
        uses: rossjrw/pr-preview-action@v1
        id: deploy-preview
        with:
          source-dir: ./coverage
          umbrella-dir: _coverage
          comment: false

  compare-coverage:
    name: Compare coverage
    runs-on: ubuntu-latest
    needs: [test, get-base-branch-coverage]
    if: github.event_name == 'pull_request' && !startsWith(github.head_ref, 'renovate/')
    steps:
      - name: Set threshold
        id: params
        run: echo threshold="-0.5" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v6
        with:
          name: vitest-report-head
          path: ./coverage
      - uses: actions/download-artifact@v6
        with:
          name: vitest-report-base
          path: ./base-coverage
      - name: Compare coverage difference
        id: diff
        run: |
          base_coverage=$(jq '.total.lines.pct' base-coverage/coverage-summary.json)
          echo "base=$base_coverage" >> $GITHUB_OUTPUT
          echo "Base branch coverage: $base_coverage%"

          head_coverage=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          echo "head=$head_coverage" >> $GITHUB_OUTPUT
          echo "Head branch coverage: $head_coverage%"

          diff=$(echo "$head_coverage - $base_coverage" | bc)
          diff=$(printf "%.2f" "$diff")
          echo "diff=$diff" >> $GITHUB_OUTPUT
          echo "Coverage difference: $diff%"

          if (( $(echo "$diff == 0" | bc -l) )); then
            echo "trend=neutral" >> $GITHUB_OUTPUT
          elif (( $(echo "$diff > 0" | bc -l) )); then
            echo "trend=up" >> $GITHUB_OUTPUT
            echo "emoji=✅" >> $GITHUB_OUTPUT
          elif (( $(echo "$diff < ${{ steps.params.outputs.threshold }}" | bc -l) )); then
            echo "trend=down" >> $GITHUB_OUTPUT
            echo "emoji=❌" >> $GITHUB_OUTPUT
          else
            echo "trend=down" >> $GITHUB_OUTPUT
            echo "emoji=⚠️" >> $GITHUB_OUTPUT
          fi

          cat $GITHUB_OUTPUT
      - name: Add sticky comment with coverage difference
        uses: marocchino/sticky-pull-request-comment@v2
        if: steps.diff.outputs.trend != 'neutral'
        with:
          header: '📊 Coverage difference'
          message: |
            ${{ steps.diff.outputs.emoji }} Coverage is **${{ steps.diff.outputs.trend }}** by **${{ steps.diff.outputs.diff }}%** (from ${{ steps.diff.outputs.base }}% to ${{ steps.diff.outputs.head }}%)
      - name: Fail if coverage decreased too much
        run: |
          if [ "${{ steps.diff.outputs.trend }}" = "down" ] && (( $(echo "${{ steps.diff.outputs.diff }} < ${{ steps.params.outputs.threshold }}" | bc -l) )); then
            echo "Coverage decreased by ${{ steps.diff.outputs.diff }}%, which is more than the allowed threshold of ${{ steps.params.outputs.threshold }}%."
            exit 1
          else
            echo "Coverage difference is within the allowed threshold."
          fi
