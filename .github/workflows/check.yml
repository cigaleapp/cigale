name: Checks

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Lint
        run: bun run lint
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Check formatting
        run: bunx prettier --check .
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    environment:
      name: '#${{ github.event.number }}: Unit tests report'
      url: ${{ steps.deploy-preview.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Run tests
        run: bun run test
      - name: Save aside coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: vitest-report-head
          path: ./coverage
      - name: Deploy results to Github Pages
        if: ${{ !cancelled() }}
        uses: rossjrw/pr-preview-action@v1
        id: deploy-preview
        with:
          source-dir: ./html
          umbrella-dir: _vitest
          comment: false

  clutter:
    name: Check for clutter (unused stuff)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Check for clutter
        run: bun run check:clutter --reporter github-actions
  i18n:
    name: Check for untranslated messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Check for untranslated messages
        run: |
          missing=()
          for key in $(jq -r 'keys[]' messages/fr.json); do
            value=$(jq -r --arg k "$key" '.[$k] // empty' messages/en.json)
            if [[ -z "$value" ]]; then
              missing+=("$key")
            fi
          done
          if [ ${#missing[@]} -ne 0 ]; then
            echo "Missing or empty keys in en.json:"
            for key in "${missing[@]}"; do
              fr_value=$(jq -r --arg k "$key" '.[$k]' messages/fr.json)
              echo "- $key: $fr_value"
            done
            exit 1
          else
            echo "All fr.json keys are present and non-empty in en.json"
          fi
      - name: Check for unused messages
        run: |
          shopt -s globstar
          unused=()
          echo Unused keys in fr.json:
          for key in $(jq -r 'keys[]' messages/fr.json); do
            if [ "$key" == '$schema' ]; then
              continue
            fi
            count=$(grep "m\.$key" src/**/*.{svelte,js} | wc -l)
            if [ "$count" -eq 0 ]; then
              unused+=("$key")
              fr_value=$(jq -r --arg k "$key" '.[$k]' messages/fr.json)
              echo "- $key: $fr_value"
            fi
          done
          if [ ${#unused[@]} -ne 0 ]; then
            echo "${#unused[@]} unused keys in fr.json"
            exit 1
          else
            echo "All fr.json keys are used in the codebase"
          fi

  get-base-branch-coverage:
    name: Get base branch coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Run tests
        run: bun run test
      - name: Save aside coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-report-base
          path: ./coverage

  upload-coverage-report:
    name: Coverage report
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: '#${{ github.event.number }}: Test coverage report'
      url: ${{ steps.deploy-preview.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v5
      - name: Get coverage report
        uses: actions/download-artifact@v5
        with:
          name: vitest-report-head
          path: ./coverage
      - name: Deploy coverage report to Github Pages
        if: always()
        uses: rossjrw/pr-preview-action@v1
        id: deploy-preview
        with:
          source-dir: ./coverage
          umbrella-dir: _coverage
          comment: false

  compare-coverage:
    name: Compare coverage
    runs-on: ubuntu-latest
    needs: [test, get-base-branch-coverage]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          name: vitest-report-head
          path: ./coverage
      - uses: actions/download-artifact@v5
        with:
          name: vitest-report-base
          path: ./base-coverage
      - name: Compare coverage difference
        run: |
          base_coverage=$(jq '.total.lines.pct' base-coverage/coverage-summary.json)
          head_coverage=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          echo "Base branch coverage: $base_coverage%"
          echo "Head branch coverage: $head_coverage%"
          diff=$(echo "$head_coverage - $base_coverage" | bc)
          diff=$(printf "%.2f" "$diff")
          echo "Coverage difference: $diff%"
          if (( $(echo "$diff < -0.5" | bc -l) )); then
            echo "Coverage decreased by more than 0.5%. Failing the check."
            exit 1
          else
            echo "Coverage difference is acceptable."
          fi
