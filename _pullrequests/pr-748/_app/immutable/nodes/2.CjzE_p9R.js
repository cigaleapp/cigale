import{bt as B,aM as X}from"../chunks/DLg_PPZ_.js";import{_ as L}from"../chunks/PPVm8Dsz.js";import{u as F,O as Q,b as i,S as $,Q as j,R as p,T as b,U as H,V as U,W as Y,X as G,t as O,o as K,v as Z}from"../chunks/BCT7fajR.js";import{j as ee}from"../chunks/yjQBtq-m.js";import{t as te}from"../chunks/BVoxKip6.js";import{H as ne}from"../chunks/BOFtXlFR.js";import{_ as Xt}from"../chunks/BCd8JXwC.js";const re=B;function ae(e){const r={},t=F();for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(e[n]===void 0?delete r[n]:r[n]=e[n]);Q(r)}const oe={main:{fr:()=>L(()=>import("../chunks/DxMLO8B0.js"),[],import.meta.url),en:()=>L(()=>import("../chunks/C9LbXwBd.js"),[],import.meta.url)}},ie=(e,r)=>oe[e][r](),se=["main"],ce="main";function q(e){return{get:r=>e[r],set:(r,t)=>{r in e?Object.assign(e[r],t):e[r]=t}}}const D={},ue={c:[]};function de(e,r,t,n){D[e]={load:r,loadIDs:t,collection:n??q({})};for(const a of t)D[e].collection.set(a,ue);return a=>D[e].collection.get(a)}function le(e){return Object.values(D)}async function me(e,r){const t=[],n=[];for(const a of le())for(const o of a.loadIDs)t.push(a.load(o,e)),n.push([o,a]);for(const[a,o]of(await Promise.all(t)).entries()){const[d,f]=n[a];f.collection.set(d,o)}}const fe=X({});de(ce,ie,se,q(fe));const he={init:{input:i({databaseName:"string",databaseRevision:"number.integer >= 1"}),progress:i("undefined"),success:i("undefined")},loadModel:{input:i({protocolId:"string",request:$.HTTPRequest,"classmapping?":$.HTTPRequest,task:'"classification" | "detection"',"webgpu?":"boolean"}),progress:i("0 <= number <= 1"),success:i("true")},isModelLoaded:{input:i('"classification" | "detection"'),progress:i({}),success:i("boolean")},inferBoundingBoxes:{input:i({fileId:"string",webgpu:"boolean = false",taskSettings:{input:$.ModelInput,output:{"name?":"string",shape:$.ModelDetectionOutputShape}}}),progress:i({}),success:i({boxes:i(["number","number","number","number"]).array(),scores:i.number.array()})},classify:{input:i({imageId:"string","webgpu?":"boolean",metadataIds:{cropbox:"string",target:"string"},taskSettings:{input:$.ModelInput,"output?":{name:"string"}}}),progress:i({}),success:i({scores:i.number.array()})},importProtocol:{input:i({contents:"string",isJSON:"boolean = false"}),progress:i({phase:i.enumerated("parsing","filtering-builtin-metadata","input-validation","write-protocol","write-metadata","write-metadata-options","output-validation"),"detail?":"string"}),success:i({id:"string",name:"string","version?":"number | undefined"})},generateResultsZip:{input:i({protocolId:"string",include:i.enumerated("croppedonly","full","metadataonly"),cropPadding:/^\d+(px|%)$/,jsonSchemaURL:"string.url.parse"}),progress:i.or({progress:"number"},{warning:i.or(['"exif-write-error"',{filename:"string"}])}).pipe(e=>"progress"in e?{progress:e.progress,warning:void 0}:{progress:void 0,warning:e.warning}),success:i("ArrayBuffer")}};function ge(e,r){throw new ne(e,r)}const pe={lessThanXSeconds:{one:"moins d’une seconde",other:"moins de {{count}} secondes"},xSeconds:{one:"1 seconde",other:"{{count}} secondes"},halfAMinute:"30 secondes",lessThanXMinutes:{one:"moins d’une minute",other:"moins de {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"environ 1 heure",other:"environ {{count}} heures"},xHours:{one:"1 heure",other:"{{count}} heures"},xDays:{one:"1 jour",other:"{{count}} jours"},aboutXWeeks:{one:"environ 1 semaine",other:"environ {{count}} semaines"},xWeeks:{one:"1 semaine",other:"{{count}} semaines"},aboutXMonths:{one:"environ 1 mois",other:"environ {{count}} mois"},xMonths:{one:"1 mois",other:"{{count}} mois"},aboutXYears:{one:"environ 1 an",other:"environ {{count}} ans"},xYears:{one:"1 an",other:"{{count}} ans"},overXYears:{one:"plus d’un an",other:"plus de {{count}} ans"},almostXYears:{one:"presqu’un an",other:"presque {{count}} ans"}},be=(e,r,t)=>{let n;const a=pe[e];return typeof a=="string"?n=a:r===1?n=a.one:n=a.other.replace("{{count}}",String(r)),t?.addSuffix?t.comparison&&t.comparison>0?"dans "+n:"il y a "+n:n},we={full:"EEEE d MMMM y",long:"d MMMM y",medium:"d MMM y",short:"dd/MM/y"},ye={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},ve={full:"{{date}} 'à' {{time}}",long:"{{date}} 'à' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},Pe={date:j({formats:we,defaultWidth:"full"}),time:j({formats:ye,defaultWidth:"full"}),dateTime:j({formats:ve,defaultWidth:"full"})},Me={lastWeek:"eeee 'dernier à' p",yesterday:"'hier à' p",today:"'aujourd’hui à' p",tomorrow:"'demain à' p'",nextWeek:"eeee 'prochain à' p",other:"P"},Se=(e,r,t,n)=>Me[e],We={narrow:["av. J.-C","ap. J.-C"],abbreviated:["av. J.-C","ap. J.-C"],wide:["avant Jésus-Christ","après Jésus-Christ"]},ke={narrow:["T1","T2","T3","T4"],abbreviated:["1er trim.","2ème trim.","3ème trim.","4ème trim."],wide:["1er trimestre","2ème trimestre","3ème trimestre","4ème trimestre"]},Ce={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],wide:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"]},je={narrow:["D","L","M","M","J","V","S"],short:["di","lu","ma","me","je","ve","sa"],abbreviated:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],wide:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},$e={narrow:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"mat.",afternoon:"ap.m.",evening:"soir",night:"mat."},abbreviated:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"matin",afternoon:"après-midi",evening:"soir",night:"matin"},wide:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"du matin",afternoon:"de l’après-midi",evening:"du soir",night:"du matin"}},De=(e,r)=>{const t=Number(e),n=r?.unit;if(t===0)return"0";const a=["year","week","hour","minute","second"];let o;return t===1?o=n&&a.includes(n)?"ère":"er":o="ème",t+o},Ie=["MMM","MMMM"],Ne={preprocessor:(e,r)=>e.getDate()===1||!r.some(n=>n.isToken&&Ie.includes(n.value))?r:r.map(n=>n.isToken&&n.value==="do"?{isToken:!0,value:"d"}:n),ordinalNumber:De,era:p({values:We,defaultWidth:"wide"}),quarter:p({values:ke,defaultWidth:"wide",argumentCallback:e=>e-1}),month:p({values:Ce,defaultWidth:"wide"}),day:p({values:je,defaultWidth:"wide"}),dayPeriod:p({values:$e,defaultWidth:"wide"})},Oe=/^(\d+)(ième|ère|ème|er|e)?/i,Te=/\d+/i,xe={narrow:/^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,abbreviated:/^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,wide:/^(avant Jésus-Christ|après Jésus-Christ)/i},Ee={any:[/^av/i,/^ap/i]},Le={narrow:/^T?[1234]/i,abbreviated:/^[1234](er|ème|e)? trim\.?/i,wide:/^[1234](er|ème|e)? trimestre/i},Ae={any:[/1/i,/2/i,/3/i,/4/i]},Re={narrow:/^[jfmasond]/i,abbreviated:/^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\.?/i,wide:/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i},_e={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^av/i,/^ma/i,/^juin/i,/^juil/i,/^ao/i,/^s/i,/^o/i,/^n/i,/^d/i]},ze={narrow:/^[lmjvsd]/i,short:/^(di|lu|ma|me|je|ve|sa)/i,abbreviated:/^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,wide:/^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i},He={narrow:[/^d/i,/^l/i,/^m/i,/^m/i,/^j/i,/^v/i,/^s/i],any:[/^di/i,/^lu/i,/^ma/i,/^me/i,/^je/i,/^ve/i,/^sa/i]},qe={narrow:/^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,any:/^([ap]\.?\s?m\.?|du matin|de l'après[-\s]midi|du soir|de la nuit)/i},Je={any:{am:/^a/i,pm:/^p/i,midnight:/^min/i,noon:/^mid/i,morning:/mat/i,afternoon:/ap/i,evening:/soir/i,night:/nuit/i}},Ve={ordinalNumber:H({matchPattern:Oe,parsePattern:Te,valueCallback:e=>parseInt(e)}),era:b({matchPatterns:xe,defaultMatchWidth:"wide",parsePatterns:Ee,defaultParseWidth:"any"}),quarter:b({matchPatterns:Le,defaultMatchWidth:"wide",parsePatterns:Ae,defaultParseWidth:"any",valueCallback:e=>e+1}),month:b({matchPatterns:Re,defaultMatchWidth:"wide",parsePatterns:_e,defaultParseWidth:"any"}),day:b({matchPatterns:ze,defaultMatchWidth:"wide",parsePatterns:He,defaultParseWidth:"any"}),dayPeriod:b({matchPatterns:qe,defaultMatchWidth:"any",parsePatterns:Je,defaultParseWidth:"any"})},Be={code:"fr",formatDistance:be,formatLong:Pe,formatRelative:Se,localize:Ne,match:Ve,options:{weekStartsOn:1,firstWeekContainsDate:4}},Xe={lessThanXSeconds:{one:"1秒未満",other:"{{count}}秒未満",oneWithSuffix:"約1秒",otherWithSuffix:"約{{count}}秒"},xSeconds:{one:"1秒",other:"{{count}}秒"},halfAMinute:"30秒",lessThanXMinutes:{one:"1分未満",other:"{{count}}分未満",oneWithSuffix:"約1分",otherWithSuffix:"約{{count}}分"},xMinutes:{one:"1分",other:"{{count}}分"},aboutXHours:{one:"約1時間",other:"約{{count}}時間"},xHours:{one:"1時間",other:"{{count}}時間"},xDays:{one:"1日",other:"{{count}}日"},aboutXWeeks:{one:"約1週間",other:"約{{count}}週間"},xWeeks:{one:"1週間",other:"{{count}}週間"},aboutXMonths:{one:"約1か月",other:"約{{count}}か月"},xMonths:{one:"1か月",other:"{{count}}か月"},aboutXYears:{one:"約1年",other:"約{{count}}年"},xYears:{one:"1年",other:"{{count}}年"},overXYears:{one:"1年以上",other:"{{count}}年以上"},almostXYears:{one:"1年近く",other:"{{count}}年近く"}},Fe=(e,r,t)=>{t=t||{};let n;const a=Xe[e];return typeof a=="string"?n=a:r===1?t.addSuffix&&a.oneWithSuffix?n=a.oneWithSuffix:n=a.one:t.addSuffix&&a.otherWithSuffix?n=a.otherWithSuffix.replace("{{count}}",String(r)):n=a.other.replace("{{count}}",String(r)),t.addSuffix?t.comparison&&t.comparison>0?n+"後":n+"前":n},Qe={full:"y年M月d日EEEE",long:"y年M月d日",medium:"y/MM/dd",short:"y/MM/dd"},Ue={full:"H時mm分ss秒 zzzz",long:"H:mm:ss z",medium:"H:mm:ss",short:"H:mm"},Ye={full:"{{date}} {{time}}",long:"{{date}} {{time}}",medium:"{{date}} {{time}}",short:"{{date}} {{time}}"},Ge={date:j({formats:Qe,defaultWidth:"full"}),time:j({formats:Ue,defaultWidth:"full"}),dateTime:j({formats:Ye,defaultWidth:"full"})},Ke={lastWeek:"先週のeeeeのp",yesterday:"昨日のp",today:"今日のp",tomorrow:"明日のp",nextWeek:"翌週のeeeeのp",other:"P"},Ze=(e,r,t,n)=>Ke[e],et={narrow:["BC","AC"],abbreviated:["紀元前","西暦"],wide:["紀元前","西暦"]},tt={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["第1四半期","第2四半期","第3四半期","第4四半期"]},nt={narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],abbreviated:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],wide:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]},rt={narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],abbreviated:["日","月","火","水","木","金","土"],wide:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},at={narrow:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},abbreviated:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},wide:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"}},ot={narrow:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},abbreviated:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},wide:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"}},it=(e,r)=>{const t=Number(e);switch(String(r?.unit)){case"year":return`${t}年`;case"quarter":return`第${t}四半期`;case"month":return`${t}月`;case"week":return`第${t}週`;case"date":return`${t}日`;case"hour":return`${t}時`;case"minute":return`${t}分`;case"second":return`${t}秒`;default:return`${t}`}},st={ordinalNumber:it,era:p({values:et,defaultWidth:"wide"}),quarter:p({values:tt,defaultWidth:"wide",argumentCallback:e=>Number(e)-1}),month:p({values:nt,defaultWidth:"wide"}),day:p({values:rt,defaultWidth:"wide"}),dayPeriod:p({values:at,defaultWidth:"wide",formattingValues:ot,defaultFormattingWidth:"wide"})},ct=/^第?\d+(年|四半期|月|週|日|時|分|秒)?/i,ut=/\d+/i,dt={narrow:/^(B\.?C\.?|A\.?D\.?)/i,abbreviated:/^(紀元[前後]|西暦)/i,wide:/^(紀元[前後]|西暦)/i},lt={narrow:[/^B/i,/^A/i],any:[/^(紀元前)/i,/^(西暦|紀元後)/i]},mt={narrow:/^[1234]/i,abbreviated:/^Q[1234]/i,wide:/^第[1234一二三四１２３４]四半期/i},ft={any:[/(1|一|１)/i,/(2|二|２)/i,/(3|三|３)/i,/(4|四|４)/i]},ht={narrow:/^([123456789]|1[012])/,abbreviated:/^([123456789]|1[012])月/i,wide:/^([123456789]|1[012])月/i},gt={any:[/^1\D/,/^2/,/^3/,/^4/,/^5/,/^6/,/^7/,/^8/,/^9/,/^10/,/^11/,/^12/]},pt={narrow:/^[日月火水木金土]/,short:/^[日月火水木金土]/,abbreviated:/^[日月火水木金土]/,wide:/^[日月火水木金土]曜日/},bt={any:[/^日/,/^月/,/^火/,/^水/,/^木/,/^金/,/^土/]},wt={any:/^(AM|PM|午前|午後|正午|深夜|真夜中|夜|朝)/i},yt={any:{am:/^(A|午前)/i,pm:/^(P|午後)/i,midnight:/^深夜|真夜中/i,noon:/^正午/i,morning:/^朝/i,afternoon:/^午後/i,evening:/^夜/i,night:/^深夜/i}},vt={ordinalNumber:H({matchPattern:ct,parsePattern:ut,valueCallback:function(e){return parseInt(e,10)}}),era:b({matchPatterns:dt,defaultMatchWidth:"wide",parsePatterns:lt,defaultParseWidth:"any"}),quarter:b({matchPatterns:mt,defaultMatchWidth:"wide",parsePatterns:ft,defaultParseWidth:"any",valueCallback:e=>e+1}),month:b({matchPatterns:ht,defaultMatchWidth:"wide",parsePatterns:gt,defaultParseWidth:"any"}),day:b({matchPatterns:pt,defaultMatchWidth:"wide",parsePatterns:bt,defaultParseWidth:"any"}),dayPeriod:b({matchPatterns:wt,defaultMatchWidth:"any",parsePatterns:yt,defaultParseWidth:"any"})},Pt={code:"ja",formatDistance:Fe,formatLong:Ge,formatRelative:Ze,localize:st,match:vt,options:{weekStartsOn:0,firstWeekContainsDate:1}};Map.groupBy??=function(r,t){const n=new Map;let a=0;for(const o of r){const d=t(o,a++),f=n.get(d);f?f.push(o):n.set(d,[o])}return n};function N(e,r="debug",t,n){const a=A.slice(A.indexOf(r));if(n&&t){const o={rqid:n,nid:t};return{debug:a.includes("debug")?v("debug",e,o):()=>{},info:a.includes("info")?v("info",e,o):()=>{},warn:a.includes("warn")?v("warn",e,o):()=>{},error:a.includes("error")?v("error",e,o):()=>{}}}return{debug:a.includes("debug")?v("debug",e,t):()=>{},info:a.includes("info")?v("info",e,t):()=>{},warn:a.includes("warn")?v("warn",e,t):()=>{},error:a.includes("error")?v("error",e,t):()=>{}}}const A=["debug","info","warn","error"],Mt=["debug","info","warn","error","log"];function v(e,r,t){if(t===void 0||typeof t=="string"){const n=t??null;return(a,...o)=>R(e,r,{nid:n,rqid:a},...o)}return(...n)=>R(e,r,t,...n)}const St=Mt.reduce((e,r)=>(e[r]=console[r],e),{});function R(e,r,{rqid:t,nid:n},...a){const o=[`[SWARPC ${r}]`,t?`%c${t}%c`:"",n?`%c@ ${n}%c`:""].filter(Boolean).join(" "),d=[];return t&&d.push("color: cyan","color: inherit"),n&&d.push("color: hotpink","color: inherit"),St[e](o,...d,...a)}function _(e,r){if(!e)return;let t=Object.keys(e)[0];const n=Map.groupBy(r.values(),a=>a.nodeId);for(const a of Object.keys(e))n.has(a)||n.set(a,[]);for(const[a,o]of n.entries())a&&o.length<n.get(t).length&&(t=a);return console.debug("[SWARPC Load balancer] Choosing",t,"load map is",n),t}function Wt(){return"N"+Math.random().toString(16).substring(2,5).toUpperCase()}const kt="(SW)";function k(e){return e??kt}const Ct=i({by:'"sw&rpc"',functionName:'"#initialize"',isInitializeRequest:"true",localStorageData:"Record<string, unknown>",nodeId:"string"}),jt=i("<Name extends string>",{by:'"sw&rpc"',functionName:"Name",requestId:"string >= 1"}),$t=i("<I, P, S>",{"input?":"I","progress?":"P","result?":"S","abort?":{reason:"string"},"error?":{message:"string"}});i.scope({PayloadCoreSchema:$t,PayloadHeaderSchema:jt,PayloadInitializeSchema:Ct}).type("<Name extends string, I, P, S>",[["PayloadHeaderSchema<Name>","&","PayloadCoreSchema<I, P, S>"],"|","PayloadInitializeSchema"]);const Dt=Symbol("SWARPC procedures"),It=[MessagePort,ReadableStream,WritableStream,TransformStream,ArrayBuffer];function T(e){return e==null?[]:typeof e=="object"?ArrayBuffer.isView(e)||e instanceof ArrayBuffer?[e]:It.some(r=>e instanceof r)?[e]:Array.isArray(e)?e.flatMap(T):Object.values(e).flatMap(T):[]}const P=new Map;let x=new Set;function Nt(e,{worker:r,nodes:t,loglevel:n="debug",restartListener:a=!1,hooks:o={},localStorage:d={}}={}){const f=N("client",n);a&&x.clear();const h={[Dt]:e};t??=navigator.hardwareConcurrency||1;let s;if(r){s={};for(const u of Array.from({length:t})){const C=Wt();typeof r=="string"?s[C]=new Worker(r,{name:C}):s[C]=new r({name:C})}f.info(null,`Started ${t} node${t>1?"s":""}`,Object.keys(s))}for(const u of Object.keys(e)){if(typeof u!="string")throw new Error("[SWARPC Client] Invalid function name, don't use symbols");const C=async(g,w,l,c,m)=>J({logger:f,node:g,nodeId:w,hooks:o,localStorage:d},{...c,by:"sw&rpc",requestId:l,functionName:u},m),I=async(g,w=()=>{},l,c)=>{e[u].input.assert(g);const m=l??z();c??=_(s,P);const S=s&&c?s[c]:void 0,E=N("client",n,k(c),m);return new Promise((y,W)=>{P.set(m,{nodeId:c,functionName:u,resolve:y,onProgress:w,reject:W});const V=e[u].autotransfer==="always"?T(g):[];return E.debug(`Requesting ${u} with`,g),C(S,c,m,{input:g},{transfer:V}).then(()=>{}).catch(W)})};h[u]=I,h[u].broadcast=async(g,w,l)=>{let c=[void 0];s&&(c=Object.keys(s)),l&&(c=c.slice(0,l));const m=new Map;function S(y){return w?W=>{m.set(k(y),W),w(m)}:W=>{}}return(await Promise.allSettled(c.map(async y=>I(g,S(y),void 0,y)))).map((y,W)=>({...y,node:k(c[W])}))},h[u].cancelable=(g,w)=>{const l=z(),c=_(s,P),m=N("client",n,k(c),l);return{request:I(g,w,l,c),cancel(S){if(!P.has(l)){m.warn(l,`Cannot cancel ${u} request, it has already been resolved or rejected`);return}m.debug(l,`Cancelling ${u} with`,S),Ot(m,c?s?.[c]:void 0,{by:"sw&rpc",requestId:l,functionName:u,abort:{reason:S}}),P.delete(l)}}}}return h}async function J(e,r,t){await Tt(e);const{logger:n,node:a}=e;!a&&!navigator.serviceWorker.controller&&n.warn("","Service Worker is not controlling the page");const o=a instanceof SharedWorker?a.port:a===void 0?await navigator.serviceWorker.ready.then(d=>d.active):a;if(!o)throw new Error("[SWARPC Client] No active service worker found");o.postMessage(r,t)}function Ot(e,r,t,n){!r&&!navigator.serviceWorker.controller&&e.warn("Service Worker is not controlling the page");const a=r instanceof SharedWorker?r.port:r===void 0?navigator.serviceWorker.controller:r;if(!a)throw new Error("[SWARPC Client] No active service worker found");a.postMessage(t,n)}async function Tt(e){if(x.has(k(e.nodeId)))return;const{logger:r,node:t}=e;if(!t){if(!(await navigator.serviceWorker.ready)?.active)throw new Error("[SWARPC Client] Service Worker is not active");navigator.serviceWorker.controller||r.warn("","Service Worker is not controlling the page")}const n=t??navigator.serviceWorker;r.debug(null,"Starting client listener",{w:n,...e});const a=o=>{const d=o.data||{};if(d?.by!=="sw&rpc")return;const f=d;if("isInitializeRequest"in f){r.warn(null,"Ignoring unexpected #initialize from server",f);return}const{requestId:h,...s}=f;if(!h)throw new Error("[SWARPC Client] Message received without requestId");const u=P.get(h);if(!u)throw new Error(`[SWARPC Client] ${h} has no active request handlers, cannot process ${JSON.stringify(s)}`);"error"in s?(e.hooks.error?.(s.functionName,new Error(s.error.message)),u.reject(new Error(s.error.message)),P.delete(h)):"progress"in s?(e.hooks.progress?.(s.functionName,s.progress),u.onProgress(s.progress)):"result"in s&&(e.hooks.success?.(s.functionName,s.result),u.resolve(s.result),P.delete(h))};n instanceof SharedWorker?(n.port.addEventListener("message",a),n.port.start()):n.addEventListener("message",a),x.add(k(e.nodeId)),await J(e,{by:"sw&rpc",functionName:"#initialize",isInitializeRequest:!0,localStorageData:e.localStorage,nodeId:k(e.nodeId)})}function z(){return Math.random().toString(16).substring(2,8).toUpperCase()}function xt(e){return new Worker(""+new URL("../workers/start-mEug1jnK.js",import.meta.url).href,{type:"module",name:e?.name})}async function Et(){const e=await ee("language",{fallback:U()});document.documentElement.lang=e,M({fr:"Chargement des traductions…",en:"Loading translations…"}[e]),await me(e),ae({locale:{fr:Be,en:Z,ja:Pt}[e]});const r=Math.ceil(navigator.hardwareConcurrency/3);M("Chargement du worker neuronal…");const t=Nt(he,{worker:xt,nodes:r});M("Initialisation DB du worker neuronal…"),await t.init.broadcast({databaseName:G,databaseRevision:Y});try{M("Initialisation de la base de données…"),await O.initialize(),M("Chargement des données intégrées…"),await Lt(t),await O.initialize()}catch(n){console.error(n),ge(400,{message:n?.toString()??"Erreur inattendue"})}return{swarpc:t,parallelism:r}}async function Lt(e){if(M("Initialisation des réglages par défaut…"),await K(["Metadata","Protocol","Settings"],{},async t=>{await t.objectStore("Settings").put({id:"defaults",protocols:[],theme:"auto",gridSize:1,language:"fr",showInputHints:!0,showTechnicalMetadata:re,protocolModelSelections:{},cropAutoNext:!1,gallerySort:{key:"date",direction:"asc"}})}),M("Chargement du protocole intégré"),await O.Protocol.count()===0)try{const t=await fetch("https://raw.githubusercontent.com/cigaleapp/cigale/main/examples/arthropods.cigaleprotocol.json").then(n=>n.text());await e.importProtocol({contents:t,isJSON:!0},({phase:n,detail:a})=>{let o="";switch(n){case"parsing":o="Analyse";break;case"filtering-builtin-metadata":o="Filtrage des métadonnées intégrées";break;case"input-validation":o="Validation";break;case"write-protocol":o="Écriture du protocole";break;case"write-metadata":o=`Écriture de la métadonnée<br>${a}`;break;case"write-metadata-options":o=`Écriture des options de la métadonnée<br>${a}`;break;case"output-validation":o="Post-validation";break;default:break}M(`Chargement du protocole intégré<br>${o}`)})}catch(t){console.error(t),te.error("Impossible de charger le protocole par défaut. Vérifiez votre connexion Internet ou essayez de recharger la page.")}}function M(e){const r=(t,n)=>{const a=document.getElementById(t);a&&(a.innerHTML=n)};r("loading-title","Chargement…"),r("loading-message",e)}const Jt=Object.freeze(Object.defineProperty({__proto__:null,load:Et},Symbol.toStringTag,{value:"Module"}));export{Xt as component,Jt as universal};
