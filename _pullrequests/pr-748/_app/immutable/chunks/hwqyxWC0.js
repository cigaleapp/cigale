import{c as He,t as N,G as ke,M as wt,b as Y,I as Rt,H as lt,E as Lt,S as Bt,J as se,P as Tt,K as Ot,L as Gt,e as Mt,o as ft,N as ut}from"./BCT7fajR.js";import{a as je}from"./DLg_PPZ_.js";import{s as ct}from"./CJd3y8SF.js";import{u as P,b as kt,e as Nt,f as qe,m as Ut}from"./yjQBtq-m.js";import{l as _t,m as mt,r as pt,s as xt,j as dt,h as Oe,c as We,n as zt,k as Vt,d as Ht}from"./BbY4Fv7Y.js";import{f as jt}from"./C8qYVKmu.js";import{t as W}from"./BVoxKip6.js";import{l as qt,e as Je,m as Xe,p as Ye,o as Wt,r as Jt,q as Xt,n as $e}from"./Csf0LG85.js";function _i(t,e){const i=+He(t)-+He(e);return i<0?-1:i>0?1:i}async function Yt(t,e,i){if(!P.currentProtocol)throw new Error("Aucun protocole sélectionné");if(!P.classificationMetadataId){console.warn("No metadata with neural inference defined, not analyzing image. Configure neural inference on a enum metadata (set metadata.<your metadata id>.infer.neural) if this was not intentional.");return}const{cancel:a,request:l}=t.classify.cancelable({imageId:e,metadataIds:{cropbox:P.cropMetadataId,target:P.classificationMetadataId},taskSettings:$t(P.currentProtocol,P.selectedClassificationModel)});i?.set(e,a),await l,await N.Image.refresh()}function $t(t,e){const i=ke.case({id:Y.string.narrow(a=>t.metadata.includes(a)),type:'"enum"',infer:wt},a=>a.infer.neural[e]).default(()=>{});return N.Metadata.state.map(a=>i(a)).filter(Boolean).at(0)}var ve,Qe;function Qt(){return Qe||(Qe=1,ve={parseSections:function(t,e){var i,a;for(t.setBigEndian(!0);t.remainingLength()>0&&a!==218;){if(t.nextUInt8()!==255)throw new Error("Invalid JPEG section offset");a=t.nextUInt8(),a>=208&&a<=217||a===218?i=0:i=t.nextUInt16()-2,e(a,t.branch(0,i)),t.skip(i)}},getSizeFromSOFSection:function(t){return t.skip(1),{height:t.nextUInt16(),width:t.nextUInt16()}},getSectionName:function(t){var e,i;switch(t){case 216:e="SOI";break;case 196:e="DHT";break;case 219:e="DQT";break;case 221:e="DRI";break;case 218:e="SOS";break;case 254:e="COM";break;case 217:e="EOI";break;default:t>=224&&t<=239?(e="APP",i=t-224):t>=192&&t<=207&&t!==196&&t!==200&&t!==204?(e="SOF",i=t-192):t>=208&&t<=215&&(e="RST",i=t-208);break}var a={name:e};return typeof i=="number"&&(a.index=i),a}}),ve}var Ce,Ze;function ht(){if(Ze)return Ce;Ze=1;function t(f,u){switch(f){case 1:return u.nextUInt8();case 3:return u.nextUInt16();case 4:return u.nextUInt32();case 5:return[u.nextUInt32(),u.nextUInt32()];case 6:return u.nextInt8();case 8:return u.nextUInt16();case 9:return u.nextUInt32();case 10:return[u.nextInt32(),u.nextInt32()];case 11:return u.nextFloat();case 12:return u.nextDouble();default:throw new Error("Invalid format while decoding: "+f)}}function e(f){switch(f){case 1:case 2:case 6:case 7:return 1;case 3:case 8:return 2;case 4:case 9:case 11:return 4;case 5:case 10:case 12:return 8;default:return 0}}function i(f,u){var c=u.nextUInt16(),m=u.nextUInt16(),v=e(m),d=u.nextUInt32(),h=v*d,C,S;if(h>4&&(u=f.openWithOffset(u.nextUInt32())),m===2){C=u.nextString(d);var y=C.indexOf("\0");y!==-1&&(C=C.substr(0,y))}else if(m===7)C=u.nextBuffer(d);else if(m!==0)for(C=[],S=0;S<d;++S)C.push(t(m,u));return h<4&&u.skip(4-h),[c,C,m]}function a(f,u,c){var m=u.nextUInt16(),v,d;for(d=0;d<m;++d)v=i(f,u),c(v[0],v[1],v[2])}function l(f){var u=f.nextString(6);if(u!=="Exif\0\0")throw new Error("Invalid EXIF header");var c=f.mark(),m=f.nextUInt16();if(m===18761)f.setBigEndian(!1);else if(m===19789)f.setBigEndian(!0);else throw new Error("Invalid TIFF header");if(f.nextUInt16()!==42)throw new Error("Invalid TIFF data");return c}return Ce={IFD0:1,IFD1:2,GPSIFD:3,SubIFD:4,InteropIFD:5,parseTags:function(f,u){var c;try{c=l(f)}catch{return!1}var m,v,d,h=c.openWithOffset(f.nextUInt32()),C=this.IFD0;a(c,h,function(I,T,n){switch(I){case 34853:v=T[0];break;case 34665:m=T[0];break;default:u(C,I,T,n);break}});var S=h.nextUInt32();if(S!==0){var y=c.openWithOffset(S);a(c,y,u.bind(null,this.IFD1))}if(v){var F=c.openWithOffset(v);a(c,F,u.bind(null,this.GPSIFD))}if(m){var B=c.openWithOffset(m),R=this.InteropIFD;a(c,B,function(I,T,n){I===40965?d=T[0]:u(R,I,T,n)})}if(d){var O=c.openWithOffset(d);a(c,O,u.bind(null,this.InteropIFD))}return!0}},Ce}var Pe,Ke;function Zt(){if(Ke)return Pe;Ke=1;function t(c){return parseInt(c,10)}var e=3600,i=60;function a(c,m){c=c.map(t),m=m.map(t);var v=c[0],d=c[1]-1,h=c[2],C=m[0],S=m[1],y=m[2],F=Date.UTC(v,d,h,C,S,y,0),B=F/1e3;return B}function l(c){var m=c.substr(0,10).split("-"),v=c.substr(11,8).split(":"),d=c.substr(19,6),h=d.split(":").map(t),C=h[0]*e+h[1]*i,S=a(m,v);if(S-=C,typeof S=="number"&&!isNaN(S))return S}function f(c){var m=c.split(" "),v=m[0].split(":"),d=m[1].split(":"),h=a(v,d);if(typeof h=="number"&&!isNaN(h))return h}function u(c){var m=c.length===19&&c.charAt(4)===":",v=c.length===25&&c.charAt(10)==="T";if(v)return l(c);if(m)return f(c)}return Pe={parseDateWithSpecFormat:f,parseDateWithTimezoneFormat:l,parseExifDate:u},Pe}var Ie,et;function Kt(){if(et)return Ie;et=1;var t=ht(),e=Zt(),i=[{section:t.GPSIFD,type:2,name:"GPSLatitude",refType:1,refName:"GPSLatitudeRef",posVal:"N"},{section:t.GPSIFD,type:4,name:"GPSLongitude",refType:3,refName:"GPSLongitudeRef",posVal:"E"}],a=[{section:t.SubIFD,type:306,name:"ModifyDate"},{section:t.SubIFD,type:36867,name:"DateTimeOriginal"},{section:t.SubIFD,type:36868,name:"CreateDate"},{section:t.SubIFD,type:306,name:"ModifyDate"}];return Ie={castDegreeValues:function(l,f){i.forEach(function(u){var c=l(u);if(c){var m=l({section:u.section,type:u.refType,name:u.refName}),v=m===u.posVal?1:-1,d=(c[0]+c[1]/60+c[2]/3600)*v;f(u,d)}})},castDateValues:function(l,f){a.forEach(function(u){var c=l(u);if(c){var m=e.parseExifDate(c);typeof m<"u"&&f(u,m)}})},simplifyValue:function(l,f){return Array.isArray(l)&&(l=l.map(function(u){return f===10||f===5?u[0]/u[1]:u}),l.length===1&&(l=l[0])),l}},Ie}var be,tt;function ei(){return tt||(tt=1,be={exif:{1:"InteropIndex",2:"InteropVersion",11:"ProcessingSoftware",254:"SubfileType",255:"OldSubfileType",256:"ImageWidth",257:"ImageHeight",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Thresholding",264:"CellWidth",265:"CellLength",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",292:"T4Options",293:"T6Options",296:"ResolutionUnit",297:"PageNumber",300:"ColorResponseUnit",301:"TransferFunction",305:"Software",306:"ModifyDate",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFD",332:"InkSet",333:"InkNames",334:"NumberofInks",336:"DotRange",337:"TargetPrinter",338:"ExtraSamples",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",435:"T82Options",437:"JPEGTables",512:"JPEGProc",513:"ThumbnailOffset",514:"ThumbnailLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"ApplicationNotes",999:"USPTOMiscellaneous",4096:"RelatedImageFileFormat",4097:"RelatedImageWidth",4098:"RelatedImageHeight",18246:"Rating",18247:"XP_DIP_XML",18248:"StitchInfo",18249:"RatingPercent",32781:"ImageID",32931:"WangTag1",32932:"WangAnnotation",32933:"WangTag3",32934:"WangTag4",32995:"Matteing",32996:"DataType",32997:"ImageDepth",32998:"TileDepth",33405:"Model2",33421:"CFARepeatPatternDim",33422:"CFAPattern2",33423:"BatteryLevel",33424:"KodakIFD",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"PixelScale",33589:"AdventScale",33590:"AdventRevision",33628:"UIC1Tag",33629:"UIC2Tag",33630:"UIC3Tag",33631:"UIC4Tag",33723:"IPTC-NAA",33918:"IntergraphPacketData",33919:"IntergraphFlagRegisters",33920:"IntergraphMatrix",33921:"INGRReserved",33922:"ModelTiePoint",34016:"Site",34017:"ColorSequence",34018:"IT8Header",34019:"RasterPadding",34020:"BitsPerRunLength",34021:"BitsPerExtendedRunLength",34022:"ColorTable",34023:"ImageColorIndicator",34024:"BackgroundColorIndicator",34025:"ImageColorValue",34026:"BackgroundColorValue",34027:"PixelIntensityRange",34028:"TransparencyIndicator",34029:"ColorCharacterization",34030:"HCUsage",34031:"TrapIndicator",34032:"CMYKEquivalent",34118:"SEMInfo",34152:"AFCP_IPTC",34232:"PixelMagicJBIGOptions",34264:"ModelTransform",34306:"WB_GRGBLevels",34310:"LeafData",34377:"PhotoshopSettings",34665:"ExifOffset",34675:"ICC_Profile",34687:"TIFF_FXExtensions",34688:"MultiProfiles",34689:"SharedData",34690:"T88Options",34732:"ImageLayer",34735:"GeoTiffDirectory",34736:"GeoTiffDoubleParams",34737:"GeoTiffAsciiParams",34850:"ExposureProgram",34852:"SpectralSensitivity",34853:"GPSInfo",34855:"ISO",34856:"Opto-ElectricConvFactor",34857:"Interlace",34858:"TimeZoneOffset",34859:"SelfTimerMode",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",34908:"FaxRecvParams",34909:"FaxSubAddress",34910:"FaxRecvTime",34954:"LeafSubIFD",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"CreateDate",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureCompensation",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37387:"FlashEnergy",37388:"SpatialFrequencyResponse",37389:"Noise",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37394:"SecurityClassification",37395:"ImageHistory",37396:"SubjectArea",37397:"ExposureIndex",37398:"TIFF-EPStandardID",37399:"SensingMethod",37434:"CIP3DataFile",37435:"CIP3Sheet",37436:"CIP3Side",37439:"StoNits",37500:"MakerNote",37510:"UserComment",37520:"SubSecTime",37521:"SubSecTimeOriginal",37522:"SubSecTimeDigitized",37679:"MSDocumentText",37680:"MSPropertySetStorage",37681:"MSDocumentTextPosition",37724:"ImageSourceData",40091:"XPTitle",40092:"XPComment",40093:"XPAuthor",40094:"XPKeywords",40095:"XPSubject",40960:"FlashpixVersion",40961:"ColorSpace",40962:"ExifImageWidth",40963:"ExifImageHeight",40964:"RelatedSoundFile",40965:"InteropOffset",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41485:"Noise",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41489:"ImageNumber",41490:"SecurityClassification",41491:"ImageHistory",41492:"SubjectLocation",41493:"ExposureIndex",41494:"TIFF-EPStandardID",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFormat",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"OwnerName",42033:"SerialNumber",42034:"LensInfo",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42112:"GDALMetadata",42113:"GDALNoData",42240:"Gamma",44992:"ExpandSoftware",44993:"ExpandLens",44994:"ExpandFilm",44995:"ExpandFilterLens",44996:"ExpandScanner",44997:"ExpandFlashLamp",48129:"PixelFormat",48130:"Transformation",48131:"Uncompressed",48132:"ImageType",48256:"ImageWidth",48257:"ImageHeight",48258:"WidthResolution",48259:"HeightResolution",48320:"ImageOffset",48321:"ImageByteCount",48322:"AlphaOffset",48323:"AlphaByteCount",48324:"ImageDataDiscard",48325:"AlphaDataDiscard",50215:"OceScanjobDesc",50216:"OceApplicationSelector",50217:"OceIDNumber",50218:"OceImageLogic",50255:"Annotations",50341:"PrintIM",50560:"USPTOOriginalContentType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"DNGLensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50752:"RawImageSegmentation",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50784:"AliasLayerMetadata",50827:"OriginalRawFileName",50828:"OriginalRawFileData",50829:"ActiveArea",50830:"MaskedAreas",50831:"AsShotICCProfile",50832:"AsShotPreProfileMatrix",50833:"CurrentICCProfile",50834:"CurrentPreProfileMatrix",50879:"ColorimetricReference",50898:"PanasonicTitle",50899:"PanasonicTitle2",50931:"CameraCalibrationSig",50932:"ProfileCalibrationSig",50933:"ProfileIFD",50934:"AsShotProfileName",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50968:"PreviewSettingsName",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",50973:"OriginalRawFileDigest",50974:"SubTileBlockSize",50975:"RowInterleaveFactor",50981:"ProfileLookTableDims",50982:"ProfileLookTableData",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51043:"TimeCodes",51044:"FrameRate",51058:"TStop",51081:"ReelName",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualitySize",51091:"OriginalDefaultCropSize",51105:"CameraLabel",51107:"ProfileHueSatMapEncoding",51108:"ProfileLookTableEncoding",51109:"BaselineExposureOffset",51110:"DefaultBlackRender",51111:"NewRawImageDigest",51112:"RawToPreviewGain",51125:"DefaultUserCrop",59932:"Padding",59933:"OffsetSchema",65e3:"OwnerName",65001:"SerialNumber",65002:"Lens",65024:"KDC_IFD",65100:"RawFile",65101:"Converter",65102:"WhiteBalance",65105:"Exposure",65106:"Shadows",65107:"Brightness",65108:"Contrast",65109:"Saturation",65110:"Sharpness",65111:"Smoothness",65112:"MoireFilter"},gps:{0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"}}),be}var De,it;function ti(){if(it)return De;it=1;var t=Qt(),e=ht(),i=Kt();function a(f,u,c,m,v,d,h){this.startMarker=f,this.tags=u,this.imageSize=c,this.thumbnailOffset=m,this.thumbnailLength=v,this.thumbnailType=d,this.app1Offset=h}a.prototype={hasThumbnail:function(f){return!this.thumbnailOffset||!this.thumbnailLength?!1:typeof f!="string"?!0:f.toLowerCase().trim()==="image/jpeg"?this.thumbnailType===6:f.toLowerCase().trim()==="image/tiff"?this.thumbnailType===1:!1},getThumbnailOffset:function(){return this.app1Offset+6+this.thumbnailOffset},getThumbnailLength:function(){return this.thumbnailLength},getThumbnailBuffer:function(){return this._getThumbnailStream().nextBuffer(this.thumbnailLength)},_getThumbnailStream:function(){return this.startMarker.openWithOffset(this.getThumbnailOffset())},getImageSize:function(){return this.imageSize},getThumbnailSize:function(){var f=this._getThumbnailStream(),u;return t.parseSections(f,function(c,m){t.getSectionName(c).name==="SOF"&&(u=t.getSizeFromSOFSection(m))}),u}};function l(f){this.stream=f,this.flags={readBinaryTags:!1,resolveTagNames:!0,simplifyValues:!0,imageSize:!0,hidePointers:!0,returnTags:!0}}return l.prototype={enableBinaryFields:function(f){return this.flags.readBinaryTags=!!f,this},enablePointers:function(f){return this.flags.hidePointers=!f,this},enableTagNames:function(f){return this.flags.resolveTagNames=!!f,this},enableImageSize:function(f){return this.flags.imageSize=!!f,this},enableReturnTags:function(f){return this.flags.returnTags=!!f,this},enableSimpleValues:function(f){return this.flags.simplifyValues=!!f,this},parse:function(){var f=this.stream.mark(),u=f.openWithOffset(0),c=this.flags,m,v,d,h,C,S,y,F,B;return c.resolveTagNames&&(y=ei()),c.resolveTagNames?(m={},F=function(R){return m[R.name]},B=function(R,O){m[R.name]=O}):(m=[],F=function(R){var O;for(O=0;O<m.length;++O)if(m[O].type===R.type&&m[O].section===R.section)return m.value},B=function(R,O){var I;for(I=0;I<m.length;++I)if(m[I].type===R.type&&m[I].section===R.section){m.value=O;return}}),t.parseSections(u,function(R,O){var I,T=O.offsetFrom(f);R===225?(I=e.parseTags(O,function(n,r,o,p){if(!(!c.readBinaryTags&&p===7)){if(r===513){if(d=o[0],c.hidePointers)return}else if(r===514){if(h=o[0],c.hidePointers)return}else if(r===259&&(C=o[0],c.hidePointers))return;if(c.returnTags)if(c.simplifyValues&&(o=i.simplifyValue(o,p)),c.resolveTagNames){var x=n===e.GPSIFD?y.gps:y.exif,s=x[r];s||(s=y.exif[r]),m.hasOwnProperty(s)||(m[s]=o)}else m.push({section:n,type:r,value:o})}}),I&&(S=T)):c.imageSize&&t.getSectionName(R).name==="SOF"&&(v=t.getSizeFromSOFSection(O))}),c.simplifyValues&&(i.castDegreeValues(F,B),i.castDateValues(F,B)),new a(f,m,v,d,h,C,S)}},De=l,De}var Ee,at;function ii(){if(at)return Ee;at=1;function t(e,i,a,l,f,u){this.global=f,i=i||0,a=a||e.byteLength-i,this.arrayBuffer=e.slice(i,i+a),this.view=new f.DataView(this.arrayBuffer,0,this.arrayBuffer.byteLength),this.setBigEndian(l),this.offset=0,this.parentOffset=(u||0)+i}return t.prototype={setBigEndian:function(e){this.littleEndian=!e},nextUInt8:function(){var e=this.view.getUint8(this.offset);return this.offset+=1,e},nextInt8:function(){var e=this.view.getInt8(this.offset);return this.offset+=1,e},nextUInt16:function(){var e=this.view.getUint16(this.offset,this.littleEndian);return this.offset+=2,e},nextUInt32:function(){var e=this.view.getUint32(this.offset,this.littleEndian);return this.offset+=4,e},nextInt16:function(){var e=this.view.getInt16(this.offset,this.littleEndian);return this.offset+=2,e},nextInt32:function(){var e=this.view.getInt32(this.offset,this.littleEndian);return this.offset+=4,e},nextFloat:function(){var e=this.view.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e},nextDouble:function(){var e=this.view.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},nextBuffer:function(e){var i=this.arrayBuffer.slice(this.offset,this.offset+e);return this.offset+=e,i},remainingLength:function(){return this.arrayBuffer.byteLength-this.offset},nextString:function(e){var i=this.arrayBuffer.slice(this.offset,this.offset+e);return i=String.fromCharCode.apply(null,new this.global.Uint8Array(i)),this.offset+=e,i},mark:function(){var e=this;return{openWithOffset:function(i){return i=(i||0)+this.offset,new t(e.arrayBuffer,i,e.arrayBuffer.byteLength-i,!e.littleEndian,e.global,e.parentOffset)},offset:this.offset,getParentOffset:function(){return e.parentOffset}}},offsetFrom:function(e){return this.parentOffset+this.offset-(e.offset+e.getParentOffset())},skip:function(e){this.offset+=e},branch:function(e,i){return i=typeof i=="number"?i:this.arrayBuffer.byteLength-(this.offset+e),new t(this.arrayBuffer,this.offset+e,i,!this.littleEndian,this.global,this.parentOffset)}},Ee=t,Ee}var Ae,nt;function ai(){if(nt)return Ae;nt=1;function t(e,i,a,l){this.buffer=e,this.offset=i||0,a=typeof a=="number"?a:e.length,this.endPosition=this.offset+a,this.setBigEndian(l)}return t.prototype={setBigEndian:function(e){this.bigEndian=!!e},nextUInt8:function(){var e=this.buffer.readUInt8(this.offset);return this.offset+=1,e},nextInt8:function(){var e=this.buffer.readInt8(this.offset);return this.offset+=1,e},nextUInt16:function(){var e=this.bigEndian?this.buffer.readUInt16BE(this.offset):this.buffer.readUInt16LE(this.offset);return this.offset+=2,e},nextUInt32:function(){var e=this.bigEndian?this.buffer.readUInt32BE(this.offset):this.buffer.readUInt32LE(this.offset);return this.offset+=4,e},nextInt16:function(){var e=this.bigEndian?this.buffer.readInt16BE(this.offset):this.buffer.readInt16LE(this.offset);return this.offset+=2,e},nextInt32:function(){var e=this.bigEndian?this.buffer.readInt32BE(this.offset):this.buffer.readInt32LE(this.offset);return this.offset+=4,e},nextFloat:function(){var e=this.bigEndian?this.buffer.readFloatBE(this.offset):this.buffer.readFloatLE(this.offset);return this.offset+=4,e},nextDouble:function(){var e=this.bigEndian?this.buffer.readDoubleBE(this.offset):this.buffer.readDoubleLE(this.offset);return this.offset+=8,e},nextBuffer:function(e){var i=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,i},remainingLength:function(){return this.endPosition-this.offset},nextString:function(e){var i=this.buffer.toString("utf8",this.offset,this.offset+e);return this.offset+=e,i},mark:function(){var e=this;return{openWithOffset:function(i){return i=(i||0)+this.offset,new t(e.buffer,i,e.endPosition-i,e.bigEndian)},offset:this.offset}},offsetFrom:function(e){return this.offset-e.offset},skip:function(e){this.offset+=e},branch:function(e,i){return i=typeof i=="number"?i:this.endPosition-(this.offset+e),new t(this.buffer,this.offset+e,i,this.bigEndian)}},Ae=t,Ae}var Fe,rt;function ni(){if(rt)return Fe;rt=1;var t=ti();function e(){return(0,eval)("this")}return Fe={create:function(i,a){if(a=a||e(),i instanceof a.ArrayBuffer){var l=ii();return new t(new l(i,0,i.byteLength,!0,a))}else{var f=ai();return new t(new f(i,0,i.length,!0))}}},Fe}var ri=ni(),Se={exports:{}},ot;function oi(){return ot||(ot=1,(function(t,e){(function(){var i={};i.version="1.0.4",i.remove=function(n){var r=!1;if(n.slice(0,2)!="ÿØ")if(n.slice(0,23)=="data:image/jpeg;base64,"||n.slice(0,22)=="data:image/jpg;base64,")n=C(n.split(",")[1]),r=!0;else throw new Error("Given data is not jpeg.");var o=B(n),p=o.filter(function(s){return!(s.slice(0,2)=="ÿá"&&s.slice(4,10)=="Exif\0\0")}),x=p.join("");return r&&(x="data:image/jpeg;base64,"+h(x)),x},i.insert=function(n,r){var o=!1;if(n.slice(0,6)!="Exif\0\0")throw new Error("Given data is not exif.");if(r.slice(0,2)!="ÿØ")if(r.slice(0,23)=="data:image/jpeg;base64,"||r.slice(0,22)=="data:image/jpg;base64,")r=C(r.split(",")[1]),o=!0;else throw new Error("Given data is not jpeg.");var p="ÿá"+S(">H",[n.length+2])+n,x=B(r),s=O(x,p);return o&&(s="data:image/jpeg;base64,"+h(s)),s},i.load=function(n){var r;if(typeof n=="string")if(n.slice(0,2)=="ÿØ")r=n;else if(n.slice(0,23)=="data:image/jpeg;base64,"||n.slice(0,22)=="data:image/jpg;base64,")r=C(n.split(",")[1]);else if(n.slice(0,4)=="Exif")r=n.slice(6);else throw new Error("'load' gots invalid file data.");else throw new Error("'load' gots invalid type argument.");var o={"0th":{},Exif:{},GPS:{},Interop:{},"1st":{},thumbnail:null},p=new d(r);if(p.tiftag===null)return o;p.tiftag.slice(0,2)=="II"?p.endian_mark="<":p.endian_mark=">";var x=y(p.endian_mark+"L",p.tiftag.slice(4,8))[0];o["0th"]=p.get_ifd(x,"0th");var s=o["0th"].first_ifd_pointer;if(delete o["0th"].first_ifd_pointer,34665 in o["0th"]&&(x=o["0th"][34665],o.Exif=p.get_ifd(x,"Exif")),34853 in o["0th"]&&(x=o["0th"][34853],o.GPS=p.get_ifd(x,"GPS")),40965 in o.Exif&&(x=o.Exif[40965],o.Interop=p.get_ifd(x,"Interop")),s!="\0\0\0\0"&&(x=y(p.endian_mark+"L",s)[0],o["1st"]=p.get_ifd(x,"1st"),513 in o["1st"]&&514 in o["1st"])){var g=o["1st"][513]+o["1st"][514],E=p.tiftag.slice(o["1st"][513],g);o.thumbnail=E}return o},i.dump=function(n){var r=8,o=a(n),p="Exif\0\0MM\0*\0\0\0\b",x=!1,s=!1,g=!1,E=!1,D,b,w,A,q;"0th"in o?D=o["0th"]:D={},"Exif"in o&&Object.keys(o.Exif).length||"Interop"in o&&Object.keys(o.Interop).length?(D[34665]=1,x=!0,b=o.Exif,"Interop"in o&&Object.keys(o.Interop).length?(b[40965]=1,g=!0,w=o.Interop):Object.keys(b).indexOf(i.ExifIFD.InteroperabilityTag.toString())>-1&&delete b[40965]):Object.keys(D).indexOf(i.ImageIFD.ExifTag.toString())>-1&&delete D[34665],"GPS"in o&&Object.keys(o.GPS).length?(D[i.ImageIFD.GPSTag]=1,s=!0,A=o.GPS):Object.keys(D).indexOf(i.ImageIFD.GPSTag.toString())>-1&&delete D[i.ImageIFD.GPSTag],"1st"in o&&"thumbnail"in o&&o.thumbnail!=null&&(E=!0,o["1st"][513]=1,o["1st"][514]=1,q=o["1st"]);var X=v(D,"0th",0),G=X[0].length+x*12+s*12+4+X[1].length,_,ie="",M=0,z,ae="",V=0,ne,ee="",re=0,Q,ge="",te;if(x&&(_=v(b,"Exif",G),M=_[0].length+g*12+_[1].length),s&&(z=v(A,"GPS",G+M),ae=z.join(""),V=ae.length),g){var oe=G+M+V;ne=v(w,"Interop",oe),ee=ne.join(""),re=ee.length}if(E){var oe=G+M+V+re;if(Q=v(q,"1st",oe),te=l(o.thumbnail),te.length>64e3)throw new Error("Given thumbnail is too large. max 64kB")}var fe="",_e="",ze="",Ve="\0\0\0\0";if(x){var Z=r+G,ue=S(">L",[Z]),ce=34665,me=S(">H",[ce]),pe=S(">H",[I.Long]),xe=S(">L",[1]);fe=me+pe+xe+ue}if(s){var Z=r+G+M,ue=S(">L",[Z]),ce=34853,me=S(">H",[ce]),pe=S(">H",[I.Long]),xe=S(">L",[1]);_e=me+pe+xe+ue}if(g){var Z=r+G+M+V,ue=S(">L",[Z]),ce=40965,me=S(">H",[ce]),pe=S(">H",[I.Long]),xe=S(">L",[1]);ze=me+pe+xe+ue}if(E){var Z=r+G+M+V+re;Ve=S(">L",[Z]);var Dt=Z+Q[0].length+24+4+Q[1].length,Et="\0\0\0\0"+S(">L",[Dt]),At="\0\0\0\0"+S(">L",[te.length]);ge=Q[0]+Et+At+"\0\0\0\0"+Q[1]+te}var Ft=X[0]+fe+_e+Ve+X[1];return x&&(ie=_[0]+ze+_[1]),p+Ft+ie+ae+ee+ge};function a(n){return JSON.parse(JSON.stringify(n))}function l(n){for(var r=B(n);"ÿà"<=r[1].slice(0,2)&&r[1].slice(0,2)<="ÿï";)r=[r[0]].concat(r.slice(2));return r.join("")}function f(n){return S(">"+F("B",n.length),n)}function u(n){return S(">"+F("H",n.length),n)}function c(n){return S(">"+F("L",n.length),n)}function m(n,r,o){var p="",x="",s,g,E,D;if(r=="Byte")s=n.length,s<=4?x=f(n)+F("\0",4-s):(x=S(">L",[o]),p=f(n));else if(r=="Short")s=n.length,s<=2?x=u(n)+F("\0\0",2-s):(x=S(">L",[o]),p=u(n));else if(r=="Long")s=n.length,s<=1?x=c(n):(x=S(">L",[o]),p=c(n));else if(r=="Ascii")g=n+"\0",s=g.length,s>4?(x=S(">L",[o]),p=g):x=g+F("\0",4-s);else if(r=="Rational"){if(typeof n[0]=="number")s=1,E=n[0],D=n[1],g=S(">L",[E])+S(">L",[D]);else{s=n.length,g="";for(var b=0;b<s;b++)E=n[b][0],D=n[b][1],g+=S(">L",[E])+S(">L",[D])}x=S(">L",[o]),p=g}else if(r=="SRational"){if(typeof n[0]=="number")s=1,E=n[0],D=n[1],g=S(">l",[E])+S(">l",[D]);else{s=n.length,g="";for(var b=0;b<s;b++)E=n[b][0],D=n[b][1],g+=S(">l",[E])+S(">l",[D])}x=S(">L",[o]),p=g}else r=="Undefined"&&(s=n.length,s>4?(x=S(">L",[o]),p=n):x=n+F("\0",4-s));var w=S(">L",[s]);return[w,x,p]}function v(n,r,o){var p=8,x=Object.keys(n).length,s=S(">H",[x]),g;["0th","1st"].indexOf(r)>-1?g=2+x*12+4:g=2+x*12;var E="",D="",b;for(var b in n)if(typeof b=="string"&&(b=parseInt(b)),!(r=="0th"&&[34665,34853].indexOf(b)>-1)){{if(r=="Exif"&&b==40965)continue;if(r=="1st"&&[513,514].indexOf(b)>-1)continue}var w=n[b],A=S(">H",[b]),q=T[r][b].type,X=S(">H",[I[q]]);typeof w=="number"&&(w=[w]);var G=p+g+o+D.length,_=m(w,q,G),ie=_[0],M=_[1],z=_[2];E+=A+X+ie+M,D+=z}return[s+E,D]}function d(n){var r,o;if(n.slice(0,2)=="ÿØ")r=B(n),o=R(r),o?this.tiftag=o.slice(10):this.tiftag=null;else if(["II","MM"].indexOf(n.slice(0,2))>-1)this.tiftag=n;else if(n.slice(0,4)=="Exif")this.tiftag=n.slice(6);else throw new Error("Given file is neither JPEG nor TIFF.")}if(d.prototype={get_ifd:function(n,r){var o={},p=y(this.endian_mark+"H",this.tiftag.slice(n,n+2))[0],x=n+2,s;["0th","1st"].indexOf(r)>-1?s="Image":s=r;for(var g=0;g<p;g++){n=x+12*g;var E=y(this.endian_mark+"H",this.tiftag.slice(n,n+2))[0],D=y(this.endian_mark+"H",this.tiftag.slice(n+2,n+4))[0],b=y(this.endian_mark+"L",this.tiftag.slice(n+4,n+8))[0],w=this.tiftag.slice(n+8,n+12),A=[D,b,w];E in T[s]&&(o[E]=this.convert_value(A))}return r=="0th"&&(n=x+12*p,o.first_ifd_pointer=this.tiftag.slice(n,n+4)),o},convert_value:function(n){var r=null,o=n[0],p=n[1],x=n[2],s;if(o==1)p>4?(s=y(this.endian_mark+"L",x)[0],r=y(this.endian_mark+F("B",p),this.tiftag.slice(s,s+p))):r=y(this.endian_mark+F("B",p),x.slice(0,p));else if(o==2)p>4?(s=y(this.endian_mark+"L",x)[0],r=this.tiftag.slice(s,s+p-1)):r=x.slice(0,p-1);else if(o==3)p>2?(s=y(this.endian_mark+"L",x)[0],r=y(this.endian_mark+F("H",p),this.tiftag.slice(s,s+p*2))):r=y(this.endian_mark+F("H",p),x.slice(0,p*2));else if(o==4)p>1?(s=y(this.endian_mark+"L",x)[0],r=y(this.endian_mark+F("L",p),this.tiftag.slice(s,s+p*4))):r=y(this.endian_mark+F("L",p),x);else if(o==5)if(s=y(this.endian_mark+"L",x)[0],p>1){r=[];for(var g=0;g<p;g++)r.push([y(this.endian_mark+"L",this.tiftag.slice(s+g*8,s+4+g*8))[0],y(this.endian_mark+"L",this.tiftag.slice(s+4+g*8,s+8+g*8))[0]])}else r=[y(this.endian_mark+"L",this.tiftag.slice(s,s+4))[0],y(this.endian_mark+"L",this.tiftag.slice(s+4,s+8))[0]];else if(o==7)p>4?(s=y(this.endian_mark+"L",x)[0],r=this.tiftag.slice(s,s+p)):r=x.slice(0,p);else if(o==9)p>1?(s=y(this.endian_mark+"L",x)[0],r=y(this.endian_mark+F("l",p),this.tiftag.slice(s,s+p*4))):r=y(this.endian_mark+F("l",p),x);else if(o==10)if(s=y(this.endian_mark+"L",x)[0],p>1){r=[];for(var g=0;g<p;g++)r.push([y(this.endian_mark+"l",this.tiftag.slice(s+g*8,s+4+g*8))[0],y(this.endian_mark+"l",this.tiftag.slice(s+4+g*8,s+8+g*8))[0]])}else r=[y(this.endian_mark+"l",this.tiftag.slice(s,s+4))[0],y(this.endian_mark+"l",this.tiftag.slice(s+4,s+8))[0]];else throw new Error("Exif might be wrong. Got incorrect value type to decode. type:"+o);return r instanceof Array&&r.length==1?r[0]:r}},typeof window<"u"&&typeof window.btoa=="function")var h=window.btoa;if(typeof h>"u")var h=function(r){for(var o="",p,x,s,g,E,D,b,w=0,A="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";w<r.length;)p=r.charCodeAt(w++),x=r.charCodeAt(w++),s=r.charCodeAt(w++),g=p>>2,E=(p&3)<<4|x>>4,D=(x&15)<<2|s>>6,b=s&63,isNaN(x)?D=b=64:isNaN(s)&&(b=64),o=o+A.charAt(g)+A.charAt(E)+A.charAt(D)+A.charAt(b);return o};if(typeof window<"u"&&typeof window.atob=="function")var C=window.atob;if(typeof C>"u")var C=function(r){var o="",p,x,s,g,E,D,b,w=0,A="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";for(r=r.replace(/[^A-Za-z0-9\+\/\=]/g,"");w<r.length;)g=A.indexOf(r.charAt(w++)),E=A.indexOf(r.charAt(w++)),D=A.indexOf(r.charAt(w++)),b=A.indexOf(r.charAt(w++)),p=g<<2|E>>4,x=(E&15)<<4|D>>2,s=(D&3)<<6|b,o=o+String.fromCharCode(p),D!=64&&(o=o+String.fromCharCode(x)),b!=64&&(o=o+String.fromCharCode(s));return o};function S(n,r){if(!(r instanceof Array))throw new Error("'pack' error. Got invalid type argument.");if(n.length-1!=r.length)throw new Error("'pack' error. "+(n.length-1)+" marks, "+r.length+" elements.");var o;if(n[0]=="<")o=!0;else if(n[0]==">")o=!1;else throw new Error("");for(var p="",x=1,s=null,g=null,E=null;g=n[x];){if(g.toLowerCase()=="b"){if(s=r[x-1],g=="b"&&s<0&&(s+=256),s>255||s<0)throw new Error("'pack' error.");E=String.fromCharCode(s)}else if(g=="H"){if(s=r[x-1],s>65535||s<0)throw new Error("'pack' error.");E=String.fromCharCode(Math.floor(s%65536/256))+String.fromCharCode(s%256),o&&(E=E.split("").reverse().join(""))}else if(g.toLowerCase()=="l"){if(s=r[x-1],g=="l"&&s<0&&(s+=4294967296),s>4294967295||s<0)throw new Error("'pack' error.");E=String.fromCharCode(Math.floor(s/16777216))+String.fromCharCode(Math.floor(s%16777216/65536))+String.fromCharCode(Math.floor(s%65536/256))+String.fromCharCode(s%256),o&&(E=E.split("").reverse().join(""))}else throw new Error("'pack' error.");p+=E,x+=1}return p}function y(n,r){if(typeof r!="string")throw new Error("'unpack' error. Got invalid type argument.");for(var o=0,p=1;p<n.length;p++)if(n[p].toLowerCase()=="b")o+=1;else if(n[p].toLowerCase()=="h")o+=2;else if(n[p].toLowerCase()=="l")o+=4;else throw new Error("'unpack' error. Got invalid mark.");if(o!=r.length)throw new Error("'unpack' error. Mismatch between symbol and string length. "+o+":"+r.length);var x;if(n[0]=="<")x=!0;else if(n[0]==">")x=!1;else throw new Error("'unpack' error.");for(var s=[],g=0,E=1,D=null,b=null,w=null,A="";b=n[E];){if(b.toLowerCase()=="b")w=1,A=r.slice(g,g+w),D=A.charCodeAt(0),b=="b"&&D>=128&&(D-=256);else if(b=="H")w=2,A=r.slice(g,g+w),x&&(A=A.split("").reverse().join("")),D=A.charCodeAt(0)*256+A.charCodeAt(1);else if(b.toLowerCase()=="l")w=4,A=r.slice(g,g+w),x&&(A=A.split("").reverse().join("")),D=A.charCodeAt(0)*16777216+A.charCodeAt(1)*65536+A.charCodeAt(2)*256+A.charCodeAt(3),b=="l"&&D>=2147483648&&(D-=4294967296);else throw new Error("'unpack' error. "+b);s.push(D),g+=w,E+=1}return s}function F(n,r){for(var o="",p=0;p<r;p++)o+=n;return o}function B(n){if(n.slice(0,2)!="ÿØ")throw new Error("Given data isn't JPEG.");for(var r=2,o=["ÿØ"];;){if(n.slice(r,r+2)=="ÿÚ"){o.push(n.slice(r));break}else{var p=y(">H",n.slice(r+2,r+4))[0],x=r+p+2;o.push(n.slice(r,x)),r=x}if(r>=n.length)throw new Error("Wrong JPEG data.")}return o}function R(n){for(var r,o=0;o<n.length;o++)if(r=n[o],r.slice(0,2)=="ÿá"&&r.slice(4,10)=="Exif\0\0")return r;return null}function O(n,r){var o=!1,p=[];return n.forEach(function(x,s){x.slice(0,2)=="ÿá"&&x.slice(4,10)=="Exif\0\0"&&(o?p.unshift(s):(n[s]=r,o=!0))}),p.forEach(function(x){n.splice(x,1)}),!o&&r&&(n=[n[0],r].concat(n.slice(1))),n.join("")}var I={Byte:1,Ascii:2,Short:3,Long:4,Rational:5,Undefined:7,SLong:9,SRational:10},T={Image:{11:{name:"ProcessingSoftware",type:"Ascii"},254:{name:"NewSubfileType",type:"Long"},255:{name:"SubfileType",type:"Short"},256:{name:"ImageWidth",type:"Long"},257:{name:"ImageLength",type:"Long"},258:{name:"BitsPerSample",type:"Short"},259:{name:"Compression",type:"Short"},262:{name:"PhotometricInterpretation",type:"Short"},263:{name:"Threshholding",type:"Short"},264:{name:"CellWidth",type:"Short"},265:{name:"CellLength",type:"Short"},266:{name:"FillOrder",type:"Short"},269:{name:"DocumentName",type:"Ascii"},270:{name:"ImageDescription",type:"Ascii"},271:{name:"Make",type:"Ascii"},272:{name:"Model",type:"Ascii"},273:{name:"StripOffsets",type:"Long"},274:{name:"Orientation",type:"Short"},277:{name:"SamplesPerPixel",type:"Short"},278:{name:"RowsPerStrip",type:"Long"},279:{name:"StripByteCounts",type:"Long"},282:{name:"XResolution",type:"Rational"},283:{name:"YResolution",type:"Rational"},284:{name:"PlanarConfiguration",type:"Short"},290:{name:"GrayResponseUnit",type:"Short"},291:{name:"GrayResponseCurve",type:"Short"},292:{name:"T4Options",type:"Long"},293:{name:"T6Options",type:"Long"},296:{name:"ResolutionUnit",type:"Short"},301:{name:"TransferFunction",type:"Short"},305:{name:"Software",type:"Ascii"},306:{name:"DateTime",type:"Ascii"},315:{name:"Artist",type:"Ascii"},316:{name:"HostComputer",type:"Ascii"},317:{name:"Predictor",type:"Short"},318:{name:"WhitePoint",type:"Rational"},319:{name:"PrimaryChromaticities",type:"Rational"},320:{name:"ColorMap",type:"Short"},321:{name:"HalftoneHints",type:"Short"},322:{name:"TileWidth",type:"Short"},323:{name:"TileLength",type:"Short"},324:{name:"TileOffsets",type:"Short"},325:{name:"TileByteCounts",type:"Short"},330:{name:"SubIFDs",type:"Long"},332:{name:"InkSet",type:"Short"},333:{name:"InkNames",type:"Ascii"},334:{name:"NumberOfInks",type:"Short"},336:{name:"DotRange",type:"Byte"},337:{name:"TargetPrinter",type:"Ascii"},338:{name:"ExtraSamples",type:"Short"},339:{name:"SampleFormat",type:"Short"},340:{name:"SMinSampleValue",type:"Short"},341:{name:"SMaxSampleValue",type:"Short"},342:{name:"TransferRange",type:"Short"},343:{name:"ClipPath",type:"Byte"},344:{name:"XClipPathUnits",type:"Long"},345:{name:"YClipPathUnits",type:"Long"},346:{name:"Indexed",type:"Short"},347:{name:"JPEGTables",type:"Undefined"},351:{name:"OPIProxy",type:"Short"},512:{name:"JPEGProc",type:"Long"},513:{name:"JPEGInterchangeFormat",type:"Long"},514:{name:"JPEGInterchangeFormatLength",type:"Long"},515:{name:"JPEGRestartInterval",type:"Short"},517:{name:"JPEGLosslessPredictors",type:"Short"},518:{name:"JPEGPointTransforms",type:"Short"},519:{name:"JPEGQTables",type:"Long"},520:{name:"JPEGDCTables",type:"Long"},521:{name:"JPEGACTables",type:"Long"},529:{name:"YCbCrCoefficients",type:"Rational"},530:{name:"YCbCrSubSampling",type:"Short"},531:{name:"YCbCrPositioning",type:"Short"},532:{name:"ReferenceBlackWhite",type:"Rational"},700:{name:"XMLPacket",type:"Byte"},18246:{name:"Rating",type:"Short"},18249:{name:"RatingPercent",type:"Short"},32781:{name:"ImageID",type:"Ascii"},33421:{name:"CFARepeatPatternDim",type:"Short"},33422:{name:"CFAPattern",type:"Byte"},33423:{name:"BatteryLevel",type:"Rational"},33432:{name:"Copyright",type:"Ascii"},33434:{name:"ExposureTime",type:"Rational"},34377:{name:"ImageResources",type:"Byte"},34665:{name:"ExifTag",type:"Long"},34675:{name:"InterColorProfile",type:"Undefined"},34853:{name:"GPSTag",type:"Long"},34857:{name:"Interlace",type:"Short"},34858:{name:"TimeZoneOffset",type:"Long"},34859:{name:"SelfTimerMode",type:"Short"},37387:{name:"FlashEnergy",type:"Rational"},37388:{name:"SpatialFrequencyResponse",type:"Undefined"},37389:{name:"Noise",type:"Undefined"},37390:{name:"FocalPlaneXResolution",type:"Rational"},37391:{name:"FocalPlaneYResolution",type:"Rational"},37392:{name:"FocalPlaneResolutionUnit",type:"Short"},37393:{name:"ImageNumber",type:"Long"},37394:{name:"SecurityClassification",type:"Ascii"},37395:{name:"ImageHistory",type:"Ascii"},37397:{name:"ExposureIndex",type:"Rational"},37398:{name:"TIFFEPStandardID",type:"Byte"},37399:{name:"SensingMethod",type:"Short"},40091:{name:"XPTitle",type:"Byte"},40092:{name:"XPComment",type:"Byte"},40093:{name:"XPAuthor",type:"Byte"},40094:{name:"XPKeywords",type:"Byte"},40095:{name:"XPSubject",type:"Byte"},50341:{name:"PrintImageMatching",type:"Undefined"},50706:{name:"DNGVersion",type:"Byte"},50707:{name:"DNGBackwardVersion",type:"Byte"},50708:{name:"UniqueCameraModel",type:"Ascii"},50709:{name:"LocalizedCameraModel",type:"Byte"},50710:{name:"CFAPlaneColor",type:"Byte"},50711:{name:"CFALayout",type:"Short"},50712:{name:"LinearizationTable",type:"Short"},50713:{name:"BlackLevelRepeatDim",type:"Short"},50714:{name:"BlackLevel",type:"Rational"},50715:{name:"BlackLevelDeltaH",type:"SRational"},50716:{name:"BlackLevelDeltaV",type:"SRational"},50717:{name:"WhiteLevel",type:"Short"},50718:{name:"DefaultScale",type:"Rational"},50719:{name:"DefaultCropOrigin",type:"Short"},50720:{name:"DefaultCropSize",type:"Short"},50721:{name:"ColorMatrix1",type:"SRational"},50722:{name:"ColorMatrix2",type:"SRational"},50723:{name:"CameraCalibration1",type:"SRational"},50724:{name:"CameraCalibration2",type:"SRational"},50725:{name:"ReductionMatrix1",type:"SRational"},50726:{name:"ReductionMatrix2",type:"SRational"},50727:{name:"AnalogBalance",type:"Rational"},50728:{name:"AsShotNeutral",type:"Short"},50729:{name:"AsShotWhiteXY",type:"Rational"},50730:{name:"BaselineExposure",type:"SRational"},50731:{name:"BaselineNoise",type:"Rational"},50732:{name:"BaselineSharpness",type:"Rational"},50733:{name:"BayerGreenSplit",type:"Long"},50734:{name:"LinearResponseLimit",type:"Rational"},50735:{name:"CameraSerialNumber",type:"Ascii"},50736:{name:"LensInfo",type:"Rational"},50737:{name:"ChromaBlurRadius",type:"Rational"},50738:{name:"AntiAliasStrength",type:"Rational"},50739:{name:"ShadowScale",type:"SRational"},50740:{name:"DNGPrivateData",type:"Byte"},50741:{name:"MakerNoteSafety",type:"Short"},50778:{name:"CalibrationIlluminant1",type:"Short"},50779:{name:"CalibrationIlluminant2",type:"Short"},50780:{name:"BestQualityScale",type:"Rational"},50781:{name:"RawDataUniqueID",type:"Byte"},50827:{name:"OriginalRawFileName",type:"Byte"},50828:{name:"OriginalRawFileData",type:"Undefined"},50829:{name:"ActiveArea",type:"Short"},50830:{name:"MaskedAreas",type:"Short"},50831:{name:"AsShotICCProfile",type:"Undefined"},50832:{name:"AsShotPreProfileMatrix",type:"SRational"},50833:{name:"CurrentICCProfile",type:"Undefined"},50834:{name:"CurrentPreProfileMatrix",type:"SRational"},50879:{name:"ColorimetricReference",type:"Short"},50931:{name:"CameraCalibrationSignature",type:"Byte"},50932:{name:"ProfileCalibrationSignature",type:"Byte"},50934:{name:"AsShotProfileName",type:"Byte"},50935:{name:"NoiseReductionApplied",type:"Rational"},50936:{name:"ProfileName",type:"Byte"},50937:{name:"ProfileHueSatMapDims",type:"Long"},50938:{name:"ProfileHueSatMapData1",type:"Float"},50939:{name:"ProfileHueSatMapData2",type:"Float"},50940:{name:"ProfileToneCurve",type:"Float"},50941:{name:"ProfileEmbedPolicy",type:"Long"},50942:{name:"ProfileCopyright",type:"Byte"},50964:{name:"ForwardMatrix1",type:"SRational"},50965:{name:"ForwardMatrix2",type:"SRational"},50966:{name:"PreviewApplicationName",type:"Byte"},50967:{name:"PreviewApplicationVersion",type:"Byte"},50968:{name:"PreviewSettingsName",type:"Byte"},50969:{name:"PreviewSettingsDigest",type:"Byte"},50970:{name:"PreviewColorSpace",type:"Long"},50971:{name:"PreviewDateTime",type:"Ascii"},50972:{name:"RawImageDigest",type:"Undefined"},50973:{name:"OriginalRawFileDigest",type:"Undefined"},50974:{name:"SubTileBlockSize",type:"Long"},50975:{name:"RowInterleaveFactor",type:"Long"},50981:{name:"ProfileLookTableDims",type:"Long"},50982:{name:"ProfileLookTableData",type:"Float"},51008:{name:"OpcodeList1",type:"Undefined"},51009:{name:"OpcodeList2",type:"Undefined"},51022:{name:"OpcodeList3",type:"Undefined"}},Exif:{33434:{name:"ExposureTime",type:"Rational"},33437:{name:"FNumber",type:"Rational"},34850:{name:"ExposureProgram",type:"Short"},34852:{name:"SpectralSensitivity",type:"Ascii"},34855:{name:"ISOSpeedRatings",type:"Short"},34856:{name:"OECF",type:"Undefined"},34864:{name:"SensitivityType",type:"Short"},34865:{name:"StandardOutputSensitivity",type:"Long"},34866:{name:"RecommendedExposureIndex",type:"Long"},34867:{name:"ISOSpeed",type:"Long"},34868:{name:"ISOSpeedLatitudeyyy",type:"Long"},34869:{name:"ISOSpeedLatitudezzz",type:"Long"},36864:{name:"ExifVersion",type:"Undefined"},36867:{name:"DateTimeOriginal",type:"Ascii"},36868:{name:"DateTimeDigitized",type:"Ascii"},37121:{name:"ComponentsConfiguration",type:"Undefined"},37122:{name:"CompressedBitsPerPixel",type:"Rational"},37377:{name:"ShutterSpeedValue",type:"SRational"},37378:{name:"ApertureValue",type:"Rational"},37379:{name:"BrightnessValue",type:"SRational"},37380:{name:"ExposureBiasValue",type:"SRational"},37381:{name:"MaxApertureValue",type:"Rational"},37382:{name:"SubjectDistance",type:"Rational"},37383:{name:"MeteringMode",type:"Short"},37384:{name:"LightSource",type:"Short"},37385:{name:"Flash",type:"Short"},37386:{name:"FocalLength",type:"Rational"},37396:{name:"SubjectArea",type:"Short"},37500:{name:"MakerNote",type:"Undefined"},37510:{name:"UserComment",type:"Ascii"},37520:{name:"SubSecTime",type:"Ascii"},37521:{name:"SubSecTimeOriginal",type:"Ascii"},37522:{name:"SubSecTimeDigitized",type:"Ascii"},40960:{name:"FlashpixVersion",type:"Undefined"},40961:{name:"ColorSpace",type:"Short"},40962:{name:"PixelXDimension",type:"Long"},40963:{name:"PixelYDimension",type:"Long"},40964:{name:"RelatedSoundFile",type:"Ascii"},40965:{name:"InteroperabilityTag",type:"Long"},41483:{name:"FlashEnergy",type:"Rational"},41484:{name:"SpatialFrequencyResponse",type:"Undefined"},41486:{name:"FocalPlaneXResolution",type:"Rational"},41487:{name:"FocalPlaneYResolution",type:"Rational"},41488:{name:"FocalPlaneResolutionUnit",type:"Short"},41492:{name:"SubjectLocation",type:"Short"},41493:{name:"ExposureIndex",type:"Rational"},41495:{name:"SensingMethod",type:"Short"},41728:{name:"FileSource",type:"Undefined"},41729:{name:"SceneType",type:"Undefined"},41730:{name:"CFAPattern",type:"Undefined"},41985:{name:"CustomRendered",type:"Short"},41986:{name:"ExposureMode",type:"Short"},41987:{name:"WhiteBalance",type:"Short"},41988:{name:"DigitalZoomRatio",type:"Rational"},41989:{name:"FocalLengthIn35mmFilm",type:"Short"},41990:{name:"SceneCaptureType",type:"Short"},41991:{name:"GainControl",type:"Short"},41992:{name:"Contrast",type:"Short"},41993:{name:"Saturation",type:"Short"},41994:{name:"Sharpness",type:"Short"},41995:{name:"DeviceSettingDescription",type:"Undefined"},41996:{name:"SubjectDistanceRange",type:"Short"},42016:{name:"ImageUniqueID",type:"Ascii"},42032:{name:"CameraOwnerName",type:"Ascii"},42033:{name:"BodySerialNumber",type:"Ascii"},42034:{name:"LensSpecification",type:"Rational"},42035:{name:"LensMake",type:"Ascii"},42036:{name:"LensModel",type:"Ascii"},42037:{name:"LensSerialNumber",type:"Ascii"},42240:{name:"Gamma",type:"Rational"}},GPS:{0:{name:"GPSVersionID",type:"Byte"},1:{name:"GPSLatitudeRef",type:"Ascii"},2:{name:"GPSLatitude",type:"Rational"},3:{name:"GPSLongitudeRef",type:"Ascii"},4:{name:"GPSLongitude",type:"Rational"},5:{name:"GPSAltitudeRef",type:"Byte"},6:{name:"GPSAltitude",type:"Rational"},7:{name:"GPSTimeStamp",type:"Rational"},8:{name:"GPSSatellites",type:"Ascii"},9:{name:"GPSStatus",type:"Ascii"},10:{name:"GPSMeasureMode",type:"Ascii"},11:{name:"GPSDOP",type:"Rational"},12:{name:"GPSSpeedRef",type:"Ascii"},13:{name:"GPSSpeed",type:"Rational"},14:{name:"GPSTrackRef",type:"Ascii"},15:{name:"GPSTrack",type:"Rational"},16:{name:"GPSImgDirectionRef",type:"Ascii"},17:{name:"GPSImgDirection",type:"Rational"},18:{name:"GPSMapDatum",type:"Ascii"},19:{name:"GPSDestLatitudeRef",type:"Ascii"},20:{name:"GPSDestLatitude",type:"Rational"},21:{name:"GPSDestLongitudeRef",type:"Ascii"},22:{name:"GPSDestLongitude",type:"Rational"},23:{name:"GPSDestBearingRef",type:"Ascii"},24:{name:"GPSDestBearing",type:"Rational"},25:{name:"GPSDestDistanceRef",type:"Ascii"},26:{name:"GPSDestDistance",type:"Rational"},27:{name:"GPSProcessingMethod",type:"Undefined"},28:{name:"GPSAreaInformation",type:"Undefined"},29:{name:"GPSDateStamp",type:"Ascii"},30:{name:"GPSDifferential",type:"Short"},31:{name:"GPSHPositioningError",type:"Rational"}},Interop:{1:{name:"InteroperabilityIndex",type:"Ascii"}}};T["0th"]=T.Image,T["1st"]=T.Image,i.TAGS=T,i.ImageIFD={ProcessingSoftware:11,NewSubfileType:254,SubfileType:255,ImageWidth:256,ImageLength:257,BitsPerSample:258,Compression:259,PhotometricInterpretation:262,Threshholding:263,CellWidth:264,CellLength:265,FillOrder:266,DocumentName:269,ImageDescription:270,Make:271,Model:272,StripOffsets:273,Orientation:274,SamplesPerPixel:277,RowsPerStrip:278,StripByteCounts:279,XResolution:282,YResolution:283,PlanarConfiguration:284,GrayResponseUnit:290,GrayResponseCurve:291,T4Options:292,T6Options:293,ResolutionUnit:296,TransferFunction:301,Software:305,DateTime:306,Artist:315,HostComputer:316,Predictor:317,WhitePoint:318,PrimaryChromaticities:319,ColorMap:320,HalftoneHints:321,TileWidth:322,TileLength:323,TileOffsets:324,TileByteCounts:325,SubIFDs:330,InkSet:332,InkNames:333,NumberOfInks:334,DotRange:336,TargetPrinter:337,ExtraSamples:338,SampleFormat:339,SMinSampleValue:340,SMaxSampleValue:341,TransferRange:342,ClipPath:343,XClipPathUnits:344,YClipPathUnits:345,Indexed:346,JPEGTables:347,OPIProxy:351,JPEGProc:512,JPEGInterchangeFormat:513,JPEGInterchangeFormatLength:514,JPEGRestartInterval:515,JPEGLosslessPredictors:517,JPEGPointTransforms:518,JPEGQTables:519,JPEGDCTables:520,JPEGACTables:521,YCbCrCoefficients:529,YCbCrSubSampling:530,YCbCrPositioning:531,ReferenceBlackWhite:532,XMLPacket:700,Rating:18246,RatingPercent:18249,ImageID:32781,CFARepeatPatternDim:33421,CFAPattern:33422,BatteryLevel:33423,Copyright:33432,ExposureTime:33434,ImageResources:34377,ExifTag:34665,InterColorProfile:34675,GPSTag:34853,Interlace:34857,TimeZoneOffset:34858,SelfTimerMode:34859,FlashEnergy:37387,SpatialFrequencyResponse:37388,Noise:37389,FocalPlaneXResolution:37390,FocalPlaneYResolution:37391,FocalPlaneResolutionUnit:37392,ImageNumber:37393,SecurityClassification:37394,ImageHistory:37395,ExposureIndex:37397,TIFFEPStandardID:37398,SensingMethod:37399,XPTitle:40091,XPComment:40092,XPAuthor:40093,XPKeywords:40094,XPSubject:40095,PrintImageMatching:50341,DNGVersion:50706,DNGBackwardVersion:50707,UniqueCameraModel:50708,LocalizedCameraModel:50709,CFAPlaneColor:50710,CFALayout:50711,LinearizationTable:50712,BlackLevelRepeatDim:50713,BlackLevel:50714,BlackLevelDeltaH:50715,BlackLevelDeltaV:50716,WhiteLevel:50717,DefaultScale:50718,DefaultCropOrigin:50719,DefaultCropSize:50720,ColorMatrix1:50721,ColorMatrix2:50722,CameraCalibration1:50723,CameraCalibration2:50724,ReductionMatrix1:50725,ReductionMatrix2:50726,AnalogBalance:50727,AsShotNeutral:50728,AsShotWhiteXY:50729,BaselineExposure:50730,BaselineNoise:50731,BaselineSharpness:50732,BayerGreenSplit:50733,LinearResponseLimit:50734,CameraSerialNumber:50735,LensInfo:50736,ChromaBlurRadius:50737,AntiAliasStrength:50738,ShadowScale:50739,DNGPrivateData:50740,MakerNoteSafety:50741,CalibrationIlluminant1:50778,CalibrationIlluminant2:50779,BestQualityScale:50780,RawDataUniqueID:50781,OriginalRawFileName:50827,OriginalRawFileData:50828,ActiveArea:50829,MaskedAreas:50830,AsShotICCProfile:50831,AsShotPreProfileMatrix:50832,CurrentICCProfile:50833,CurrentPreProfileMatrix:50834,ColorimetricReference:50879,CameraCalibrationSignature:50931,ProfileCalibrationSignature:50932,AsShotProfileName:50934,NoiseReductionApplied:50935,ProfileName:50936,ProfileHueSatMapDims:50937,ProfileHueSatMapData1:50938,ProfileHueSatMapData2:50939,ProfileToneCurve:50940,ProfileEmbedPolicy:50941,ProfileCopyright:50942,ForwardMatrix1:50964,ForwardMatrix2:50965,PreviewApplicationName:50966,PreviewApplicationVersion:50967,PreviewSettingsName:50968,PreviewSettingsDigest:50969,PreviewColorSpace:50970,PreviewDateTime:50971,RawImageDigest:50972,OriginalRawFileDigest:50973,SubTileBlockSize:50974,RowInterleaveFactor:50975,ProfileLookTableDims:50981,ProfileLookTableData:50982,OpcodeList1:51008,OpcodeList2:51009,OpcodeList3:51022,NoiseProfile:51041},i.ExifIFD={ExposureTime:33434,FNumber:33437,ExposureProgram:34850,SpectralSensitivity:34852,ISOSpeedRatings:34855,OECF:34856,SensitivityType:34864,StandardOutputSensitivity:34865,RecommendedExposureIndex:34866,ISOSpeed:34867,ISOSpeedLatitudeyyy:34868,ISOSpeedLatitudezzz:34869,ExifVersion:36864,DateTimeOriginal:36867,DateTimeDigitized:36868,ComponentsConfiguration:37121,CompressedBitsPerPixel:37122,ShutterSpeedValue:37377,ApertureValue:37378,BrightnessValue:37379,ExposureBiasValue:37380,MaxApertureValue:37381,SubjectDistance:37382,MeteringMode:37383,LightSource:37384,Flash:37385,FocalLength:37386,SubjectArea:37396,MakerNote:37500,UserComment:37510,SubSecTime:37520,SubSecTimeOriginal:37521,SubSecTimeDigitized:37522,FlashpixVersion:40960,ColorSpace:40961,PixelXDimension:40962,PixelYDimension:40963,RelatedSoundFile:40964,InteroperabilityTag:40965,FlashEnergy:41483,SpatialFrequencyResponse:41484,FocalPlaneXResolution:41486,FocalPlaneYResolution:41487,FocalPlaneResolutionUnit:41488,SubjectLocation:41492,ExposureIndex:41493,SensingMethod:41495,FileSource:41728,SceneType:41729,CFAPattern:41730,CustomRendered:41985,ExposureMode:41986,WhiteBalance:41987,DigitalZoomRatio:41988,FocalLengthIn35mmFilm:41989,SceneCaptureType:41990,GainControl:41991,Contrast:41992,Saturation:41993,Sharpness:41994,DeviceSettingDescription:41995,SubjectDistanceRange:41996,ImageUniqueID:42016,CameraOwnerName:42032,BodySerialNumber:42033,LensSpecification:42034,LensMake:42035,LensModel:42036,LensSerialNumber:42037,Gamma:42240},i.GPSIFD={GPSVersionID:0,GPSLatitudeRef:1,GPSLatitude:2,GPSLongitudeRef:3,GPSLongitude:4,GPSAltitudeRef:5,GPSAltitude:6,GPSTimeStamp:7,GPSSatellites:8,GPSStatus:9,GPSMeasureMode:10,GPSDOP:11,GPSSpeedRef:12,GPSSpeed:13,GPSTrackRef:14,GPSTrack:15,GPSImgDirectionRef:16,GPSImgDirection:17,GPSMapDatum:18,GPSDestLatitudeRef:19,GPSDestLatitude:20,GPSDestLongitudeRef:21,GPSDestLongitude:22,GPSDestBearingRef:23,GPSDestBearing:24,GPSDestDistanceRef:25,GPSDestDistance:26,GPSProcessingMethod:27,GPSAreaInformation:28,GPSDateStamp:29,GPSDifferential:30,GPSHPositioningError:31},i.InteropIFD={InteroperabilityIndex:1},i.GPSHelper={degToDmsRational:function(n){var r=Math.abs(n),o=r%1*60,p=o%1*60,x=Math.floor(r),s=Math.floor(o),g=Math.round(p*100);return[[x,1],[s,1],[g,100]]},dmsRationalToDeg:function(n,r){var o=r==="S"||r==="W"?-1:1,p=n[0][0]/n[0][1]+n[1][0]/n[1][1]/60+n[2][0]/n[2][1]/3600;return p*o}},t.exports&&(e=t.exports=i),e.piexif=i})()})(Se,Se.exports)),Se.exports}oi();async function si(t,e,i,a){const l=await N.Protocol.get(t);if(!l)throw new Error(`Protocole ${t} introuvable`);const f=await N.Metadata.list().then(m=>m.filter(v=>l.metadata.includes(v.id))),u=await li(i.slice(0,65635),(f??[]).map(({infer:m,type:v,id:d})=>ke.case([{exif:"string"},"|",{latitude:{exif:"string"},longitude:{exif:"string"}}],h=>({key:d,infer:h,type:v})).default(()=>{})(m)).filter(m=>m!==void 0)).catch(m=>(console.warn(m),a.type==="image/jpeg"&&W.warn(`Impossible d'extraire les métadonnées EXIF de ${a.name}: ${m?.toString()??"Erreur inattendue"}`),{})),c=await Rt("Image").then(m=>m.filter(v=>v.fileId===e));for(const{id:m}of c)for(const[v,{value:d,confidence:h}]of Object.entries(u))await kt({db:lt(),subjectId:m,metadataId:Lt(v,t),value:d,confidence:h})}async function li(t,e){const i=ri.create(t).enableImageSize(!1).parse();if(!i)return{};console.debug("Starting EXIF Extraction",{extractionPlan:e,exif:i});const a=ke.case({type:'"location"',infer:{latitude:{exif:"string"},longitude:{exif:"string"}}},({infer:l})=>({confidence:1,alternatives:{},value:{longitude:we(i.tags[l.longitude.exif],"float"),latitude:we(i.tags[l.latitude.exif],"float")}})).case({type:Bt.MetadataType,infer:{exif:"string"}},({infer:l,type:f})=>({confidence:1,alternatives:{},value:we(i.tags[l.exif],f)})).default(()=>{});return Object.fromEntries(e.map(({key:l,...f})=>[l,a(f)]).filter(([,l])=>l!==void 0&&!Y({latitude:"number.NaN",longitude:"number.NaN"}).allows(l.value)&&!Number.isNaN(l.value)))}function we(t,e){switch(e){case"string":return t?.toString()??"";case"boolean":return!!t;case"date":if(typeof t!="number")throw new Error("Date value must be a number");if(Number.isNaN(t))throw new Error("Date value is invalid");return new Date(t*1e3);case"boundingbox":throw new Error("Bounding box not supported in EXIF");case"enum":if(typeof t!="string")throw new Error("Enum value must be a string");return t;case"integer":case"float":return Number(t);default:throw new Error(`Unknown type ${e}`)}}const zi=["image/jpeg","application/zip","image/png","image/tiff",".cr2",".rw2",".dng",".crw",".raw",".cr3"];async function fi(t,e){if(!P.currentProtocol){W.error("Aucun protocole sélectionné");return}const i=await t.arrayBuffer();if(i.byteLength>_t.maxMemoryUsageInMB*Math.pow(2,20)){W.error(mt());return}const[[a,l],f]=await pt({source:t});await xt({id:e,resizedBytes:f,originalBytes:i,contentType:t.type,filename:t.name,width:a,height:l}),await N.Image.set({id:Oe(e,0),filename:t.name,addedAt:dt(Date.now()),contentType:t.type,dimensions:{width:a,height:l},fileId:e,metadata:{}}),P.processing.removeFile(e),await si(P.currentProtocol.id,e,i,t).catch(u=>{console.error(u),W.error(`Erreur lors de l'extraction des métadonnées EXIF pour ${t.name}`)})}async function ui(t,e,i){if(!P.currentProtocol){W.error("Aucun protocole sélectionné");return}if(!P.currentProtocol.crop.infer){console.warn("No crop inference defined, not analyzing image. Configure crop inference in the protocol (crop.infer) if this was not intentional.");return}if(!P.cropInferenceAvailable)return;const a=await N.Image.get(Oe(i,0));if(!a)throw new Error(`Image ${i} not found in database`);if(!a.fileId)throw new Error(`Image ${i} has no associated ImageFile in database`);const l=t.inferBoundingBoxes.cancelable({fileId:a.fileId,taskSettings:ct(P.currentProtocol.crop.infer[P.selectedCropModel])});e?.set(a.fileId,l.cancel);const{boxes:f,scores:u}=await l.request.catch(d=>/(maxMemoryUsageInMB|maxResolutionInMP) limit exceeded/.test(d?.toString())?Promise.reject(new Error(mt())):Promise.reject(d));let[c]=f,[m]=u;if(!c||!m){await N.Image.update(a.id,"boundingBoxesAnalyzed",!0);return}const v=([d,h,C,S])=>jt(P.currentProtocol)({x:d,y:h,w:C,h:S});for(let d=0;d<f.length;d++)await N.Image.set({...a,id:Oe(a.fileId,d),addedAt:dt(d===0?a.addedAt:Date.now()),boundingBoxesAnalyzed:!0,metadata:{...Nt(a.metadata),[P.cropMetadataId]:{value:JSON.stringify(v(f[d])),confidence:u[d],alternatives:{},manuallyModified:!1}}})}var k=Uint8Array,le=Uint16Array,ci=Int32Array,gt=new k([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),St=new k([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),mi=new k([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),yt=function(t,e){for(var i=new le(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];for(var l=new ci(i[30]),a=1;a<30;++a)for(var f=i[a];f<i[a+1];++f)l[f]=f-i[a]<<5|a;return{b:i,r:l}},vt=yt(gt,2),Ct=vt.b,pi=vt.r;Ct[28]=258,pi[258]=28;var xi=yt(St,0),di=xi.b,Ge=new le(32768);for(var L=0;L<32768;++L){var K=(L&43690)>>1|(L&21845)<<1;K=(K&52428)>>2|(K&13107)<<2,K=(K&61680)>>4|(K&3855)<<4,Ge[L]=((K&65280)>>8|(K&255)<<8)>>1}var de=(function(t,e,i){for(var a=t.length,l=0,f=new le(e);l<a;++l)t[l]&&++f[t[l]-1];var u=new le(e);for(l=1;l<e;++l)u[l]=u[l-1]+f[l-1]<<1;var c;if(i){c=new le(1<<e);var m=15-e;for(l=0;l<a;++l)if(t[l])for(var v=l<<4|t[l],d=e-t[l],h=u[t[l]-1]++<<d,C=h|(1<<d)-1;h<=C;++h)c[Ge[h]>>m]=v}else for(c=new le(a),l=0;l<a;++l)t[l]&&(c[l]=Ge[u[t[l]-1]++]>>15-t[l]);return c}),he=new k(288);for(var L=0;L<144;++L)he[L]=8;for(var L=144;L<256;++L)he[L]=9;for(var L=256;L<280;++L)he[L]=7;for(var L=280;L<288;++L)he[L]=8;var Pt=new k(32);for(var L=0;L<32;++L)Pt[L]=5;var hi=de(he,9,1),gi=de(Pt,5,1),Re=function(t){for(var e=t[0],i=1;i<t.length;++i)t[i]>e&&(e=t[i]);return e},H=function(t,e,i){var a=e/8|0;return(t[a]|t[a+1]<<8)>>(e&7)&i},Le=function(t,e){var i=e/8|0;return(t[i]|t[i+1]<<8|t[i+2]<<16)>>(e&7)},Si=function(t){return(t+7)/8|0},Ne=function(t,e,i){return(e==null||e<0)&&(e=0),(i==null||i>t.length)&&(i=t.length),new k(t.subarray(e,i))},yi=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],U=function(t,e,i){var a=new Error(e||yi[t]);if(a.code=t,Error.captureStackTrace&&Error.captureStackTrace(a,U),!i)throw a;return a},vi=function(t,e,i,a){var l=t.length,f=a?a.length:0;if(!l||e.f&&!e.l)return i||new k(0);var u=!i,c=u||e.i!=2,m=e.i;u&&(i=new k(l*3));var v=function(te){var oe=i.length;if(te>oe){var fe=new k(Math.max(oe*2,te));fe.set(i),i=fe}},d=e.f||0,h=e.p||0,C=e.b||0,S=e.l,y=e.d,F=e.m,B=e.n,R=l*8;do{if(!S){d=H(t,h,1);var O=H(t,h+1,3);if(h+=3,O)if(O==1)S=hi,y=gi,F=9,B=5;else if(O==2){var r=H(t,h,31)+257,o=H(t,h+10,15)+4,p=r+H(t,h+5,31)+1;h+=14;for(var x=new k(p),s=new k(19),g=0;g<o;++g)s[mi[g]]=H(t,h+g*3,7);h+=o*3;for(var E=Re(s),D=(1<<E)-1,b=de(s,E,1),g=0;g<p;){var w=b[H(t,h,D)];h+=w&15;var I=w>>4;if(I<16)x[g++]=I;else{var A=0,q=0;for(I==16?(q=3+H(t,h,3),h+=2,A=x[g-1]):I==17?(q=3+H(t,h,7),h+=3):I==18&&(q=11+H(t,h,127),h+=7);q--;)x[g++]=A}}var X=x.subarray(0,r),G=x.subarray(r);F=Re(X),B=Re(G),S=de(X,F,1),y=de(G,B,1)}else U(1);else{var I=Si(h)+4,T=t[I-4]|t[I-3]<<8,n=I+T;if(n>l){m&&U(0);break}c&&v(C+T),i.set(t.subarray(I,n),C),e.b=C+=T,e.p=h=n*8,e.f=d;continue}if(h>R){m&&U(0);break}}c&&v(C+131072);for(var _=(1<<F)-1,ie=(1<<B)-1,M=h;;M=h){var A=S[Le(t,h)&_],z=A>>4;if(h+=A&15,h>R){m&&U(0);break}if(A||U(2),z<256)i[C++]=z;else if(z==256){M=h,S=null;break}else{var ae=z-254;if(z>264){var g=z-257,V=gt[g];ae=H(t,h,(1<<V)-1)+Ct[g],h+=V}var ne=y[Le(t,h)&ie],ee=ne>>4;ne||U(3),h+=ne&15;var G=di[ee];if(ee>3){var V=St[ee];G+=Le(t,h)&(1<<V)-1,h+=V}if(h>R){m&&U(0);break}c&&v(C+131072);var re=C+ae;if(C<G){var Q=f-G,ge=Math.min(G,re);for(Q+C<0&&U(3);C<ge;++C)i[C]=a[Q+C]}for(;C<re;++C)i[C]=i[C-G]}}e.l=S,e.p=M,e.b=C,e.f=d,S&&(d=1,e.m=F,e.d=y,e.n=B)}while(!d);return C!=i.length&&u?Ne(i,0,C):i.subarray(0,C)},Ci=new k(0),J=function(t,e){return t[e]|t[e+1]<<8},j=function(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0},Be=function(t,e){return j(t,e)+j(t,e+4)*4294967296};function Pi(t,e){return vi(t,{i:2},e&&e.out,e&&e.dictionary)}var Me=typeof TextDecoder<"u"&&new TextDecoder,Ii=0;try{Me.decode(Ci,{stream:!0}),Ii=1}catch{}var bi=function(t){for(var e="",i=0;;){var a=t[i++],l=(a>127)+(a>223)+(a>239);if(i+l>t.length)return{s:e,r:Ne(t,i-1)};l?l==3?(a=((a&15)<<18|(t[i++]&63)<<12|(t[i++]&63)<<6|t[i++]&63)-65536,e+=String.fromCharCode(55296|a>>10,56320|a&1023)):l&1?e+=String.fromCharCode((a&31)<<6|t[i++]&63):e+=String.fromCharCode((a&15)<<12|(t[i++]&63)<<6|t[i++]&63):e+=String.fromCharCode(a)}};function It(t,e){if(e){for(var i="",a=0;a<t.length;a+=16384)i+=String.fromCharCode.apply(null,t.subarray(a,a+16384));return i}else{if(Me)return Me.decode(t);var l=bi(t),f=l.s,i=l.r;return i.length&&U(8),f}}var Di=function(t,e){return e+30+J(t,e+26)+J(t,e+28)},Ei=function(t,e,i){var a=J(t,e+28),l=It(t.subarray(e+46,e+46+a),!(J(t,e+8)&2048)),f=e+46+a,u=j(t,e+20),c=i&&u==4294967295?Ai(t,f):[u,j(t,e+24),j(t,e+42)],m=c[0],v=c[1],d=c[2];return[J(t,e+10),m,v,l,f+J(t,e+30)+J(t,e+32),d]},Ai=function(t,e){for(;J(t,e)!=1;e+=4+J(t,e+2));return[Be(t,e+12),Be(t,e+4),Be(t,e+20)]};function st(t,e){for(var i={},a=t.length-22;j(t,a)!=101010256;--a)(!a||t.length-a>65558)&&U(13);var l=J(t,a+8);if(!l)return{};var f=j(t,a+16),u=f==4294967295||l==65535;if(u){var c=j(t,a-12);u=j(t,c)==101075792,u&&(l=j(t,c+32),f=j(t,c+48))}for(var m=e&&e.filter,v=0;v<l;++v){var d=Ei(t,f,u),h=d[0],C=d[1],S=d[2],y=d[3],F=d[4],B=d[5],R=Di(t,B);f=F,(!m||m({name:y,size:C,originalSize:S,compression:h}))&&(h?h==8?i[y]=Pi(t.subarray(R,R+C),{out:new k(S)}):U(14,"unknown compression type "+h):i[y]=Ne(t,R,R+C))}return i}const Te=Y({"[string]":{value:[Y.or("null",se.boolean,se.integer,se.float,se.string,"string.date.iso",se.location,se.boundingbox),"@","Valeur de la métadonnée"],"valueLabel?":["string","@","Label de la valeur de la métadonnée. Existe pour les métadonnées de type enum, contient dans ce cas le label associé à la clé de l'option de l'enum choisie"],confidence:["number","@","Confiance dans la valeur de la métadonnée, entre 0 et 1"],manuallyModified:["boolean","@","La valeur de la métadonnée a été modifiée manuellement"],alternatives:Y({"[string]":["number","@","Confiance dans cette valeur alternative de la métadonnée, entre 0 et 1."]}).describe("Autres valeurs possibles. Les clés de l'objet sont les autres valeurs possibles pour cette métadonnée (converties en texte via JSON), les valeurs de l'objet sont les confiances associées à ces alternatives.")}}),Fi=Y({observations:Y({"[string]":{label:["string","@","Label de l'observation"],images:Y({id:["string","@","ID de l'image"],filename:["string","@","Nom du fichier utilisé pour cette image"],contentType:["string","@","Type de contenu de l'image, au format MIME (exemple: image/jpeg)"],sequence:["number","@","Numéro de séquence de l'image dans l'archive .zip. Unique à l'entièreté de l'export"],metadata:Te,exportedAs:Y({original:["string","@","Chemin vers l'image originale"],cropped:["string","@","Chemin vers l'image recadrée"]}).describe("Chemins dans l'archive .zip vers l'image exportée")}).array(),metadata:Te,protocolMetadata:Te.describe("Métadonnées définies par le protocole. Les clés de l'objet sont les identifiants des métadonnées, sans le préfixe qui identifie leur protocole de provenance")}}).describe("Associe l'ID d'une observation à son label et les valeurs de ses métadonnées"),protocol:Tt.describe("Le protocole utilisé pour cette session d'analyse")});async function wi(t,e,i){const a=new Uint8Array(await t.arrayBuffer()),l=st(a,{filter:({name:d})=>d===(P.currentProtocol?.exports?.metadata.json??"analysis.json")});if(Object.keys(l).length===0){P.processing.removeFile(e),W.error(`Aucun fichier d'analyse trouvé dans l'export ${t.name}`);return}const[f]=Object.values(l).map(d=>It(d)).map(qt).map(d=>d?Fi(d):void 0);if(f===void 0){P.processing.removeFile(e),W.error(`Le fichier d'analyse de ${t.name} n'est pas au format JSON ou est corrompu`);return}if(f instanceof Ot){P.processing.removeFile(e),W.error(`Fichier d'analyse de ${t.name} invalide: ${f.summary}`);return}const{protocol:u,observations:c}=f;if(i&&u.id!==i){P.processing.removeFile(e),W.error(`Le fichier d'analyse de ${t.name} a été exporté avec le protocole ${u.id}, mais le protocole actuel est ${i}`);return}const m=Object.values(c).flatMap(d=>d.images).map(d=>({id:d.id,name:d.exportedAs.original}));P.processing.files.push(...m);const v=st(a,{filter:({name:d})=>m.some(h=>h.name===d)});if(Object.keys(v).length===0){P.processing.removeFile(e),P.processing.files=P.processing.files.filter(d=>!m.find(h=>h.id===d.id)),W.error(`Aucune image trouvée dans l'export ${t.name}. L'export doit contenir les images originales, pas seulement les images recadrées`);return}for(const[d,h]of Je(v)){const C=m.find(I=>I.name===d)?.id;if(!C)continue;const S=Je(c).map(([I,T])=>({id:I,...T})).find(I=>I.images.some(T=>T.exportedAs.original===d));if(!S){P.processing.removeFile(C);continue}const y=S.images.find(I=>I.exportedAs.original===d);if(!y){P.processing.removeFile(C);continue}await N.Observation.set({...Ye(S,"id","label"),images:S.images.map(I=>I.id),addedAt:new Date().toISOString(),metadataOverrides:Xe(S.metadata,I=>({value:qe(I.value),confidence:I.confidence,manuallyModified:I.manuallyModified,alternatives:I.alternatives}))});const F=Wt(h),[[B,R],O]=await pt({source:new File([F],y.filename,{type:y.contentType})});await xt({id:We(y.id),resizedBytes:O,originalBytes:F,contentType:y.contentType,filename:y.filename,width:B,height:R}),await N.Image.set({...Ye(y,"id","filename","contentType"),dimensions:{width:B,height:R},fileId:We(y.id),boundingBoxesAnalyzed:!0,addedAt:new Date().toISOString(),metadata:Xe(y.metadata,I=>({value:qe(I.value),confidence:I.confidence,manuallyModified:I.manuallyModified,alternatives:I.alternatives}))}),P.processing.removeFile(y.id)}P.processing.removeFile(e)}let $;class Ri{constructor({swarpc:e,cancellers:i,parallelism:a=1}){this.swarpc=e,this.cancellers=i,this.parallelism=a,this.tasks=[],this.taskIds=new Set,this.abortController=new AbortController,je(()=>{this.start().finally(()=>this.logWarning(null,"Processing queue mainloop exited"))}),je(()=>{this.log(null,"Progress is",P.processing.done,"/",P.processing.total)})}async start(){for(this.log(null,"Starting processing queue mainloop with up to",Gt("concurrent task",this.parallelism));;){for(;this.tasks.length>0;)await new Promise((e,i)=>{this.abortController.signal.addEventListener("abort",()=>{e(void 0)}),Promise.allSettled(Jt(this.parallelism).map(async()=>this.pop())).then(a=>{a.some(l=>l.status==="rejected")?i(a.filter(l=>l.status==="rejected").map(l=>l.reason)):e(void 0),P.processing.done+=a.length,this.tasks.length===0&&this.#e()})});await new Promise(e=>setTimeout(e,100))}}log(e,i,...a){console.debug(`[ProcessingQueue] ${e?e+": ":""}${i}`,...a)}logWarning(e,i,...a){console.warn(`[ProcessingQueue] ${e?e+": ":""}${i}`,...a)}#e(){this.log(null,"Queue was drained"),P.loadingImages.clear(),P.queuedImages.clear(),document.dispatchEvent(new CustomEvent("processing-queue-drained")),setTimeout(()=>{P.processing.reset()},500)}taskSubjectId(e){if(e.importing)return e.importing.id;if(e.detection)return e.detection.fileId;if(e.classification)return e.classification.imageId;throw new Error("Task must have either importing, detection or classification")}taskId(e){return this.taskSubjectId(e)}push(e){const i=this.taskId(e);if(this.taskIds.has(i)){this.logWarning(i,"Task already in queue, skipping.",e);return}this.log(i,"push",e),this.tasks.push(e),this.taskIds.add(this.taskId(e)),P.processing.total++,P.queuedImages.add(this.taskSubjectId(e)),e.importing&&P.processing.files.push({name:e.importing.file.name,id:e.importing.id,addedAt:new Date})}cancel(e,i){this.log(e,"cancel",i),this.abortController.abort(e),this.cancellers?.get(e)?.(i),this.tasks=this.tasks.filter(l=>this.taskSubjectId(l)!==e),P.processing.removeFile(e),P.queuedImages.delete(e),P.loadingImages.delete(e),P.processing.total--}async pop(){const e=this.tasks.shift();if(!e){this.logWarning(null,"No task to pop, queue is empty");return}this.log(this.taskId(e),"pop",ct(e)),this.taskIds.delete(this.taskId(e)),P.queuedImages.delete(this.taskSubjectId(e)),P.loadingImages.add(this.taskSubjectId(e));const{detection:i,classification:a,importing:l}=e;P.processing.task=l?"import":i?"detection":"classification";try{if(l){const{file:f,id:u}=l;Xt(f.type)?await wi(f,u,P.currentProtocolId):await fi(f,u)}else i?await ui(this.swarpc,this.cancellers,i.fileId):a&&await Yt(this.swarpc,a.imageId,this.cancellers);P.processing.removeFile(this.taskSubjectId(e))}catch(f){P.erroredImages.set(this.taskSubjectId(e),Mt(f))}finally{P.loadingImages.delete(this.taskSubjectId(e))}}}function Vi(t){$??=new Ri({parallelism:Math.ceil(navigator.hardwareConcurrency/2),...t})}function Hi(t,e){ye($),$.cancel(t,e)}function ji(t){ye($);for(const e of t)$.push({importing:{file:e,id:zt()}})}function qi(t){ye($);for(const e of t)$.push({detection:{fileId:e}})}function Wi(t){ye($);for(const e of t)$.push({classification:{imageId:e}})}function ye(t){if(!t)throw new Error("Processing queue not initialized. Call initializeProcessingQueue first.")}async function Ji(t){const e=P.currentProtocol;if(!e)throw new Error("No protocol selected");const i=t.map(u=>N.Observation.getFromState(u)).filter($e),a=await Promise.all(t.map(async u=>N.Image.raw.get(u))).then(u=>u.filter($e)),l=new Set(i.flatMap(u=>u.images)).union(new Set(a.map(u=>u.id))),f=ut("Observation");return await N.Observation.do(async u=>{const c={id:f,images:[...l],addedAt:new Date().toISOString(),label:Ue([...i,...a]),metadataOverrides:Object.fromEntries(Object.entries(await Ut(lt(),i.map(m=>m.metadataOverrides))).map(([m,{value:v,...d}])=>[m,{...d,value:JSON.stringify(v)}]))};u.add({...c,label:bt({protocol:e,images:a,observation:c})});for(const{id:m}of i)u.delete(m)}),f}async function Xi(t,{recursive:e=!1,notFoundOk:i=!0,tx:a=void 0}={}){await ft(["Observation","Image","ImageFile","ImagePreviewFile"],{},async l=>{const f=await l.objectStore("Observation").get(t);if(!f){if(i)return;throw"Observation non trouvée"}l.objectStore("Observation").delete(t);const u=await l.objectStore("Image").getAll().then(c=>c.filter(m=>f.images.includes(m.id)));if(e)for(const c of Vt(u))await Ht(c,l,i);P.erroredImages.delete(t)})}function bt({images:t,observation:e,protocol:i}){return i?.observations?.defaultLabel?.render({images:t,observation:e})??Ue([e,...t])}function Ue(t){for(const e of t){if("label"in e)return e.label;if("filename"in e)return e.filename.replace(/\.[^.]+$/,"")}return"Nouvelle observation"}function Li(t,e){const a={id:ut("Observation"),images:[t.id],addedAt:new Date().toISOString(),label:Ue([t]),metadataOverrides:{}};return{...a,label:bt({images:[t],observation:a,protocol:e})}}async function Yi(t){const e=P.currentProtocol;if(!e)throw new Error("No protocol selected");await ft(["Observation","Image"],{},async i=>{const a=await i.objectStore("Image").getAll(),l=await i.objectStore("Observation").getAll();for(const f of a)if(!l.some(u=>u.images.includes(f.id))){const u=Li(f,e);i.objectStore("Observation").add(u),P.setSelection?.(P.selection.map(c=>c===f.id?u.id:c))}})}export{zi as A,$t as a,Hi as b,Wi as c,Xi as d,Yi as e,qi as f,_i as g,Vi as h,ji as i,Ji as m,Li as n};
