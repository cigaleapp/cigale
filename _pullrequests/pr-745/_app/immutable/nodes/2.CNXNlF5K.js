import{_ as N,l as X}from"../chunks/CFKIlU8F.js";import{Q as B,a2 as F,a3 as j,a4 as g,a5 as p,a6 as q,j as o,_ as $,k as _,a7 as Q,a8 as U,a9 as Y,t as D,o as G,R as K}from"../chunks/Ckf_cnrE.js";import{e as Z}from"../chunks/CdUwIIsC.js";import{bz as ee}from"../chunks/CEjrMSr3.js";import{g as R}from"../chunks/C4k7jWy3.js";import{t as te}from"../chunks/CdFpUUK-.js";import{_ as Tt}from"../chunks/DjW5CIaf.js";const ne=ee;function re(e){const r={},n=B();for(const t in n)Object.prototype.hasOwnProperty.call(n,t)&&(r[t]=n[t]);for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(e[t]===void 0?delete r[t]:r[t]=e[t]);F(r)}const ae={lessThanXSeconds:{one:"moins d’une seconde",other:"moins de {{count}} secondes"},xSeconds:{one:"1 seconde",other:"{{count}} secondes"},halfAMinute:"30 secondes",lessThanXMinutes:{one:"moins d’une minute",other:"moins de {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"environ 1 heure",other:"environ {{count}} heures"},xHours:{one:"1 heure",other:"{{count}} heures"},xDays:{one:"1 jour",other:"{{count}} jours"},aboutXWeeks:{one:"environ 1 semaine",other:"environ {{count}} semaines"},xWeeks:{one:"1 semaine",other:"{{count}} semaines"},aboutXMonths:{one:"environ 1 mois",other:"environ {{count}} mois"},xMonths:{one:"1 mois",other:"{{count}} mois"},aboutXYears:{one:"environ 1 an",other:"environ {{count}} ans"},xYears:{one:"1 an",other:"{{count}} ans"},overXYears:{one:"plus d’un an",other:"plus de {{count}} ans"},almostXYears:{one:"presqu’un an",other:"presque {{count}} ans"}},oe=(e,r,n)=>{let t;const a=ae[e];return typeof a=="string"?t=a:r===1?t=a.one:t=a.other.replace("{{count}}",String(r)),n?.addSuffix?n.comparison&&n.comparison>0?"dans "+t:"il y a "+t:t},ie={full:"EEEE d MMMM y",long:"d MMMM y",medium:"d MMM y",short:"dd/MM/y"},se={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},ue={full:"{{date}} 'à' {{time}}",long:"{{date}} 'à' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},ce={date:j({formats:ie,defaultWidth:"full"}),time:j({formats:se,defaultWidth:"full"}),dateTime:j({formats:ue,defaultWidth:"full"})},de={lastWeek:"eeee 'dernier à' p",yesterday:"'hier à' p",today:"'aujourd’hui à' p",tomorrow:"'demain à' p'",nextWeek:"eeee 'prochain à' p",other:"P"},le=(e,r,n,t)=>de[e],me={narrow:["av. J.-C","ap. J.-C"],abbreviated:["av. J.-C","ap. J.-C"],wide:["avant Jésus-Christ","après Jésus-Christ"]},fe={narrow:["T1","T2","T3","T4"],abbreviated:["1er trim.","2ème trim.","3ème trim.","4ème trim."],wide:["1er trimestre","2ème trimestre","3ème trimestre","4ème trimestre"]},he={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],wide:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"]},ge={narrow:["D","L","M","M","J","V","S"],short:["di","lu","ma","me","je","ve","sa"],abbreviated:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],wide:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},pe={narrow:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"mat.",afternoon:"ap.m.",evening:"soir",night:"mat."},abbreviated:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"matin",afternoon:"après-midi",evening:"soir",night:"matin"},wide:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"du matin",afternoon:"de l’après-midi",evening:"du soir",night:"du matin"}},be=(e,r)=>{const n=Number(e),t=r?.unit;if(n===0)return"0";const a=["year","week","hour","minute","second"];let i;return n===1?i=t&&a.includes(t)?"ère":"er":i="ème",n+i},we=["MMM","MMMM"],ye={preprocessor:(e,r)=>e.getDate()===1||!r.some(t=>t.isToken&&we.includes(t.value))?r:r.map(t=>t.isToken&&t.value==="do"?{isToken:!0,value:"d"}:t),ordinalNumber:be,era:g({values:me,defaultWidth:"wide"}),quarter:g({values:fe,defaultWidth:"wide",argumentCallback:e=>e-1}),month:g({values:he,defaultWidth:"wide"}),day:g({values:ge,defaultWidth:"wide"}),dayPeriod:g({values:pe,defaultWidth:"wide"})},ve=/^(\d+)(ième|ère|ème|er|e)?/i,Pe=/\d+/i,Me={narrow:/^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,abbreviated:/^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,wide:/^(avant Jésus-Christ|après Jésus-Christ)/i},Se={any:[/^av/i,/^ap/i]},We={narrow:/^T?[1234]/i,abbreviated:/^[1234](er|ème|e)? trim\.?/i,wide:/^[1234](er|ème|e)? trimestre/i},ke={any:[/1/i,/2/i,/3/i,/4/i]},Ce={narrow:/^[jfmasond]/i,abbreviated:/^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\.?/i,wide:/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i},je={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^av/i,/^ma/i,/^juin/i,/^juil/i,/^ao/i,/^s/i,/^o/i,/^n/i,/^d/i]},$e={narrow:/^[lmjvsd]/i,short:/^(di|lu|ma|me|je|ve|sa)/i,abbreviated:/^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,wide:/^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i},Ne={narrow:[/^d/i,/^l/i,/^m/i,/^m/i,/^j/i,/^v/i,/^s/i],any:[/^di/i,/^lu/i,/^ma/i,/^me/i,/^je/i,/^ve/i,/^sa/i]},_e={narrow:/^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,any:/^([ap]\.?\s?m\.?|du matin|de l'après[-\s]midi|du soir|de la nuit)/i},xe={any:{am:/^a/i,pm:/^p/i,midnight:/^min/i,noon:/^mid/i,morning:/mat/i,afternoon:/ap/i,evening:/soir/i,night:/nuit/i}},Ee={ordinalNumber:q({matchPattern:ve,parsePattern:Pe,valueCallback:e=>parseInt(e)}),era:p({matchPatterns:Me,defaultMatchWidth:"wide",parsePatterns:Se,defaultParseWidth:"any"}),quarter:p({matchPatterns:We,defaultMatchWidth:"wide",parsePatterns:ke,defaultParseWidth:"any",valueCallback:e=>e+1}),month:p({matchPatterns:Ce,defaultMatchWidth:"wide",parsePatterns:je,defaultParseWidth:"any"}),day:p({matchPatterns:$e,defaultMatchWidth:"wide",parsePatterns:Ne,defaultParseWidth:"any"}),dayPeriod:p({matchPatterns:_e,defaultMatchWidth:"any",parsePatterns:xe,defaultParseWidth:"any"})},De={code:"fr",formatDistance:oe,formatLong:ce,formatRelative:le,localize:ye,match:Ee,options:{weekStartsOn:1,firstWeekContainsDate:4}},Ie={lessThanXSeconds:{one:"1秒未満",other:"{{count}}秒未満",oneWithSuffix:"約1秒",otherWithSuffix:"約{{count}}秒"},xSeconds:{one:"1秒",other:"{{count}}秒"},halfAMinute:"30秒",lessThanXMinutes:{one:"1分未満",other:"{{count}}分未満",oneWithSuffix:"約1分",otherWithSuffix:"約{{count}}分"},xMinutes:{one:"1分",other:"{{count}}分"},aboutXHours:{one:"約1時間",other:"約{{count}}時間"},xHours:{one:"1時間",other:"{{count}}時間"},xDays:{one:"1日",other:"{{count}}日"},aboutXWeeks:{one:"約1週間",other:"約{{count}}週間"},xWeeks:{one:"1週間",other:"{{count}}週間"},aboutXMonths:{one:"約1か月",other:"約{{count}}か月"},xMonths:{one:"1か月",other:"{{count}}か月"},aboutXYears:{one:"約1年",other:"約{{count}}年"},xYears:{one:"1年",other:"{{count}}年"},overXYears:{one:"1年以上",other:"{{count}}年以上"},almostXYears:{one:"1年近く",other:"{{count}}年近く"}},Oe=(e,r,n)=>{n=n||{};let t;const a=Ie[e];return typeof a=="string"?t=a:r===1?n.addSuffix&&a.oneWithSuffix?t=a.oneWithSuffix:t=a.one:n.addSuffix&&a.otherWithSuffix?t=a.otherWithSuffix.replace("{{count}}",String(r)):t=a.other.replace("{{count}}",String(r)),n.addSuffix?n.comparison&&n.comparison>0?t+"後":t+"前":t},Te={full:"y年M月d日EEEE",long:"y年M月d日",medium:"y/MM/dd",short:"y/MM/dd"},Re={full:"H時mm分ss秒 zzzz",long:"H:mm:ss z",medium:"H:mm:ss",short:"H:mm"},Ae={full:"{{date}} {{time}}",long:"{{date}} {{time}}",medium:"{{date}} {{time}}",short:"{{date}} {{time}}"},Le={date:j({formats:Te,defaultWidth:"full"}),time:j({formats:Re,defaultWidth:"full"}),dateTime:j({formats:Ae,defaultWidth:"full"})},ze={lastWeek:"先週のeeeeのp",yesterday:"昨日のp",today:"今日のp",tomorrow:"明日のp",nextWeek:"翌週のeeeeのp",other:"P"},He=(e,r,n,t)=>ze[e],qe={narrow:["BC","AC"],abbreviated:["紀元前","西暦"],wide:["紀元前","西暦"]},Je={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["第1四半期","第2四半期","第3四半期","第4四半期"]},Ve={narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],abbreviated:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],wide:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]},Xe={narrow:["日","月","火","水","木","金","土"],short:["日","月","火","水","木","金","土"],abbreviated:["日","月","火","水","木","金","土"],wide:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"]},Be={narrow:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},abbreviated:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},wide:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"}},Fe={narrow:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},abbreviated:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"},wide:{am:"午前",pm:"午後",midnight:"深夜",noon:"正午",morning:"朝",afternoon:"午後",evening:"夜",night:"深夜"}},Qe=(e,r)=>{const n=Number(e);switch(String(r?.unit)){case"year":return`${n}年`;case"quarter":return`第${n}四半期`;case"month":return`${n}月`;case"week":return`第${n}週`;case"date":return`${n}日`;case"hour":return`${n}時`;case"minute":return`${n}分`;case"second":return`${n}秒`;default:return`${n}`}},Ue={ordinalNumber:Qe,era:g({values:qe,defaultWidth:"wide"}),quarter:g({values:Je,defaultWidth:"wide",argumentCallback:e=>Number(e)-1}),month:g({values:Ve,defaultWidth:"wide"}),day:g({values:Xe,defaultWidth:"wide"}),dayPeriod:g({values:Be,defaultWidth:"wide",formattingValues:Fe,defaultFormattingWidth:"wide"})},Ye=/^第?\d+(年|四半期|月|週|日|時|分|秒)?/i,Ge=/\d+/i,Ke={narrow:/^(B\.?C\.?|A\.?D\.?)/i,abbreviated:/^(紀元[前後]|西暦)/i,wide:/^(紀元[前後]|西暦)/i},Ze={narrow:[/^B/i,/^A/i],any:[/^(紀元前)/i,/^(西暦|紀元後)/i]},et={narrow:/^[1234]/i,abbreviated:/^Q[1234]/i,wide:/^第[1234一二三四１２３４]四半期/i},tt={any:[/(1|一|１)/i,/(2|二|２)/i,/(3|三|３)/i,/(4|四|４)/i]},nt={narrow:/^([123456789]|1[012])/,abbreviated:/^([123456789]|1[012])月/i,wide:/^([123456789]|1[012])月/i},rt={any:[/^1\D/,/^2/,/^3/,/^4/,/^5/,/^6/,/^7/,/^8/,/^9/,/^10/,/^11/,/^12/]},at={narrow:/^[日月火水木金土]/,short:/^[日月火水木金土]/,abbreviated:/^[日月火水木金土]/,wide:/^[日月火水木金土]曜日/},ot={any:[/^日/,/^月/,/^火/,/^水/,/^木/,/^金/,/^土/]},it={any:/^(AM|PM|午前|午後|正午|深夜|真夜中|夜|朝)/i},st={any:{am:/^(A|午前)/i,pm:/^(P|午後)/i,midnight:/^深夜|真夜中/i,noon:/^正午/i,morning:/^朝/i,afternoon:/^午後/i,evening:/^夜/i,night:/^深夜/i}},ut={ordinalNumber:q({matchPattern:Ye,parsePattern:Ge,valueCallback:function(e){return parseInt(e,10)}}),era:p({matchPatterns:Ke,defaultMatchWidth:"wide",parsePatterns:Ze,defaultParseWidth:"any"}),quarter:p({matchPatterns:et,defaultMatchWidth:"wide",parsePatterns:tt,defaultParseWidth:"any",valueCallback:e=>e+1}),month:p({matchPatterns:nt,defaultMatchWidth:"wide",parsePatterns:rt,defaultParseWidth:"any"}),day:p({matchPatterns:at,defaultMatchWidth:"wide",parsePatterns:ot,defaultParseWidth:"any"}),dayPeriod:p({matchPatterns:it,defaultMatchWidth:"any",parsePatterns:st,defaultParseWidth:"any"})},ct={code:"ja",formatDistance:Oe,formatLong:Le,formatRelative:He,localize:Ue,match:ut,options:{weekStartsOn:0,firstWeekContainsDate:1}};Map.groupBy??=function(r,n){const t=new Map;let a=0;for(const i of r){const u=n(i,a++),b=t.get(u);b?b.push(i):t.set(u,[i])}return t};function E(e,r="debug",n,t){const a=A.slice(A.indexOf(r));if(t&&n){const i={rqid:t,nid:n};return{debug:a.includes("debug")?v("debug",e,i):()=>{},info:a.includes("info")?v("info",e,i):()=>{},warn:a.includes("warn")?v("warn",e,i):()=>{},error:a.includes("error")?v("error",e,i):()=>{}}}return{debug:a.includes("debug")?v("debug",e,n):()=>{},info:a.includes("info")?v("info",e,n):()=>{},warn:a.includes("warn")?v("warn",e,n):()=>{},error:a.includes("error")?v("error",e,n):()=>{}}}const A=["debug","info","warn","error"],dt=["debug","info","warn","error","log"];function v(e,r,n){if(n===void 0||typeof n=="string"){const t=n??null;return(a,...i)=>L(e,r,{nid:t,rqid:a},...i)}return(...t)=>L(e,r,n,...t)}const lt=dt.reduce((e,r)=>(e[r]=console[r],e),{});function L(e,r,{rqid:n,nid:t},...a){const i=[`[SWARPC ${r}]`,n?`%c${n}%c`:"",t?`%c@ ${t}%c`:""].filter(Boolean).join(" "),u=[];return n&&u.push("color: cyan","color: inherit"),t&&u.push("color: hotpink","color: inherit"),lt[e](i,...u,...a)}function z(e,r){if(!e)return;let n=Object.keys(e)[0];const t=Map.groupBy(r.values(),a=>a.nodeId);for(const a of Object.keys(e))t.has(a)||t.set(a,[]);for(const[a,i]of t.entries())a&&i.length<t.get(n).length&&(n=a);return console.debug("[SWARPC Load balancer] Choosing",n,"load map is",t),n}function mt(){return"N"+Math.random().toString(16).substring(2,5).toUpperCase()}const ft="(SW)";function W(e){return e??ft}const ht=o({by:'"sw&rpc"',functionName:'"#initialize"',isInitializeRequest:"true",localStorageData:"Record<string, unknown>",nodeId:"string"}),gt=o("<Name extends string>",{by:'"sw&rpc"',functionName:"Name",requestId:"string >= 1"}),pt=o("<I, P, S>",{"input?":"I","progress?":"P","result?":"S","abort?":{reason:"string"},"error?":{message:"string"}});o.scope({PayloadCoreSchema:pt,PayloadHeaderSchema:gt,PayloadInitializeSchema:ht}).type("<Name extends string, I, P, S>",[["PayloadHeaderSchema<Name>","&","PayloadCoreSchema<I, P, S>"],"|","PayloadInitializeSchema"]);const bt=Symbol("SWARPC procedures"),wt=[MessagePort,ReadableStream,WritableStream,TransformStream,ArrayBuffer];function I(e){return e==null?[]:typeof e=="object"?ArrayBuffer.isView(e)||e instanceof ArrayBuffer?[e]:wt.some(r=>e instanceof r)?[e]:Array.isArray(e)?e.flatMap(I):Object.values(e).flatMap(I):[]}const P=new Map;let O=new Set;function yt(e,{worker:r,nodes:n,loglevel:t="debug",restartListener:a=!1,hooks:i={},localStorage:u={}}={}){const b=E("client",t);a&&O.clear();const f={[bt]:e};n??=navigator.hardwareConcurrency||1;let s;if(r){s={};for(const d of Array.from({length:n})){const C=mt();typeof r=="string"?s[C]=new Worker(r,{name:C}):s[C]=new r({name:C})}b.info(null,`Started ${n} node${n>1?"s":""}`,Object.keys(s))}for(const d of Object.keys(e)){if(typeof d!="string")throw new Error("[SWARPC Client] Invalid function name, don't use symbols");const C=async(h,w,l,c,m)=>J({logger:b,node:h,nodeId:w,hooks:i,localStorage:u},{...c,by:"sw&rpc",requestId:l,functionName:d},m),x=async(h,w=()=>{},l,c)=>{e[d].input.assert(h);const m=l??H();c??=z(s,P);const M=s&&c?s[c]:void 0,T=E("client",t,W(c),m);return new Promise((y,S)=>{P.set(m,{nodeId:c,functionName:d,resolve:y,onProgress:w,reject:S});const V=e[d].autotransfer==="always"?I(h):[];return T.debug(`Requesting ${d} with`,h),C(M,c,m,{input:h},{transfer:V}).then(()=>{}).catch(S)})};f[d]=x,f[d].broadcast=async(h,w,l)=>{let c=[void 0];s&&(c=Object.keys(s)),l&&(c=c.slice(0,l));const m=new Map;function M(y){return w?S=>{m.set(W(y),S),w(m)}:S=>{}}return(await Promise.allSettled(c.map(async y=>x(h,M(y),void 0,y)))).map((y,S)=>({...y,node:W(c[S])}))},f[d].cancelable=(h,w)=>{const l=H(),c=z(s,P),m=E("client",t,W(c),l);return{request:x(h,w,l,c),cancel(M){if(!P.has(l)){m.warn(l,`Cannot cancel ${d} request, it has already been resolved or rejected`);return}m.debug(l,`Cancelling ${d} with`,M),vt(m,c?s?.[c]:void 0,{by:"sw&rpc",requestId:l,functionName:d,abort:{reason:M}}),P.delete(l)}}}}return f}async function J(e,r,n){await Pt(e);const{logger:t,node:a}=e;!a&&!navigator.serviceWorker.controller&&t.warn("","Service Worker is not controlling the page");const i=a instanceof SharedWorker?a.port:a===void 0?await navigator.serviceWorker.ready.then(u=>u.active):a;if(!i)throw new Error("[SWARPC Client] No active service worker found");i.postMessage(r,n)}function vt(e,r,n,t){!r&&!navigator.serviceWorker.controller&&e.warn("Service Worker is not controlling the page");const a=r instanceof SharedWorker?r.port:r===void 0?navigator.serviceWorker.controller:r;if(!a)throw new Error("[SWARPC Client] No active service worker found");a.postMessage(n,t)}async function Pt(e){if(O.has(W(e.nodeId)))return;const{logger:r,node:n}=e;if(!n){if(!(await navigator.serviceWorker.ready)?.active)throw new Error("[SWARPC Client] Service Worker is not active");navigator.serviceWorker.controller||r.warn("","Service Worker is not controlling the page")}const t=n??navigator.serviceWorker;r.debug(null,"Starting client listener",{w:t,...e});const a=i=>{const u=i.data||{};if(u?.by!=="sw&rpc")return;const b=u;if("isInitializeRequest"in b){r.warn(null,"Ignoring unexpected #initialize from server",b);return}const{requestId:f,...s}=b;if(!f)throw new Error("[SWARPC Client] Message received without requestId");const d=P.get(f);if(!d)throw new Error(`[SWARPC Client] ${f} has no active request handlers, cannot process ${JSON.stringify(s)}`);"error"in s?(e.hooks.error?.(s.functionName,new Error(s.error.message)),d.reject(new Error(s.error.message)),P.delete(f)):"progress"in s?(e.hooks.progress?.(s.functionName,s.progress),d.onProgress(s.progress)):"result"in s&&(e.hooks.success?.(s.functionName,s.result),d.resolve(s.result),P.delete(f))};t instanceof SharedWorker?(t.port.addEventListener("message",a),t.port.start()):t.addEventListener("message",a),O.add(W(e.nodeId)),await J(e,{by:"sw&rpc",functionName:"#initialize",isInitializeRequest:!0,localStorageData:e.localStorage,nodeId:W(e.nodeId)})}function H(){return Math.random().toString(16).substring(2,8).toUpperCase()}const Mt={init:{input:o({databaseName:"string",databaseRevision:"number.integer >= 1"}),progress:o("undefined"),success:o("undefined")},loadModel:{input:o({protocolId:"string",request:$.HTTPRequest,"classmapping?":$.HTTPRequest,task:'"classification" | "detection"',"webgpu?":"boolean"}),progress:o("0 <= number <= 1"),success:o("true")},isModelLoaded:{input:o('"classification" | "detection"'),progress:o({}),success:o("boolean")},inferBoundingBoxes:{input:o({fileId:"string",webgpu:"boolean = false",taskSettings:{input:$.ModelInput,output:{"name?":"string",shape:$.ModelDetectionOutputShape}}}),progress:o({}),success:o({boxes:o(["number","number","number","number"]).array(),scores:"number[]"})},classify:{input:o({imageId:"string","webgpu?":"boolean",metadataIds:{cropbox:"string",target:"string"},taskSettings:{input:$.ModelInput,"output?":{name:"string"}}}),progress:o({}),success:o({scores:"number[]"})},importProtocol:{input:o({contents:"string",isJSON:"boolean = false"}),progress:o({phase:o.enumerated("parsing","filtering-builtin-metadata","input-validation","write-protocol","write-metadata","write-metadata-options","output-validation"),"detail?":"string"}),success:o({id:"string",name:"string","version?":"number | undefined"})},generateResultsZip:{input:o({protocolId:"string",include:o.enumerated("croppedonly","full","metadataonly"),cropPadding:/^\d+(px|%)$/,jsonSchemaURL:"string.url.parse"}),progress:o.or({progress:"number"},{warning:o.or(['"exif-write-error"',{filename:"string"}])}).pipe(e=>"progress"in e?{progress:e.progress,warning:void 0}:{progress:void 0,warning:e.warning}),success:o("ArrayBuffer")},diffProtocolWithRemote:{input:o({protocolId:"string"}),progress:o("0 <= number <= 1"),success:o({dirty:"boolean",changes:o.or({path:"(number|string)[]",type:'"CREATE"',value:"unknown"},{path:"(number|string)[]",type:'"CHANGE"',oldValue:"unknown",value:"unknown"},{path:"(number|string)[]",type:'"REMOVE"',oldValue:"unknown"}).array()})}};function St(e){return new Worker(""+new URL("../workers/start-CaKGQs-U.js",import.meta.url).href,{type:"module",name:e?.name})}async function Wt(){const e=N(_("js")),r=await R("language",{fallback:Q()});document.documentElement.lang=r,k({fr:"Chargement des traductions…",en:"Loading translations…"}[r]),await X(r),re({locale:{fr:De,en:K,ja:ct}[r]}),await kt();const n=await R("parallelism",{fallback:1});k(e.t(376));const t=yt(Mt,{worker:St,nodes:n});try{k("Initialisation de la base de données…"),await t.init.broadcast({databaseName:Y,databaseRevision:U}),await D.initialize(),k("Chargement des données intégrées…"),await Ct(t),await D.initialize()}catch(a){console.error(a),Z(400,{message:a?.toString()??"Erreur inattendue"})}return{swarpc:t,parallelism:n}}async function kt(){const e=N(_("js"));k(e.t(117)),await G(["Metadata","Protocol","Settings"],{},async r=>{await r.objectStore("Settings").put({id:"defaults",protocols:[],theme:"auto",gridSize:1,language:"fr",showInputHints:!0,showTechnicalMetadata:ne,protocolModelSelections:{},cropAutoNext:!1,gallerySort:{key:"date",direction:"asc"}})})}async function Ct(e){const r=N(_("js"));if(k(r.t(58)),await D.Protocol.count()===0)try{const t=await fetch("https://raw.githubusercontent.com/cigaleapp/cigale/main/examples/arthropods.cigaleprotocol.json").then(a=>a.text());await e.importProtocol({contents:t,isJSON:!0},({phase:a,detail:i})=>{let u="";switch(a){case"parsing":u="Analyse";break;case"filtering-builtin-metadata":u="Filtrage des métadonnées intégrées";break;case"input-validation":u="Validation";break;case"write-protocol":u="Écriture du protocole";break;case"write-metadata":u=`Écriture de la métadonnée<br>${i}`;break;case"write-metadata-options":u=`Écriture des options de la métadonnée<br>${i}`;break;case"output-validation":u="Post-validation";break;default:break}k(`Chargement du protocole intégré<br>${u}`)})}catch(t){console.error(t),te.error("Impossible de charger le protocole par défaut. Vérifiez votre connexion Internet ou essayez de recharger la page.")}}function k(e){const r=N(_("js")),n=(t,a)=>{const i=document.getElementById(t);i&&(i.innerHTML=a)};n("loading-title",r.t(59)),n("loading-message",e)}const Dt=Object.freeze(Object.defineProperty({__proto__:null,load:Wt},Symbol.toStringTag,{value:"Module"}));export{Tt as component,Dt as universal};
