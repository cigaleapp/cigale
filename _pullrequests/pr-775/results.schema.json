{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "properties": {
    "observations": {
      "type": "object",
      "description": "Associe l'ID d'une observation à son label et les valeurs de ses métadonnées",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contentType": {
                  "type": "string",
                  "description": "Type de contenu de l'image, au format MIME (exemple: image/jpeg)"
                },
                "exportedAs": {
                  "type": "object",
                  "description": "Chemins dans l'archive .zip vers l'image exportée",
                  "properties": {
                    "cropped": {
                      "type": "string",
                      "description": "Chemin vers l'image recadrée"
                    },
                    "original": {
                      "type": "string",
                      "description": "Chemin vers l'image originale"
                    }
                  },
                  "required": [
                    "cropped",
                    "original"
                  ]
                },
                "filename": {
                  "type": "string",
                  "description": "Nom du fichier utilisé pour cette image"
                },
                "id": {
                  "type": "string",
                  "description": "ID de l'image"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "alternatives": {
                        "type": "object",
                        "description": "Autres valeurs possibles. Les clés de l'objet sont les autres valeurs possibles pour cette métadonnée (converties en texte via JSON), les valeurs de l'objet sont les confiances associées à ces alternatives.",
                        "additionalProperties": {
                          "type": "number",
                          "description": "Confiance dans cette valeur alternative de la métadonnée, entre 0 et 1."
                        }
                      },
                      "confidence": {
                        "type": "number",
                        "description": "Confiance dans la valeur de la métadonnée, entre 0 et 1"
                      },
                      "manuallyModified": {
                        "type": "boolean",
                        "description": "La valeur de la métadonnée a été modifiée manuellement"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "type": "number",
                            "description": "Valeur de la métadonnée"
                          },
                          {
                            "type": "string",
                            "description": "Valeur de la métadonnée"
                          },
                          {
                            "type": "object",
                            "description": "Valeur de la métadonnée",
                            "properties": {
                              "h": {
                                "type": "number"
                              },
                              "w": {
                                "type": "number"
                              },
                              "x": {
                                "type": "number"
                              },
                              "y": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "h",
                              "w",
                              "x",
                              "y"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "Valeur de la métadonnée",
                            "properties": {
                              "latitude": {
                                "type": "number"
                              },
                              "longitude": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "latitude",
                              "longitude"
                            ]
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "null",
                            "description": "Valeur de la métadonnée"
                          }
                        ],
                        "description": "Valeur de la métadonnée"
                      },
                      "valueLabel": {
                        "type": "string",
                        "description": "Label de la valeur de la métadonnée. Existe pour les métadonnées de type enum, contient dans ce cas le label associé à la clé de l'option de l'enum choisie"
                      }
                    },
                    "required": [
                      "alternatives",
                      "confidence",
                      "manuallyModified",
                      "value"
                    ]
                  }
                },
                "sequence": {
                  "type": "number",
                  "description": "Numéro de séquence de l'image dans l'archive .zip. Unique à l'entièreté de l'export"
                }
              },
              "required": [
                "contentType",
                "exportedAs",
                "filename",
                "id",
                "metadata",
                "sequence"
              ]
            }
          },
          "label": {
            "type": "string",
            "description": "Label de l'observation"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "alternatives": {
                  "type": "object",
                  "description": "Autres valeurs possibles. Les clés de l'objet sont les autres valeurs possibles pour cette métadonnée (converties en texte via JSON), les valeurs de l'objet sont les confiances associées à ces alternatives.",
                  "additionalProperties": {
                    "type": "number",
                    "description": "Confiance dans cette valeur alternative de la métadonnée, entre 0 et 1."
                  }
                },
                "confidence": {
                  "type": "number",
                  "description": "Confiance dans la valeur de la métadonnée, entre 0 et 1"
                },
                "manuallyModified": {
                  "type": "boolean",
                  "description": "La valeur de la métadonnée a été modifiée manuellement"
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "number",
                      "description": "Valeur de la métadonnée"
                    },
                    {
                      "type": "string",
                      "description": "Valeur de la métadonnée"
                    },
                    {
                      "type": "object",
                      "description": "Valeur de la métadonnée",
                      "properties": {
                        "h": {
                          "type": "number"
                        },
                        "w": {
                          "type": "number"
                        },
                        "x": {
                          "type": "number"
                        },
                        "y": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "h",
                        "w",
                        "x",
                        "y"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "Valeur de la métadonnée",
                      "properties": {
                        "latitude": {
                          "type": "number"
                        },
                        "longitude": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "latitude",
                        "longitude"
                      ]
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null",
                      "description": "Valeur de la métadonnée"
                    }
                  ],
                  "description": "Valeur de la métadonnée"
                },
                "valueLabel": {
                  "type": "string",
                  "description": "Label de la valeur de la métadonnée. Existe pour les métadonnées de type enum, contient dans ce cas le label associé à la clé de l'option de l'enum choisie"
                }
              },
              "required": [
                "alternatives",
                "confidence",
                "manuallyModified",
                "value"
              ]
            }
          },
          "protocolMetadata": {
            "type": "object",
            "description": "Métadonnées définies par le protocole. Les clés de l'objet sont les identifiants des métadonnées, sans le préfixe qui identifie leur protocole de provenance",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "alternatives": {
                  "type": "object",
                  "description": "Autres valeurs possibles. Les clés de l'objet sont les autres valeurs possibles pour cette métadonnée (converties en texte via JSON), les valeurs de l'objet sont les confiances associées à ces alternatives.",
                  "additionalProperties": {
                    "type": "number",
                    "description": "Confiance dans cette valeur alternative de la métadonnée, entre 0 et 1."
                  }
                },
                "confidence": {
                  "type": "number",
                  "description": "Confiance dans la valeur de la métadonnée, entre 0 et 1"
                },
                "manuallyModified": {
                  "type": "boolean",
                  "description": "La valeur de la métadonnée a été modifiée manuellement"
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "number",
                      "description": "Valeur de la métadonnée"
                    },
                    {
                      "type": "string",
                      "description": "Valeur de la métadonnée"
                    },
                    {
                      "type": "object",
                      "description": "Valeur de la métadonnée",
                      "properties": {
                        "h": {
                          "type": "number"
                        },
                        "w": {
                          "type": "number"
                        },
                        "x": {
                          "type": "number"
                        },
                        "y": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "h",
                        "w",
                        "x",
                        "y"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "Valeur de la métadonnée",
                      "properties": {
                        "latitude": {
                          "type": "number"
                        },
                        "longitude": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "latitude",
                        "longitude"
                      ]
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null",
                      "description": "Valeur de la métadonnée"
                    }
                  ],
                  "description": "Valeur de la métadonnée"
                },
                "valueLabel": {
                  "type": "string",
                  "description": "Label de la valeur de la métadonnée. Existe pour les métadonnées de type enum, contient dans ce cas le label associé à la clé de l'option de l'enum choisie"
                }
              },
              "required": [
                "alternatives",
                "confidence",
                "manuallyModified",
                "value"
              ]
            }
          }
        },
        "required": [
          "images",
          "label",
          "metadata",
          "protocolMetadata"
        ]
      }
    },
    "protocol": {
      "type": "object",
      "description": "Le protocole utilisé pour cette session d'analyse",
      "properties": {
        "authors": {
          "type": "array",
          "description": "Les auteurices ayant participé à l'élaboration du protocole",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Prénom Nom"
              },
              "email": {
                "type": "string",
                "description": "Adresse email",
                "pattern": "^[\\w%+.-]+@[\\d.A-Za-z-]+\\.[A-Za-z]{2,}$",
                "format": "email"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "crop": {
          "type": "object",
          "description": "Configuration de la partie recadrage",
          "properties": {
            "metadata": {
              "type": "string",
              "description": "Métadonnée associée à la boîte englobante",
              "pattern": "^[\\w._]+$"
            },
            "confirmationMetadata": {
              "type": "string",
              "description": "Métadonnée associée au fait que la boîte englobante a été (humainement) confirmée",
              "pattern": "^[\\w._]+$"
            },
            "infer": {
              "type": "array",
              "description": "Configuration de l'inférence des boîtes englobantes",
              "items": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "object",
                    "description": "Configuration de l'entrée du modèle",
                    "properties": {
                      "height": {
                        "type": "number",
                        "description": "Hauteur en pixels du tenseur d'entrée du modèle",
                        "exclusiveMaximum": 1024
                      },
                      "normalized": {
                        "type": "boolean",
                        "description": "Si les valeurs des pixels doivent être normalisées entre 0 et 1. Sinon, elles sont entre 0 et 255"
                      },
                      "width": {
                        "type": "number",
                        "description": "Largeur en pixels du tenseur d'entrée du modèle",
                        "exclusiveMaximum": 1024
                      },
                      "disposition": {
                        "anyOf": [
                          {
                            "const": "1CHW",
                            "description": "Tenseurs de la forme [1, 3, H, W]"
                          },
                          {
                            "const": "CHW",
                            "description": "Tenseurs de la forme [3, H, W]"
                          }
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "Nom de l'input du modèle à utiliser. Par défaut, prend la première input"
                      }
                    },
                    "required": [
                      "height",
                      "normalized",
                      "width"
                    ]
                  },
                  "model": {
                    "anyOf": [
                      {
                        "type": "string",
                        "description": "Lien vers le modèle de détection utilisé pour inférer les boîtes englobantes. Au format ONNX (.onnx) seulement, pour le moment.",
                        "pattern": "https?:\\/\\/.+"
                      },
                      {
                        "type": "object",
                        "description": "Lien vers le modèle de détection utilisé pour inférer les boîtes englobantes. Au format ONNX (.onnx) seulement, pour le moment.",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "L'URL de la requête",
                            "pattern": "https?:\\/\\/.+"
                          },
                          "headers": {
                            "type": "object",
                            "description": "Les en-têtes à ajouter dans la requête",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "method": {
                            "anyOf": [
                              {
                                "const": "DELETE",
                                "description": "La méthode de la requête (GET par défaut)"
                              },
                              {
                                "const": "GET",
                                "description": "La méthode de la requête (GET par défaut)"
                              },
                              {
                                "const": "POST",
                                "description": "La méthode de la requête (GET par défaut)"
                              },
                              {
                                "const": "PUT",
                                "description": "La méthode de la requête (GET par défaut)"
                              }
                            ],
                            "description": "La méthode de la requête (GET par défaut)"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    ],
                    "description": "Lien vers le modèle de détection utilisé pour inférer les boîtes englobantes. Au format ONNX (.onnx) seulement, pour le moment."
                  },
                  "output": {
                    "type": "object",
                    "description": "Forme de la sortie du modèle de classification. Par exemple, shape: [cx, cy, w, h, score, _] et normalized: true correspond à un modèle YOLO11 COCO",
                    "properties": {
                      "normalized": {
                        "type": "boolean",
                        "description": "Si les coordonnées des boîtes englobantes sont normalisées par rapport aux dimensions de l'image"
                      },
                      "shape": {
                        "type": "array",
                        "description": "Forme de sortie de chaque boîte englobante. Nécéssite obligatoirement d'avoir 'score'; 2 parmi 'cx', 'sx', 'ex', 'w'; et 2 parmi 'cy', 'sy', 'ey', 'h'. Si les boîtes contiennent d'autre valeurs, bien les mentionner avec '_', même quand c'est à la fin de la liste: cela permet de savoir quand on passe à la boîte suivante. Par exemple, [cx, cy, w, h, score, _] correspond à un modèle YOLO11 COCO",
                        "items": {
                          "anyOf": [
                            {
                              "const": "_",
                              "description": "Autre valeur (ignorée par CIGALE)"
                            },
                            {
                              "const": "cx",
                              "description": "Coordonée X du point central"
                            },
                            {
                              "const": "cy",
                              "description": "Coordonée Y du point central"
                            },
                            {
                              "const": "ex",
                              "description": "Coordonée X du point inférieur droit"
                            },
                            {
                              "const": "ey",
                              "description": "Coordonée Y du point inférieur droit"
                            },
                            {
                              "const": "h",
                              "description": "Hauteur de la boîte englobante"
                            },
                            {
                              "const": "score",
                              "description": "Score de confiance de cette boîte, entre 0 et 1"
                            },
                            {
                              "const": "sx",
                              "description": "Coordonée X du point supérieur gauche"
                            },
                            {
                              "const": "sy",
                              "description": "Coordonée Y du point supérieur gauche"
                            },
                            {
                              "const": "w",
                              "description": "Largeur de la boîte englobante"
                            }
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Nom de l'output du modèle à utiliser. output0 par défaut"
                      }
                    },
                    "required": [
                      "normalized",
                      "shape"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Nom du réseau à afficher dans l'interface. Particulièrement utile si il y a plusieurs réseaux"
                  }
                },
                "required": [
                  "input",
                  "model",
                  "output"
                ]
              }
            },
            "padding": {
              "type": "string",
              "description": "Pixels de marge à rajouter autour de la boîte englobante au moment d'exporter les images recadrées. Nombre suivi de 'px' pour un nombre de pixels fixe, ou de '%' pour un pourcentage des dimensions de chaque image.",
              "pattern": "^\\d+(%|px)$"
            }
          },
          "required": [
            "metadata"
          ]
        },
        "description": {
          "type": "string",
          "description": "Description du protocole"
        },
        "id": {
          "type": "string",
          "description": "Identifiant unique pour le protocole. On conseille de mettre une partie qui vous identifie dans cet identifiant, car il doit être globalement unique. Par exemple, mon-organisation.mon-protocole",
          "pattern": "^[\\w._]+$"
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[\\w._]+$"
          }
        },
        "name": {
          "type": "string",
          "description": "Nom du protocole"
        },
        "dirty": {
          "type": "boolean",
          "description": "Si le protocole a été modifié depuis sa dernière exportation"
        },
        "exports": {
          "type": "object",
          "description": "La structure du fichier .zip d'export pour ce protocole.",
          "properties": {
            "images": {
              "type": "object",
              "description": "Chemins où sauvegarder les images. Vous pouvez utiliser {{observation.metadata.identifiant.value}} pour insérer la valeur d'une métadonnée, {{image.filename}} pour le nom de fichier, {{observation.label}} pour le label (nom) de l'observation, et {{sequence}} pour un numéro d'image, commençant à 1. {{observation.metadata.identifiant.valueLabel}} peut être pratique pour obtenir le label associé au choix d'une métadonnée de type 'enum'. Enfin, il est possible de faire {{suffix image.filename \"_exemple\"}} pour ajouter \"_exemple\" à la fin d'un nom de fichier, mais avant son extension (par exemple: {{suffix image.filename \"_cropped\"}} donnera \"IMG_1245_cropped.JPEG\" si l'image avait pour nom de fichier \"IMG_12345.JPEG\"); Vous pouvez faire {{extension image.filename}} pour avoir l'extension d'un fichier, et {{fallback image.metadata.exemple \"(Inconnnu)\"}} pour utiliser \"(Inconnu)\" si image.metadata.example n'existe pas. Ce sont enfait des templates Handlebars, en savoir plus: https://handlebarsjs.com/guide/",
              "properties": {
                "cropped": {
                  "type": "string",
                  "description": "Chemins des images recadrées"
                },
                "original": {
                  "type": "string",
                  "description": "Chemins des images originales"
                }
              },
              "required": [
                "cropped",
                "original"
              ]
            },
            "metadata": {
              "type": "object",
              "properties": {
                "csv": {
                  "type": "string",
                  "description": "Chemin du fichier CSV contenant les résultats de l'analyse"
                },
                "json": {
                  "type": "string",
                  "description": "Chemin du fichier JSON contenant les résultats de l'analyse"
                }
              },
              "required": [
                "csv",
                "json"
              ]
            }
          },
          "required": [
            "images",
            "metadata"
          ]
        },
        "learnMore": {
          "type": "string",
          "description": "Lien vers un site où l'on peut se renseigner sur ce protocole. Cela peut aussi être simplement un lien de téléchargement direct de ce fichier",
          "pattern": "https?:\\/\\/.+"
        },
        "metadataOrder": {
          "type": "array",
          "description": "L'ordre dans lequel les métadonnées doivent être présentées dans l'interface utilisateur. Les métadonnées non listées ici seront affichées après toutes celles listées ici",
          "items": {
            "type": "string",
            "pattern": "^[\\w._]+$"
          }
        },
        "observations": {
          "type": "object",
          "properties": {
            "defaultLabel": {
              "type": "string",
              "description": "Label par défaut pour les observations. Template Handlebars, recevant une liste des images de l'observation à crééer (clé images) et l'observation elle-même (clé observation)"
            }
          }
        },
        "source": {
          "anyOf": [
            {
              "type": "string",
              "description": "Requête ou URL devant mener à un fichier JSON contenant la version la plus récente du protocole. Permet de proposer des mises à jour.\n\t\t\n\t\tSi le champ \"version\" n'existe pas (que ce soit dans le protocole local ou distant), aucune mise à jour ne sera proposée.",
              "pattern": "https?:\\/\\/.+"
            },
            {
              "type": "object",
              "description": "Requête ou URL devant mener à un fichier JSON contenant la version la plus récente du protocole. Permet de proposer des mises à jour.\n\t\t\n\t\tSi le champ \"version\" n'existe pas (que ce soit dans le protocole local ou distant), aucune mise à jour ne sera proposée.",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "L'URL de la requête",
                  "pattern": "https?:\\/\\/.+"
                },
                "headers": {
                  "type": "object",
                  "description": "Les en-têtes à ajouter dans la requête",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "method": {
                  "anyOf": [
                    {
                      "const": "DELETE",
                      "description": "La méthode de la requête (GET par défaut)"
                    },
                    {
                      "const": "GET",
                      "description": "La méthode de la requête (GET par défaut)"
                    },
                    {
                      "const": "POST",
                      "description": "La méthode de la requête (GET par défaut)"
                    },
                    {
                      "const": "PUT",
                      "description": "La méthode de la requête (GET par défaut)"
                    }
                  ],
                  "description": "La méthode de la requête (GET par défaut)"
                }
              },
              "required": [
                "url"
              ]
            }
          ],
          "description": "Requête ou URL devant mener à un fichier JSON contenant la version la plus récente du protocole. Permet de proposer des mises à jour.\n\t\t\n\t\tSi le champ \"version\" n'existe pas (que ce soit dans le protocole local ou distant), aucune mise à jour ne sera proposée."
        },
        "version": {
          "type": "number",
          "description": "Version actuelle du protocole"
        }
      },
      "required": [
        "authors",
        "crop",
        "description",
        "id",
        "metadata",
        "name"
      ]
    }
  },
  "required": [
    "observations",
    "protocol"
  ]
}