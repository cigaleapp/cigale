import{v as Je,j as Ne,t as N,m as Ue,M as Ot,g as Y,l as Gt,k as mt,C as Mt,_ as kt,a7 as se,a8 as Nt,A as Ut,x as _e,e as _t,o as pt,a9 as xt}from"./BZvTGrCn.js";import{k as Xe}from"./Bn_ZbADV.js";import{s as ht}from"./hWH8XGqh.js";import{u as P}from"./C-_QJLm4.js";import{l as zt,m as dt,r as gt,s as St,j as yt,h as Ge,c as Ye,n as Vt,k as jt,d as Ht}from"./CHjfjsK1.js";import{_ as te,g as ve}from"./gEdK1vYj.js";import{f as qt}from"./DmH6iQKy.js";import{s as Wt,e as Jt,f as Qe,i as Xt}from"./BYsr5R_O.js";import{t as q}from"./CAsIlwrN.js";import{q as Yt,e as Ze,m as $e,p as Ke,t as Qt,r as Zt,v as $t,n as et}from"./DvdFYW7d.js";function Xi(t,e){const i=+Je(t)-+Je(e);return i<0?-1:i>0?1:i}async function Yi(){const t=te(Ne("js"));if(Notification.permission==="default")try{await Notification.requestPermission()}catch(e){console.error("Notification permission request failed",e)}else Notification.permission==="denied"&&q.error(t.t(386))}async function Kt(t,e){ei()&&new Notification(t,e)}function ei(){return Notification.permission==="granted"}async function ti(t,e,i){if(!P.currentProtocol)throw new Error("Aucun protocole sélectionné");if(!P.classificationMetadataId){console.warn("No metadata with neural inference defined, not analyzing image. Configure neural inference on a enum metadata (set metadata.<your metadata id>.infer.neural) if this was not intentional.");return}const{cancel:n,request:o}=t.classify.cancelable({imageId:e,metadataIds:{cropbox:P.cropMetadataId,target:P.classificationMetadataId},taskSettings:ii(P.currentProtocol,P.selectedClassificationModel)});i?.set(e,n),await o,await N.Image.refresh()}function ii(t,e){const i=Ue.case({id:Y.string.narrow(n=>t.metadata.includes(n)),type:'"enum"',infer:Ot},n=>n.infer.neural[e]).default(()=>{});return N.Metadata.state.map(n=>i(n)).filter(Boolean).at(0)}var Ce,tt;function ai(){return tt||(tt=1,Ce={parseSections:function(t,e){var i,n;for(t.setBigEndian(!0);t.remainingLength()>0&&n!==218;){if(t.nextUInt8()!==255)throw new Error("Invalid JPEG section offset");n=t.nextUInt8(),n>=208&&n<=217||n===218?i=0:i=t.nextUInt16()-2,e(n,t.branch(0,i)),t.skip(i)}},getSizeFromSOFSection:function(t){return t.skip(1),{height:t.nextUInt16(),width:t.nextUInt16()}},getSectionName:function(t){var e,i;switch(t){case 216:e="SOI";break;case 196:e="DHT";break;case 219:e="DQT";break;case 221:e="DRI";break;case 218:e="SOS";break;case 254:e="COM";break;case 217:e="EOI";break;default:t>=224&&t<=239?(e="APP",i=t-224):t>=192&&t<=207&&t!==196&&t!==200&&t!==204?(e="SOF",i=t-192):t>=208&&t<=215&&(e="RST",i=t-208);break}var n={name:e};return typeof i=="number"&&(n.index=i),n}}),Ce}var Pe,it;function vt(){if(it)return Pe;it=1;function t(f,u){switch(f){case 1:return u.nextUInt8();case 3:return u.nextUInt16();case 4:return u.nextUInt32();case 5:return[u.nextUInt32(),u.nextUInt32()];case 6:return u.nextInt8();case 8:return u.nextUInt16();case 9:return u.nextUInt32();case 10:return[u.nextInt32(),u.nextInt32()];case 11:return u.nextFloat();case 12:return u.nextDouble();default:throw new Error("Invalid format while decoding: "+f)}}function e(f){switch(f){case 1:case 2:case 6:case 7:return 1;case 3:case 8:return 2;case 4:case 9:case 11:return 4;case 5:case 10:case 12:return 8;default:return 0}}function i(f,u){var m=u.nextUInt16(),h=u.nextUInt16(),S=e(h),v=u.nextUInt32(),c=S*v,y,g;if(c>4&&(u=f.openWithOffset(u.nextUInt32())),h===2){y=u.nextString(v);var C=y.indexOf("\0");C!==-1&&(y=y.substr(0,C))}else if(h===7)y=u.nextBuffer(v);else if(h!==0)for(y=[],g=0;g<v;++g)y.push(t(h,u));return c<4&&u.skip(4-c),[m,y,h]}function n(f,u,m){var h=u.nextUInt16(),S,v;for(v=0;v<h;++v)S=i(f,u),m(S[0],S[1],S[2])}function o(f){var u=f.nextString(6);if(u!=="Exif\0\0")throw new Error("Invalid EXIF header");var m=f.mark(),h=f.nextUInt16();if(h===18761)f.setBigEndian(!1);else if(h===19789)f.setBigEndian(!0);else throw new Error("Invalid TIFF header");if(f.nextUInt16()!==42)throw new Error("Invalid TIFF data");return m}return Pe={IFD0:1,IFD1:2,GPSIFD:3,SubIFD:4,InteropIFD:5,parseTags:function(f,u){var m;try{m=o(f)}catch{return!1}var h,S,v,c=m.openWithOffset(f.nextUInt32()),y=this.IFD0;n(m,c,function(w,F,a){switch(w){case 34853:S=F[0];break;case 34665:h=F[0];break;default:u(y,w,F,a);break}});var g=c.nextUInt32();if(g!==0){var C=m.openWithOffset(g);n(m,C,u.bind(null,this.IFD1))}if(S){var D=m.openWithOffset(S);n(m,D,u.bind(null,this.GPSIFD))}if(h){var T=m.openWithOffset(h),L=this.InteropIFD;n(m,T,function(w,F,a){w===40965?v=F[0]:u(L,w,F,a)})}if(v){var O=m.openWithOffset(v);n(m,O,u.bind(null,this.InteropIFD))}return!0}},Pe}var Ie,at;function ni(){if(at)return Ie;at=1;function t(m){return parseInt(m,10)}var e=3600,i=60;function n(m,h){m=m.map(t),h=h.map(t);var S=m[0],v=m[1]-1,c=m[2],y=h[0],g=h[1],C=h[2],D=Date.UTC(S,v,c,y,g,C,0),T=D/1e3;return T}function o(m){var h=m.substr(0,10).split("-"),S=m.substr(11,8).split(":"),v=m.substr(19,6),c=v.split(":").map(t),y=c[0]*e+c[1]*i,g=n(h,S);if(g-=y,typeof g=="number"&&!isNaN(g))return g}function f(m){var h=m.split(" "),S=h[0].split(":"),v=h[1].split(":"),c=n(S,v);if(typeof c=="number"&&!isNaN(c))return c}function u(m){var h=m.length===19&&m.charAt(4)===":",S=m.length===25&&m.charAt(10)==="T";if(S)return o(m);if(h)return f(m)}return Ie={parseDateWithSpecFormat:f,parseDateWithTimezoneFormat:o,parseExifDate:u},Ie}var be,nt;function ri(){if(nt)return be;nt=1;var t=vt(),e=ni(),i=[{section:t.GPSIFD,type:2,name:"GPSLatitude",refType:1,refName:"GPSLatitudeRef",posVal:"N"},{section:t.GPSIFD,type:4,name:"GPSLongitude",refType:3,refName:"GPSLongitudeRef",posVal:"E"}],n=[{section:t.SubIFD,type:306,name:"ModifyDate"},{section:t.SubIFD,type:36867,name:"DateTimeOriginal"},{section:t.SubIFD,type:36868,name:"CreateDate"},{section:t.SubIFD,type:306,name:"ModifyDate"}];return be={castDegreeValues:function(o,f){i.forEach(function(u){var m=o(u);if(m){var h=o({section:u.section,type:u.refType,name:u.refName}),S=h===u.posVal?1:-1,v=(m[0]+m[1]/60+m[2]/3600)*S;f(u,v)}})},castDateValues:function(o,f){n.forEach(function(u){var m=o(u);if(m){var h=e.parseExifDate(m);typeof h<"u"&&f(u,h)}})},simplifyValue:function(o,f){return Array.isArray(o)&&(o=o.map(function(u){return f===10||f===5?u[0]/u[1]:u}),o.length===1&&(o=o[0])),o}},be}var De,rt;function oi(){return rt||(rt=1,De={exif:{1:"InteropIndex",2:"InteropVersion",11:"ProcessingSoftware",254:"SubfileType",255:"OldSubfileType",256:"ImageWidth",257:"ImageHeight",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Thresholding",264:"CellWidth",265:"CellLength",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",292:"T4Options",293:"T6Options",296:"ResolutionUnit",297:"PageNumber",300:"ColorResponseUnit",301:"TransferFunction",305:"Software",306:"ModifyDate",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFD",332:"InkSet",333:"InkNames",334:"NumberofInks",336:"DotRange",337:"TargetPrinter",338:"ExtraSamples",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",435:"T82Options",437:"JPEGTables",512:"JPEGProc",513:"ThumbnailOffset",514:"ThumbnailLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"ApplicationNotes",999:"USPTOMiscellaneous",4096:"RelatedImageFileFormat",4097:"RelatedImageWidth",4098:"RelatedImageHeight",18246:"Rating",18247:"XP_DIP_XML",18248:"StitchInfo",18249:"RatingPercent",32781:"ImageID",32931:"WangTag1",32932:"WangAnnotation",32933:"WangTag3",32934:"WangTag4",32995:"Matteing",32996:"DataType",32997:"ImageDepth",32998:"TileDepth",33405:"Model2",33421:"CFARepeatPatternDim",33422:"CFAPattern2",33423:"BatteryLevel",33424:"KodakIFD",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"PixelScale",33589:"AdventScale",33590:"AdventRevision",33628:"UIC1Tag",33629:"UIC2Tag",33630:"UIC3Tag",33631:"UIC4Tag",33723:"IPTC-NAA",33918:"IntergraphPacketData",33919:"IntergraphFlagRegisters",33920:"IntergraphMatrix",33921:"INGRReserved",33922:"ModelTiePoint",34016:"Site",34017:"ColorSequence",34018:"IT8Header",34019:"RasterPadding",34020:"BitsPerRunLength",34021:"BitsPerExtendedRunLength",34022:"ColorTable",34023:"ImageColorIndicator",34024:"BackgroundColorIndicator",34025:"ImageColorValue",34026:"BackgroundColorValue",34027:"PixelIntensityRange",34028:"TransparencyIndicator",34029:"ColorCharacterization",34030:"HCUsage",34031:"TrapIndicator",34032:"CMYKEquivalent",34118:"SEMInfo",34152:"AFCP_IPTC",34232:"PixelMagicJBIGOptions",34264:"ModelTransform",34306:"WB_GRGBLevels",34310:"LeafData",34377:"PhotoshopSettings",34665:"ExifOffset",34675:"ICC_Profile",34687:"TIFF_FXExtensions",34688:"MultiProfiles",34689:"SharedData",34690:"T88Options",34732:"ImageLayer",34735:"GeoTiffDirectory",34736:"GeoTiffDoubleParams",34737:"GeoTiffAsciiParams",34850:"ExposureProgram",34852:"SpectralSensitivity",34853:"GPSInfo",34855:"ISO",34856:"Opto-ElectricConvFactor",34857:"Interlace",34858:"TimeZoneOffset",34859:"SelfTimerMode",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",34908:"FaxRecvParams",34909:"FaxSubAddress",34910:"FaxRecvTime",34954:"LeafSubIFD",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"CreateDate",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureCompensation",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37387:"FlashEnergy",37388:"SpatialFrequencyResponse",37389:"Noise",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37394:"SecurityClassification",37395:"ImageHistory",37396:"SubjectArea",37397:"ExposureIndex",37398:"TIFF-EPStandardID",37399:"SensingMethod",37434:"CIP3DataFile",37435:"CIP3Sheet",37436:"CIP3Side",37439:"StoNits",37500:"MakerNote",37510:"UserComment",37520:"SubSecTime",37521:"SubSecTimeOriginal",37522:"SubSecTimeDigitized",37679:"MSDocumentText",37680:"MSPropertySetStorage",37681:"MSDocumentTextPosition",37724:"ImageSourceData",40091:"XPTitle",40092:"XPComment",40093:"XPAuthor",40094:"XPKeywords",40095:"XPSubject",40960:"FlashpixVersion",40961:"ColorSpace",40962:"ExifImageWidth",40963:"ExifImageHeight",40964:"RelatedSoundFile",40965:"InteropOffset",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41485:"Noise",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41489:"ImageNumber",41490:"SecurityClassification",41491:"ImageHistory",41492:"SubjectLocation",41493:"ExposureIndex",41494:"TIFF-EPStandardID",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFormat",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"OwnerName",42033:"SerialNumber",42034:"LensInfo",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42112:"GDALMetadata",42113:"GDALNoData",42240:"Gamma",44992:"ExpandSoftware",44993:"ExpandLens",44994:"ExpandFilm",44995:"ExpandFilterLens",44996:"ExpandScanner",44997:"ExpandFlashLamp",48129:"PixelFormat",48130:"Transformation",48131:"Uncompressed",48132:"ImageType",48256:"ImageWidth",48257:"ImageHeight",48258:"WidthResolution",48259:"HeightResolution",48320:"ImageOffset",48321:"ImageByteCount",48322:"AlphaOffset",48323:"AlphaByteCount",48324:"ImageDataDiscard",48325:"AlphaDataDiscard",50215:"OceScanjobDesc",50216:"OceApplicationSelector",50217:"OceIDNumber",50218:"OceImageLogic",50255:"Annotations",50341:"PrintIM",50560:"USPTOOriginalContentType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"DNGLensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50752:"RawImageSegmentation",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50784:"AliasLayerMetadata",50827:"OriginalRawFileName",50828:"OriginalRawFileData",50829:"ActiveArea",50830:"MaskedAreas",50831:"AsShotICCProfile",50832:"AsShotPreProfileMatrix",50833:"CurrentICCProfile",50834:"CurrentPreProfileMatrix",50879:"ColorimetricReference",50898:"PanasonicTitle",50899:"PanasonicTitle2",50931:"CameraCalibrationSig",50932:"ProfileCalibrationSig",50933:"ProfileIFD",50934:"AsShotProfileName",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50968:"PreviewSettingsName",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",50973:"OriginalRawFileDigest",50974:"SubTileBlockSize",50975:"RowInterleaveFactor",50981:"ProfileLookTableDims",50982:"ProfileLookTableData",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51043:"TimeCodes",51044:"FrameRate",51058:"TStop",51081:"ReelName",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualitySize",51091:"OriginalDefaultCropSize",51105:"CameraLabel",51107:"ProfileHueSatMapEncoding",51108:"ProfileLookTableEncoding",51109:"BaselineExposureOffset",51110:"DefaultBlackRender",51111:"NewRawImageDigest",51112:"RawToPreviewGain",51125:"DefaultUserCrop",59932:"Padding",59933:"OffsetSchema",65e3:"OwnerName",65001:"SerialNumber",65002:"Lens",65024:"KDC_IFD",65100:"RawFile",65101:"Converter",65102:"WhiteBalance",65105:"Exposure",65106:"Shadows",65107:"Brightness",65108:"Contrast",65109:"Saturation",65110:"Sharpness",65111:"Smoothness",65112:"MoireFilter"},gps:{0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"}}),De}var Ee,ot;function si(){if(ot)return Ee;ot=1;var t=ai(),e=vt(),i=ri();function n(f,u,m,h,S,v,c){this.startMarker=f,this.tags=u,this.imageSize=m,this.thumbnailOffset=h,this.thumbnailLength=S,this.thumbnailType=v,this.app1Offset=c}n.prototype={hasThumbnail:function(f){return!this.thumbnailOffset||!this.thumbnailLength?!1:typeof f!="string"?!0:f.toLowerCase().trim()==="image/jpeg"?this.thumbnailType===6:f.toLowerCase().trim()==="image/tiff"?this.thumbnailType===1:!1},getThumbnailOffset:function(){return this.app1Offset+6+this.thumbnailOffset},getThumbnailLength:function(){return this.thumbnailLength},getThumbnailBuffer:function(){return this._getThumbnailStream().nextBuffer(this.thumbnailLength)},_getThumbnailStream:function(){return this.startMarker.openWithOffset(this.getThumbnailOffset())},getImageSize:function(){return this.imageSize},getThumbnailSize:function(){var f=this._getThumbnailStream(),u;return t.parseSections(f,function(m,h){t.getSectionName(m).name==="SOF"&&(u=t.getSizeFromSOFSection(h))}),u}};function o(f){this.stream=f,this.flags={readBinaryTags:!1,resolveTagNames:!0,simplifyValues:!0,imageSize:!0,hidePointers:!0,returnTags:!0}}return o.prototype={enableBinaryFields:function(f){return this.flags.readBinaryTags=!!f,this},enablePointers:function(f){return this.flags.hidePointers=!f,this},enableTagNames:function(f){return this.flags.resolveTagNames=!!f,this},enableImageSize:function(f){return this.flags.imageSize=!!f,this},enableReturnTags:function(f){return this.flags.returnTags=!!f,this},enableSimpleValues:function(f){return this.flags.simplifyValues=!!f,this},parse:function(){var f=this.stream.mark(),u=f.openWithOffset(0),m=this.flags,h,S,v,c,y,g,C,D,T;return m.resolveTagNames&&(C=oi()),m.resolveTagNames?(h={},D=function(L){return h[L.name]},T=function(L,O){h[L.name]=O}):(h=[],D=function(L){var O;for(O=0;O<h.length;++O)if(h[O].type===L.type&&h[O].section===L.section)return h.value},T=function(L,O){var w;for(w=0;w<h.length;++w)if(h[w].type===L.type&&h[w].section===L.section){h.value=O;return}}),t.parseSections(u,function(L,O){var w,F=O.offsetFrom(f);L===225?(w=e.parseTags(O,function(a,r,s,p){if(!(!m.readBinaryTags&&p===7)){if(r===513){if(v=s[0],m.hidePointers)return}else if(r===514){if(c=s[0],m.hidePointers)return}else if(r===259&&(y=s[0],m.hidePointers))return;if(m.returnTags)if(m.simplifyValues&&(s=i.simplifyValue(s,p)),m.resolveTagNames){var x=a===e.GPSIFD?C.gps:C.exif,l=x[r];l||(l=C.exif[r]),h.hasOwnProperty(l)||(h[l]=s)}else h.push({section:a,type:r,value:s})}}),w&&(g=F)):m.imageSize&&t.getSectionName(L).name==="SOF"&&(S=t.getSizeFromSOFSection(O))}),m.simplifyValues&&(i.castDegreeValues(D,T),i.castDateValues(D,T)),new n(f,h,S,v,c,y,g)}},Ee=o,Ee}var Fe,st;function li(){if(st)return Fe;st=1;function t(e,i,n,o,f,u){this.global=f,i=i||0,n=n||e.byteLength-i,this.arrayBuffer=e.slice(i,i+n),this.view=new f.DataView(this.arrayBuffer,0,this.arrayBuffer.byteLength),this.setBigEndian(o),this.offset=0,this.parentOffset=(u||0)+i}return t.prototype={setBigEndian:function(e){this.littleEndian=!e},nextUInt8:function(){var e=this.view.getUint8(this.offset);return this.offset+=1,e},nextInt8:function(){var e=this.view.getInt8(this.offset);return this.offset+=1,e},nextUInt16:function(){var e=this.view.getUint16(this.offset,this.littleEndian);return this.offset+=2,e},nextUInt32:function(){var e=this.view.getUint32(this.offset,this.littleEndian);return this.offset+=4,e},nextInt16:function(){var e=this.view.getInt16(this.offset,this.littleEndian);return this.offset+=2,e},nextInt32:function(){var e=this.view.getInt32(this.offset,this.littleEndian);return this.offset+=4,e},nextFloat:function(){var e=this.view.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e},nextDouble:function(){var e=this.view.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},nextBuffer:function(e){var i=this.arrayBuffer.slice(this.offset,this.offset+e);return this.offset+=e,i},remainingLength:function(){return this.arrayBuffer.byteLength-this.offset},nextString:function(e){var i=this.arrayBuffer.slice(this.offset,this.offset+e);return i=String.fromCharCode.apply(null,new this.global.Uint8Array(i)),this.offset+=e,i},mark:function(){var e=this;return{openWithOffset:function(i){return i=(i||0)+this.offset,new t(e.arrayBuffer,i,e.arrayBuffer.byteLength-i,!e.littleEndian,e.global,e.parentOffset)},offset:this.offset,getParentOffset:function(){return e.parentOffset}}},offsetFrom:function(e){return this.parentOffset+this.offset-(e.offset+e.getParentOffset())},skip:function(e){this.offset+=e},branch:function(e,i){return i=typeof i=="number"?i:this.arrayBuffer.byteLength-(this.offset+e),new t(this.arrayBuffer,this.offset+e,i,!this.littleEndian,this.global,this.parentOffset)}},Fe=t,Fe}var Ae,lt;function fi(){if(lt)return Ae;lt=1;function t(e,i,n,o){this.buffer=e,this.offset=i||0,n=typeof n=="number"?n:e.length,this.endPosition=this.offset+n,this.setBigEndian(o)}return t.prototype={setBigEndian:function(e){this.bigEndian=!!e},nextUInt8:function(){var e=this.buffer.readUInt8(this.offset);return this.offset+=1,e},nextInt8:function(){var e=this.buffer.readInt8(this.offset);return this.offset+=1,e},nextUInt16:function(){var e=this.bigEndian?this.buffer.readUInt16BE(this.offset):this.buffer.readUInt16LE(this.offset);return this.offset+=2,e},nextUInt32:function(){var e=this.bigEndian?this.buffer.readUInt32BE(this.offset):this.buffer.readUInt32LE(this.offset);return this.offset+=4,e},nextInt16:function(){var e=this.bigEndian?this.buffer.readInt16BE(this.offset):this.buffer.readInt16LE(this.offset);return this.offset+=2,e},nextInt32:function(){var e=this.bigEndian?this.buffer.readInt32BE(this.offset):this.buffer.readInt32LE(this.offset);return this.offset+=4,e},nextFloat:function(){var e=this.bigEndian?this.buffer.readFloatBE(this.offset):this.buffer.readFloatLE(this.offset);return this.offset+=4,e},nextDouble:function(){var e=this.bigEndian?this.buffer.readDoubleBE(this.offset):this.buffer.readDoubleLE(this.offset);return this.offset+=8,e},nextBuffer:function(e){var i=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,i},remainingLength:function(){return this.endPosition-this.offset},nextString:function(e){var i=this.buffer.toString("utf8",this.offset,this.offset+e);return this.offset+=e,i},mark:function(){var e=this;return{openWithOffset:function(i){return i=(i||0)+this.offset,new t(e.buffer,i,e.endPosition-i,e.bigEndian)},offset:this.offset}},offsetFrom:function(e){return this.offset-e.offset},skip:function(e){this.offset+=e},branch:function(e,i){return i=typeof i=="number"?i:this.endPosition-(this.offset+e),new t(this.buffer,this.offset+e,i,this.bigEndian)}},Ae=t,Ae}var we,ft;function ui(){if(ft)return we;ft=1;var t=si();function e(){return(0,eval)("this")}return we={create:function(i,n){if(n=n||e(),i instanceof n.ArrayBuffer){var o=li();return new t(new o(i,0,i.byteLength,!0,n))}else{var f=fi();return new t(new f(i,0,i.length,!0))}}},we}var ci=ui(),ye={exports:{}},ut;function mi(){return ut||(ut=1,(function(t,e){(function(){var i={};i.version="1.0.4",i.remove=function(a){var r=!1;if(a.slice(0,2)!="ÿØ")if(a.slice(0,23)=="data:image/jpeg;base64,"||a.slice(0,22)=="data:image/jpg;base64,")a=y(a.split(",")[1]),r=!0;else throw new Error("Given data is not jpeg.");var s=T(a),p=s.filter(function(l){return!(l.slice(0,2)=="ÿá"&&l.slice(4,10)=="Exif\0\0")}),x=p.join("");return r&&(x="data:image/jpeg;base64,"+c(x)),x},i.insert=function(a,r){var s=!1;if(a.slice(0,6)!="Exif\0\0")throw new Error("Given data is not exif.");if(r.slice(0,2)!="ÿØ")if(r.slice(0,23)=="data:image/jpeg;base64,"||r.slice(0,22)=="data:image/jpg;base64,")r=y(r.split(",")[1]),s=!0;else throw new Error("Given data is not jpeg.");var p="ÿá"+g(">H",[a.length+2])+a,x=T(r),l=O(x,p);return s&&(l="data:image/jpeg;base64,"+c(l)),l},i.load=function(a){var r;if(typeof a=="string")if(a.slice(0,2)=="ÿØ")r=a;else if(a.slice(0,23)=="data:image/jpeg;base64,"||a.slice(0,22)=="data:image/jpg;base64,")r=y(a.split(",")[1]);else if(a.slice(0,4)=="Exif")r=a.slice(6);else throw new Error("'load' gots invalid file data.");else throw new Error("'load' gots invalid type argument.");var s={"0th":{},Exif:{},GPS:{},Interop:{},"1st":{},thumbnail:null},p=new v(r);if(p.tiftag===null)return s;p.tiftag.slice(0,2)=="II"?p.endian_mark="<":p.endian_mark=">";var x=C(p.endian_mark+"L",p.tiftag.slice(4,8))[0];s["0th"]=p.get_ifd(x,"0th");var l=s["0th"].first_ifd_pointer;if(delete s["0th"].first_ifd_pointer,34665 in s["0th"]&&(x=s["0th"][34665],s.Exif=p.get_ifd(x,"Exif")),34853 in s["0th"]&&(x=s["0th"][34853],s.GPS=p.get_ifd(x,"GPS")),40965 in s.Exif&&(x=s.Exif[40965],s.Interop=p.get_ifd(x,"Interop")),l!="\0\0\0\0"&&(x=C(p.endian_mark+"L",l)[0],s["1st"]=p.get_ifd(x,"1st"),513 in s["1st"]&&514 in s["1st"])){var d=s["1st"][513]+s["1st"][514],E=p.tiftag.slice(s["1st"][513],d);s.thumbnail=E}return s},i.dump=function(a){var r=8,s=n(a),p="Exif\0\0MM\0*\0\0\0\b",x=!1,l=!1,d=!1,E=!1,b,I,R,A,W;"0th"in s?b=s["0th"]:b={},"Exif"in s&&Object.keys(s.Exif).length||"Interop"in s&&Object.keys(s.Interop).length?(b[34665]=1,x=!0,I=s.Exif,"Interop"in s&&Object.keys(s.Interop).length?(I[40965]=1,d=!0,R=s.Interop):Object.keys(I).indexOf(i.ExifIFD.InteroperabilityTag.toString())>-1&&delete I[40965]):Object.keys(b).indexOf(i.ImageIFD.ExifTag.toString())>-1&&delete b[34665],"GPS"in s&&Object.keys(s.GPS).length?(b[i.ImageIFD.GPSTag]=1,l=!0,A=s.GPS):Object.keys(b).indexOf(i.ImageIFD.GPSTag.toString())>-1&&delete b[i.ImageIFD.GPSTag],"1st"in s&&"thumbnail"in s&&s.thumbnail!=null&&(E=!0,s["1st"][513]=1,s["1st"][514]=1,W=s["1st"]);var X=S(b,"0th",0),G=X[0].length+x*12+l*12+4+X[1].length,_,ie="",M=0,z,ae="",V=0,ne,K="",re=0,Q,Se="",ee;if(x&&(_=S(I,"Exif",G),M=_[0].length+d*12+_[1].length),l&&(z=S(A,"GPS",G+M),ae=z.join(""),V=ae.length),d){var oe=G+M+V;ne=S(R,"Interop",oe),K=ne.join(""),re=K.length}if(E){var oe=G+M+V+re;if(Q=S(W,"1st",oe),ee=o(s.thumbnail),ee.length>64e3)throw new Error("Given thumbnail is too large. max 64kB")}var fe="",He="",qe="",We="\0\0\0\0";if(x){var Z=r+G,ue=g(">L",[Z]),ce=34665,me=g(">H",[ce]),pe=g(">H",[w.Long]),xe=g(">L",[1]);fe=me+pe+xe+ue}if(l){var Z=r+G+M,ue=g(">L",[Z]),ce=34853,me=g(">H",[ce]),pe=g(">H",[w.Long]),xe=g(">L",[1]);He=me+pe+xe+ue}if(d){var Z=r+G+M+V,ue=g(">L",[Z]),ce=40965,me=g(">H",[ce]),pe=g(">H",[w.Long]),xe=g(">L",[1]);qe=me+pe+xe+ue}if(E){var Z=r+G+M+V+re;We=g(">L",[Z]);var Rt=Z+Q[0].length+24+4+Q[1].length,Lt="\0\0\0\0"+g(">L",[Rt]),Bt="\0\0\0\0"+g(">L",[ee.length]);Se=Q[0]+Lt+Bt+"\0\0\0\0"+Q[1]+ee}var Tt=X[0]+fe+He+We+X[1];return x&&(ie=_[0]+qe+_[1]),p+Tt+ie+ae+K+Se};function n(a){return JSON.parse(JSON.stringify(a))}function o(a){for(var r=T(a);"ÿà"<=r[1].slice(0,2)&&r[1].slice(0,2)<="ÿï";)r=[r[0]].concat(r.slice(2));return r.join("")}function f(a){return g(">"+D("B",a.length),a)}function u(a){return g(">"+D("H",a.length),a)}function m(a){return g(">"+D("L",a.length),a)}function h(a,r,s){var p="",x="",l,d,E,b;if(r=="Byte")l=a.length,l<=4?x=f(a)+D("\0",4-l):(x=g(">L",[s]),p=f(a));else if(r=="Short")l=a.length,l<=2?x=u(a)+D("\0\0",2-l):(x=g(">L",[s]),p=u(a));else if(r=="Long")l=a.length,l<=1?x=m(a):(x=g(">L",[s]),p=m(a));else if(r=="Ascii")d=a+"\0",l=d.length,l>4?(x=g(">L",[s]),p=d):x=d+D("\0",4-l);else if(r=="Rational"){if(typeof a[0]=="number")l=1,E=a[0],b=a[1],d=g(">L",[E])+g(">L",[b]);else{l=a.length,d="";for(var I=0;I<l;I++)E=a[I][0],b=a[I][1],d+=g(">L",[E])+g(">L",[b])}x=g(">L",[s]),p=d}else if(r=="SRational"){if(typeof a[0]=="number")l=1,E=a[0],b=a[1],d=g(">l",[E])+g(">l",[b]);else{l=a.length,d="";for(var I=0;I<l;I++)E=a[I][0],b=a[I][1],d+=g(">l",[E])+g(">l",[b])}x=g(">L",[s]),p=d}else r=="Undefined"&&(l=a.length,l>4?(x=g(">L",[s]),p=a):x=a+D("\0",4-l));var R=g(">L",[l]);return[R,x,p]}function S(a,r,s){var p=8,x=Object.keys(a).length,l=g(">H",[x]),d;["0th","1st"].indexOf(r)>-1?d=2+x*12+4:d=2+x*12;var E="",b="",I;for(var I in a)if(typeof I=="string"&&(I=parseInt(I)),!(r=="0th"&&[34665,34853].indexOf(I)>-1)){{if(r=="Exif"&&I==40965)continue;if(r=="1st"&&[513,514].indexOf(I)>-1)continue}var R=a[I],A=g(">H",[I]),W=F[r][I].type,X=g(">H",[w[W]]);typeof R=="number"&&(R=[R]);var G=p+d+s+b.length,_=h(R,W,G),ie=_[0],M=_[1],z=_[2];E+=A+X+ie+M,b+=z}return[l+E,b]}function v(a){var r,s;if(a.slice(0,2)=="ÿØ")r=T(a),s=L(r),s?this.tiftag=s.slice(10):this.tiftag=null;else if(["II","MM"].indexOf(a.slice(0,2))>-1)this.tiftag=a;else if(a.slice(0,4)=="Exif")this.tiftag=a.slice(6);else throw new Error("Given file is neither JPEG nor TIFF.")}if(v.prototype={get_ifd:function(a,r){var s={},p=C(this.endian_mark+"H",this.tiftag.slice(a,a+2))[0],x=a+2,l;["0th","1st"].indexOf(r)>-1?l="Image":l=r;for(var d=0;d<p;d++){a=x+12*d;var E=C(this.endian_mark+"H",this.tiftag.slice(a,a+2))[0],b=C(this.endian_mark+"H",this.tiftag.slice(a+2,a+4))[0],I=C(this.endian_mark+"L",this.tiftag.slice(a+4,a+8))[0],R=this.tiftag.slice(a+8,a+12),A=[b,I,R];E in F[l]&&(s[E]=this.convert_value(A))}return r=="0th"&&(a=x+12*p,s.first_ifd_pointer=this.tiftag.slice(a,a+4)),s},convert_value:function(a){var r=null,s=a[0],p=a[1],x=a[2],l;if(s==1)p>4?(l=C(this.endian_mark+"L",x)[0],r=C(this.endian_mark+D("B",p),this.tiftag.slice(l,l+p))):r=C(this.endian_mark+D("B",p),x.slice(0,p));else if(s==2)p>4?(l=C(this.endian_mark+"L",x)[0],r=this.tiftag.slice(l,l+p-1)):r=x.slice(0,p-1);else if(s==3)p>2?(l=C(this.endian_mark+"L",x)[0],r=C(this.endian_mark+D("H",p),this.tiftag.slice(l,l+p*2))):r=C(this.endian_mark+D("H",p),x.slice(0,p*2));else if(s==4)p>1?(l=C(this.endian_mark+"L",x)[0],r=C(this.endian_mark+D("L",p),this.tiftag.slice(l,l+p*4))):r=C(this.endian_mark+D("L",p),x);else if(s==5)if(l=C(this.endian_mark+"L",x)[0],p>1){r=[];for(var d=0;d<p;d++)r.push([C(this.endian_mark+"L",this.tiftag.slice(l+d*8,l+4+d*8))[0],C(this.endian_mark+"L",this.tiftag.slice(l+4+d*8,l+8+d*8))[0]])}else r=[C(this.endian_mark+"L",this.tiftag.slice(l,l+4))[0],C(this.endian_mark+"L",this.tiftag.slice(l+4,l+8))[0]];else if(s==7)p>4?(l=C(this.endian_mark+"L",x)[0],r=this.tiftag.slice(l,l+p)):r=x.slice(0,p);else if(s==9)p>1?(l=C(this.endian_mark+"L",x)[0],r=C(this.endian_mark+D("l",p),this.tiftag.slice(l,l+p*4))):r=C(this.endian_mark+D("l",p),x);else if(s==10)if(l=C(this.endian_mark+"L",x)[0],p>1){r=[];for(var d=0;d<p;d++)r.push([C(this.endian_mark+"l",this.tiftag.slice(l+d*8,l+4+d*8))[0],C(this.endian_mark+"l",this.tiftag.slice(l+4+d*8,l+8+d*8))[0]])}else r=[C(this.endian_mark+"l",this.tiftag.slice(l,l+4))[0],C(this.endian_mark+"l",this.tiftag.slice(l+4,l+8))[0]];else throw new Error("Exif might be wrong. Got incorrect value type to decode. type:"+s);return r instanceof Array&&r.length==1?r[0]:r}},typeof window<"u"&&typeof window.btoa=="function")var c=window.btoa;if(typeof c>"u")var c=function(r){for(var s="",p,x,l,d,E,b,I,R=0,A="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";R<r.length;)p=r.charCodeAt(R++),x=r.charCodeAt(R++),l=r.charCodeAt(R++),d=p>>2,E=(p&3)<<4|x>>4,b=(x&15)<<2|l>>6,I=l&63,isNaN(x)?b=I=64:isNaN(l)&&(I=64),s=s+A.charAt(d)+A.charAt(E)+A.charAt(b)+A.charAt(I);return s};if(typeof window<"u"&&typeof window.atob=="function")var y=window.atob;if(typeof y>"u")var y=function(r){var s="",p,x,l,d,E,b,I,R=0,A="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";for(r=r.replace(/[^A-Za-z0-9\+\/\=]/g,"");R<r.length;)d=A.indexOf(r.charAt(R++)),E=A.indexOf(r.charAt(R++)),b=A.indexOf(r.charAt(R++)),I=A.indexOf(r.charAt(R++)),p=d<<2|E>>4,x=(E&15)<<4|b>>2,l=(b&3)<<6|I,s=s+String.fromCharCode(p),b!=64&&(s=s+String.fromCharCode(x)),I!=64&&(s=s+String.fromCharCode(l));return s};function g(a,r){if(!(r instanceof Array))throw new Error("'pack' error. Got invalid type argument.");if(a.length-1!=r.length)throw new Error("'pack' error. "+(a.length-1)+" marks, "+r.length+" elements.");var s;if(a[0]=="<")s=!0;else if(a[0]==">")s=!1;else throw new Error("");for(var p="",x=1,l=null,d=null,E=null;d=a[x];){if(d.toLowerCase()=="b"){if(l=r[x-1],d=="b"&&l<0&&(l+=256),l>255||l<0)throw new Error("'pack' error.");E=String.fromCharCode(l)}else if(d=="H"){if(l=r[x-1],l>65535||l<0)throw new Error("'pack' error.");E=String.fromCharCode(Math.floor(l%65536/256))+String.fromCharCode(l%256),s&&(E=E.split("").reverse().join(""))}else if(d.toLowerCase()=="l"){if(l=r[x-1],d=="l"&&l<0&&(l+=4294967296),l>4294967295||l<0)throw new Error("'pack' error.");E=String.fromCharCode(Math.floor(l/16777216))+String.fromCharCode(Math.floor(l%16777216/65536))+String.fromCharCode(Math.floor(l%65536/256))+String.fromCharCode(l%256),s&&(E=E.split("").reverse().join(""))}else throw new Error("'pack' error.");p+=E,x+=1}return p}function C(a,r){if(typeof r!="string")throw new Error("'unpack' error. Got invalid type argument.");for(var s=0,p=1;p<a.length;p++)if(a[p].toLowerCase()=="b")s+=1;else if(a[p].toLowerCase()=="h")s+=2;else if(a[p].toLowerCase()=="l")s+=4;else throw new Error("'unpack' error. Got invalid mark.");if(s!=r.length)throw new Error("'unpack' error. Mismatch between symbol and string length. "+s+":"+r.length);var x;if(a[0]=="<")x=!0;else if(a[0]==">")x=!1;else throw new Error("'unpack' error.");for(var l=[],d=0,E=1,b=null,I=null,R=null,A="";I=a[E];){if(I.toLowerCase()=="b")R=1,A=r.slice(d,d+R),b=A.charCodeAt(0),I=="b"&&b>=128&&(b-=256);else if(I=="H")R=2,A=r.slice(d,d+R),x&&(A=A.split("").reverse().join("")),b=A.charCodeAt(0)*256+A.charCodeAt(1);else if(I.toLowerCase()=="l")R=4,A=r.slice(d,d+R),x&&(A=A.split("").reverse().join("")),b=A.charCodeAt(0)*16777216+A.charCodeAt(1)*65536+A.charCodeAt(2)*256+A.charCodeAt(3),I=="l"&&b>=2147483648&&(b-=4294967296);else throw new Error("'unpack' error. "+I);l.push(b),d+=R,E+=1}return l}function D(a,r){for(var s="",p=0;p<r;p++)s+=a;return s}function T(a){if(a.slice(0,2)!="ÿØ")throw new Error("Given data isn't JPEG.");for(var r=2,s=["ÿØ"];;){if(a.slice(r,r+2)=="ÿÚ"){s.push(a.slice(r));break}else{var p=C(">H",a.slice(r+2,r+4))[0],x=r+p+2;s.push(a.slice(r,x)),r=x}if(r>=a.length)throw new Error("Wrong JPEG data.")}return s}function L(a){for(var r,s=0;s<a.length;s++)if(r=a[s],r.slice(0,2)=="ÿá"&&r.slice(4,10)=="Exif\0\0")return r;return null}function O(a,r){var s=!1,p=[];return a.forEach(function(x,l){x.slice(0,2)=="ÿá"&&x.slice(4,10)=="Exif\0\0"&&(s?p.unshift(l):(a[l]=r,s=!0))}),p.forEach(function(x){a.splice(x,1)}),!s&&r&&(a=[a[0],r].concat(a.slice(1))),a.join("")}var w={Byte:1,Ascii:2,Short:3,Long:4,Rational:5,Undefined:7,SLong:9,SRational:10},F={Image:{11:{name:"ProcessingSoftware",type:"Ascii"},254:{name:"NewSubfileType",type:"Long"},255:{name:"SubfileType",type:"Short"},256:{name:"ImageWidth",type:"Long"},257:{name:"ImageLength",type:"Long"},258:{name:"BitsPerSample",type:"Short"},259:{name:"Compression",type:"Short"},262:{name:"PhotometricInterpretation",type:"Short"},263:{name:"Threshholding",type:"Short"},264:{name:"CellWidth",type:"Short"},265:{name:"CellLength",type:"Short"},266:{name:"FillOrder",type:"Short"},269:{name:"DocumentName",type:"Ascii"},270:{name:"ImageDescription",type:"Ascii"},271:{name:"Make",type:"Ascii"},272:{name:"Model",type:"Ascii"},273:{name:"StripOffsets",type:"Long"},274:{name:"Orientation",type:"Short"},277:{name:"SamplesPerPixel",type:"Short"},278:{name:"RowsPerStrip",type:"Long"},279:{name:"StripByteCounts",type:"Long"},282:{name:"XResolution",type:"Rational"},283:{name:"YResolution",type:"Rational"},284:{name:"PlanarConfiguration",type:"Short"},290:{name:"GrayResponseUnit",type:"Short"},291:{name:"GrayResponseCurve",type:"Short"},292:{name:"T4Options",type:"Long"},293:{name:"T6Options",type:"Long"},296:{name:"ResolutionUnit",type:"Short"},301:{name:"TransferFunction",type:"Short"},305:{name:"Software",type:"Ascii"},306:{name:"DateTime",type:"Ascii"},315:{name:"Artist",type:"Ascii"},316:{name:"HostComputer",type:"Ascii"},317:{name:"Predictor",type:"Short"},318:{name:"WhitePoint",type:"Rational"},319:{name:"PrimaryChromaticities",type:"Rational"},320:{name:"ColorMap",type:"Short"},321:{name:"HalftoneHints",type:"Short"},322:{name:"TileWidth",type:"Short"},323:{name:"TileLength",type:"Short"},324:{name:"TileOffsets",type:"Short"},325:{name:"TileByteCounts",type:"Short"},330:{name:"SubIFDs",type:"Long"},332:{name:"InkSet",type:"Short"},333:{name:"InkNames",type:"Ascii"},334:{name:"NumberOfInks",type:"Short"},336:{name:"DotRange",type:"Byte"},337:{name:"TargetPrinter",type:"Ascii"},338:{name:"ExtraSamples",type:"Short"},339:{name:"SampleFormat",type:"Short"},340:{name:"SMinSampleValue",type:"Short"},341:{name:"SMaxSampleValue",type:"Short"},342:{name:"TransferRange",type:"Short"},343:{name:"ClipPath",type:"Byte"},344:{name:"XClipPathUnits",type:"Long"},345:{name:"YClipPathUnits",type:"Long"},346:{name:"Indexed",type:"Short"},347:{name:"JPEGTables",type:"Undefined"},351:{name:"OPIProxy",type:"Short"},512:{name:"JPEGProc",type:"Long"},513:{name:"JPEGInterchangeFormat",type:"Long"},514:{name:"JPEGInterchangeFormatLength",type:"Long"},515:{name:"JPEGRestartInterval",type:"Short"},517:{name:"JPEGLosslessPredictors",type:"Short"},518:{name:"JPEGPointTransforms",type:"Short"},519:{name:"JPEGQTables",type:"Long"},520:{name:"JPEGDCTables",type:"Long"},521:{name:"JPEGACTables",type:"Long"},529:{name:"YCbCrCoefficients",type:"Rational"},530:{name:"YCbCrSubSampling",type:"Short"},531:{name:"YCbCrPositioning",type:"Short"},532:{name:"ReferenceBlackWhite",type:"Rational"},700:{name:"XMLPacket",type:"Byte"},18246:{name:"Rating",type:"Short"},18249:{name:"RatingPercent",type:"Short"},32781:{name:"ImageID",type:"Ascii"},33421:{name:"CFARepeatPatternDim",type:"Short"},33422:{name:"CFAPattern",type:"Byte"},33423:{name:"BatteryLevel",type:"Rational"},33432:{name:"Copyright",type:"Ascii"},33434:{name:"ExposureTime",type:"Rational"},34377:{name:"ImageResources",type:"Byte"},34665:{name:"ExifTag",type:"Long"},34675:{name:"InterColorProfile",type:"Undefined"},34853:{name:"GPSTag",type:"Long"},34857:{name:"Interlace",type:"Short"},34858:{name:"TimeZoneOffset",type:"Long"},34859:{name:"SelfTimerMode",type:"Short"},37387:{name:"FlashEnergy",type:"Rational"},37388:{name:"SpatialFrequencyResponse",type:"Undefined"},37389:{name:"Noise",type:"Undefined"},37390:{name:"FocalPlaneXResolution",type:"Rational"},37391:{name:"FocalPlaneYResolution",type:"Rational"},37392:{name:"FocalPlaneResolutionUnit",type:"Short"},37393:{name:"ImageNumber",type:"Long"},37394:{name:"SecurityClassification",type:"Ascii"},37395:{name:"ImageHistory",type:"Ascii"},37397:{name:"ExposureIndex",type:"Rational"},37398:{name:"TIFFEPStandardID",type:"Byte"},37399:{name:"SensingMethod",type:"Short"},40091:{name:"XPTitle",type:"Byte"},40092:{name:"XPComment",type:"Byte"},40093:{name:"XPAuthor",type:"Byte"},40094:{name:"XPKeywords",type:"Byte"},40095:{name:"XPSubject",type:"Byte"},50341:{name:"PrintImageMatching",type:"Undefined"},50706:{name:"DNGVersion",type:"Byte"},50707:{name:"DNGBackwardVersion",type:"Byte"},50708:{name:"UniqueCameraModel",type:"Ascii"},50709:{name:"LocalizedCameraModel",type:"Byte"},50710:{name:"CFAPlaneColor",type:"Byte"},50711:{name:"CFALayout",type:"Short"},50712:{name:"LinearizationTable",type:"Short"},50713:{name:"BlackLevelRepeatDim",type:"Short"},50714:{name:"BlackLevel",type:"Rational"},50715:{name:"BlackLevelDeltaH",type:"SRational"},50716:{name:"BlackLevelDeltaV",type:"SRational"},50717:{name:"WhiteLevel",type:"Short"},50718:{name:"DefaultScale",type:"Rational"},50719:{name:"DefaultCropOrigin",type:"Short"},50720:{name:"DefaultCropSize",type:"Short"},50721:{name:"ColorMatrix1",type:"SRational"},50722:{name:"ColorMatrix2",type:"SRational"},50723:{name:"CameraCalibration1",type:"SRational"},50724:{name:"CameraCalibration2",type:"SRational"},50725:{name:"ReductionMatrix1",type:"SRational"},50726:{name:"ReductionMatrix2",type:"SRational"},50727:{name:"AnalogBalance",type:"Rational"},50728:{name:"AsShotNeutral",type:"Short"},50729:{name:"AsShotWhiteXY",type:"Rational"},50730:{name:"BaselineExposure",type:"SRational"},50731:{name:"BaselineNoise",type:"Rational"},50732:{name:"BaselineSharpness",type:"Rational"},50733:{name:"BayerGreenSplit",type:"Long"},50734:{name:"LinearResponseLimit",type:"Rational"},50735:{name:"CameraSerialNumber",type:"Ascii"},50736:{name:"LensInfo",type:"Rational"},50737:{name:"ChromaBlurRadius",type:"Rational"},50738:{name:"AntiAliasStrength",type:"Rational"},50739:{name:"ShadowScale",type:"SRational"},50740:{name:"DNGPrivateData",type:"Byte"},50741:{name:"MakerNoteSafety",type:"Short"},50778:{name:"CalibrationIlluminant1",type:"Short"},50779:{name:"CalibrationIlluminant2",type:"Short"},50780:{name:"BestQualityScale",type:"Rational"},50781:{name:"RawDataUniqueID",type:"Byte"},50827:{name:"OriginalRawFileName",type:"Byte"},50828:{name:"OriginalRawFileData",type:"Undefined"},50829:{name:"ActiveArea",type:"Short"},50830:{name:"MaskedAreas",type:"Short"},50831:{name:"AsShotICCProfile",type:"Undefined"},50832:{name:"AsShotPreProfileMatrix",type:"SRational"},50833:{name:"CurrentICCProfile",type:"Undefined"},50834:{name:"CurrentPreProfileMatrix",type:"SRational"},50879:{name:"ColorimetricReference",type:"Short"},50931:{name:"CameraCalibrationSignature",type:"Byte"},50932:{name:"ProfileCalibrationSignature",type:"Byte"},50934:{name:"AsShotProfileName",type:"Byte"},50935:{name:"NoiseReductionApplied",type:"Rational"},50936:{name:"ProfileName",type:"Byte"},50937:{name:"ProfileHueSatMapDims",type:"Long"},50938:{name:"ProfileHueSatMapData1",type:"Float"},50939:{name:"ProfileHueSatMapData2",type:"Float"},50940:{name:"ProfileToneCurve",type:"Float"},50941:{name:"ProfileEmbedPolicy",type:"Long"},50942:{name:"ProfileCopyright",type:"Byte"},50964:{name:"ForwardMatrix1",type:"SRational"},50965:{name:"ForwardMatrix2",type:"SRational"},50966:{name:"PreviewApplicationName",type:"Byte"},50967:{name:"PreviewApplicationVersion",type:"Byte"},50968:{name:"PreviewSettingsName",type:"Byte"},50969:{name:"PreviewSettingsDigest",type:"Byte"},50970:{name:"PreviewColorSpace",type:"Long"},50971:{name:"PreviewDateTime",type:"Ascii"},50972:{name:"RawImageDigest",type:"Undefined"},50973:{name:"OriginalRawFileDigest",type:"Undefined"},50974:{name:"SubTileBlockSize",type:"Long"},50975:{name:"RowInterleaveFactor",type:"Long"},50981:{name:"ProfileLookTableDims",type:"Long"},50982:{name:"ProfileLookTableData",type:"Float"},51008:{name:"OpcodeList1",type:"Undefined"},51009:{name:"OpcodeList2",type:"Undefined"},51022:{name:"OpcodeList3",type:"Undefined"}},Exif:{33434:{name:"ExposureTime",type:"Rational"},33437:{name:"FNumber",type:"Rational"},34850:{name:"ExposureProgram",type:"Short"},34852:{name:"SpectralSensitivity",type:"Ascii"},34855:{name:"ISOSpeedRatings",type:"Short"},34856:{name:"OECF",type:"Undefined"},34864:{name:"SensitivityType",type:"Short"},34865:{name:"StandardOutputSensitivity",type:"Long"},34866:{name:"RecommendedExposureIndex",type:"Long"},34867:{name:"ISOSpeed",type:"Long"},34868:{name:"ISOSpeedLatitudeyyy",type:"Long"},34869:{name:"ISOSpeedLatitudezzz",type:"Long"},36864:{name:"ExifVersion",type:"Undefined"},36867:{name:"DateTimeOriginal",type:"Ascii"},36868:{name:"DateTimeDigitized",type:"Ascii"},37121:{name:"ComponentsConfiguration",type:"Undefined"},37122:{name:"CompressedBitsPerPixel",type:"Rational"},37377:{name:"ShutterSpeedValue",type:"SRational"},37378:{name:"ApertureValue",type:"Rational"},37379:{name:"BrightnessValue",type:"SRational"},37380:{name:"ExposureBiasValue",type:"SRational"},37381:{name:"MaxApertureValue",type:"Rational"},37382:{name:"SubjectDistance",type:"Rational"},37383:{name:"MeteringMode",type:"Short"},37384:{name:"LightSource",type:"Short"},37385:{name:"Flash",type:"Short"},37386:{name:"FocalLength",type:"Rational"},37396:{name:"SubjectArea",type:"Short"},37500:{name:"MakerNote",type:"Undefined"},37510:{name:"UserComment",type:"Ascii"},37520:{name:"SubSecTime",type:"Ascii"},37521:{name:"SubSecTimeOriginal",type:"Ascii"},37522:{name:"SubSecTimeDigitized",type:"Ascii"},40960:{name:"FlashpixVersion",type:"Undefined"},40961:{name:"ColorSpace",type:"Short"},40962:{name:"PixelXDimension",type:"Long"},40963:{name:"PixelYDimension",type:"Long"},40964:{name:"RelatedSoundFile",type:"Ascii"},40965:{name:"InteroperabilityTag",type:"Long"},41483:{name:"FlashEnergy",type:"Rational"},41484:{name:"SpatialFrequencyResponse",type:"Undefined"},41486:{name:"FocalPlaneXResolution",type:"Rational"},41487:{name:"FocalPlaneYResolution",type:"Rational"},41488:{name:"FocalPlaneResolutionUnit",type:"Short"},41492:{name:"SubjectLocation",type:"Short"},41493:{name:"ExposureIndex",type:"Rational"},41495:{name:"SensingMethod",type:"Short"},41728:{name:"FileSource",type:"Undefined"},41729:{name:"SceneType",type:"Undefined"},41730:{name:"CFAPattern",type:"Undefined"},41985:{name:"CustomRendered",type:"Short"},41986:{name:"ExposureMode",type:"Short"},41987:{name:"WhiteBalance",type:"Short"},41988:{name:"DigitalZoomRatio",type:"Rational"},41989:{name:"FocalLengthIn35mmFilm",type:"Short"},41990:{name:"SceneCaptureType",type:"Short"},41991:{name:"GainControl",type:"Short"},41992:{name:"Contrast",type:"Short"},41993:{name:"Saturation",type:"Short"},41994:{name:"Sharpness",type:"Short"},41995:{name:"DeviceSettingDescription",type:"Undefined"},41996:{name:"SubjectDistanceRange",type:"Short"},42016:{name:"ImageUniqueID",type:"Ascii"},42032:{name:"CameraOwnerName",type:"Ascii"},42033:{name:"BodySerialNumber",type:"Ascii"},42034:{name:"LensSpecification",type:"Rational"},42035:{name:"LensMake",type:"Ascii"},42036:{name:"LensModel",type:"Ascii"},42037:{name:"LensSerialNumber",type:"Ascii"},42240:{name:"Gamma",type:"Rational"}},GPS:{0:{name:"GPSVersionID",type:"Byte"},1:{name:"GPSLatitudeRef",type:"Ascii"},2:{name:"GPSLatitude",type:"Rational"},3:{name:"GPSLongitudeRef",type:"Ascii"},4:{name:"GPSLongitude",type:"Rational"},5:{name:"GPSAltitudeRef",type:"Byte"},6:{name:"GPSAltitude",type:"Rational"},7:{name:"GPSTimeStamp",type:"Rational"},8:{name:"GPSSatellites",type:"Ascii"},9:{name:"GPSStatus",type:"Ascii"},10:{name:"GPSMeasureMode",type:"Ascii"},11:{name:"GPSDOP",type:"Rational"},12:{name:"GPSSpeedRef",type:"Ascii"},13:{name:"GPSSpeed",type:"Rational"},14:{name:"GPSTrackRef",type:"Ascii"},15:{name:"GPSTrack",type:"Rational"},16:{name:"GPSImgDirectionRef",type:"Ascii"},17:{name:"GPSImgDirection",type:"Rational"},18:{name:"GPSMapDatum",type:"Ascii"},19:{name:"GPSDestLatitudeRef",type:"Ascii"},20:{name:"GPSDestLatitude",type:"Rational"},21:{name:"GPSDestLongitudeRef",type:"Ascii"},22:{name:"GPSDestLongitude",type:"Rational"},23:{name:"GPSDestBearingRef",type:"Ascii"},24:{name:"GPSDestBearing",type:"Rational"},25:{name:"GPSDestDistanceRef",type:"Ascii"},26:{name:"GPSDestDistance",type:"Rational"},27:{name:"GPSProcessingMethod",type:"Undefined"},28:{name:"GPSAreaInformation",type:"Undefined"},29:{name:"GPSDateStamp",type:"Ascii"},30:{name:"GPSDifferential",type:"Short"},31:{name:"GPSHPositioningError",type:"Rational"}},Interop:{1:{name:"InteroperabilityIndex",type:"Ascii"}}};F["0th"]=F.Image,F["1st"]=F.Image,i.TAGS=F,i.ImageIFD={ProcessingSoftware:11,NewSubfileType:254,SubfileType:255,ImageWidth:256,ImageLength:257,BitsPerSample:258,Compression:259,PhotometricInterpretation:262,Threshholding:263,CellWidth:264,CellLength:265,FillOrder:266,DocumentName:269,ImageDescription:270,Make:271,Model:272,StripOffsets:273,Orientation:274,SamplesPerPixel:277,RowsPerStrip:278,StripByteCounts:279,XResolution:282,YResolution:283,PlanarConfiguration:284,GrayResponseUnit:290,GrayResponseCurve:291,T4Options:292,T6Options:293,ResolutionUnit:296,TransferFunction:301,Software:305,DateTime:306,Artist:315,HostComputer:316,Predictor:317,WhitePoint:318,PrimaryChromaticities:319,ColorMap:320,HalftoneHints:321,TileWidth:322,TileLength:323,TileOffsets:324,TileByteCounts:325,SubIFDs:330,InkSet:332,InkNames:333,NumberOfInks:334,DotRange:336,TargetPrinter:337,ExtraSamples:338,SampleFormat:339,SMinSampleValue:340,SMaxSampleValue:341,TransferRange:342,ClipPath:343,XClipPathUnits:344,YClipPathUnits:345,Indexed:346,JPEGTables:347,OPIProxy:351,JPEGProc:512,JPEGInterchangeFormat:513,JPEGInterchangeFormatLength:514,JPEGRestartInterval:515,JPEGLosslessPredictors:517,JPEGPointTransforms:518,JPEGQTables:519,JPEGDCTables:520,JPEGACTables:521,YCbCrCoefficients:529,YCbCrSubSampling:530,YCbCrPositioning:531,ReferenceBlackWhite:532,XMLPacket:700,Rating:18246,RatingPercent:18249,ImageID:32781,CFARepeatPatternDim:33421,CFAPattern:33422,BatteryLevel:33423,Copyright:33432,ExposureTime:33434,ImageResources:34377,ExifTag:34665,InterColorProfile:34675,GPSTag:34853,Interlace:34857,TimeZoneOffset:34858,SelfTimerMode:34859,FlashEnergy:37387,SpatialFrequencyResponse:37388,Noise:37389,FocalPlaneXResolution:37390,FocalPlaneYResolution:37391,FocalPlaneResolutionUnit:37392,ImageNumber:37393,SecurityClassification:37394,ImageHistory:37395,ExposureIndex:37397,TIFFEPStandardID:37398,SensingMethod:37399,XPTitle:40091,XPComment:40092,XPAuthor:40093,XPKeywords:40094,XPSubject:40095,PrintImageMatching:50341,DNGVersion:50706,DNGBackwardVersion:50707,UniqueCameraModel:50708,LocalizedCameraModel:50709,CFAPlaneColor:50710,CFALayout:50711,LinearizationTable:50712,BlackLevelRepeatDim:50713,BlackLevel:50714,BlackLevelDeltaH:50715,BlackLevelDeltaV:50716,WhiteLevel:50717,DefaultScale:50718,DefaultCropOrigin:50719,DefaultCropSize:50720,ColorMatrix1:50721,ColorMatrix2:50722,CameraCalibration1:50723,CameraCalibration2:50724,ReductionMatrix1:50725,ReductionMatrix2:50726,AnalogBalance:50727,AsShotNeutral:50728,AsShotWhiteXY:50729,BaselineExposure:50730,BaselineNoise:50731,BaselineSharpness:50732,BayerGreenSplit:50733,LinearResponseLimit:50734,CameraSerialNumber:50735,LensInfo:50736,ChromaBlurRadius:50737,AntiAliasStrength:50738,ShadowScale:50739,DNGPrivateData:50740,MakerNoteSafety:50741,CalibrationIlluminant1:50778,CalibrationIlluminant2:50779,BestQualityScale:50780,RawDataUniqueID:50781,OriginalRawFileName:50827,OriginalRawFileData:50828,ActiveArea:50829,MaskedAreas:50830,AsShotICCProfile:50831,AsShotPreProfileMatrix:50832,CurrentICCProfile:50833,CurrentPreProfileMatrix:50834,ColorimetricReference:50879,CameraCalibrationSignature:50931,ProfileCalibrationSignature:50932,AsShotProfileName:50934,NoiseReductionApplied:50935,ProfileName:50936,ProfileHueSatMapDims:50937,ProfileHueSatMapData1:50938,ProfileHueSatMapData2:50939,ProfileToneCurve:50940,ProfileEmbedPolicy:50941,ProfileCopyright:50942,ForwardMatrix1:50964,ForwardMatrix2:50965,PreviewApplicationName:50966,PreviewApplicationVersion:50967,PreviewSettingsName:50968,PreviewSettingsDigest:50969,PreviewColorSpace:50970,PreviewDateTime:50971,RawImageDigest:50972,OriginalRawFileDigest:50973,SubTileBlockSize:50974,RowInterleaveFactor:50975,ProfileLookTableDims:50981,ProfileLookTableData:50982,OpcodeList1:51008,OpcodeList2:51009,OpcodeList3:51022,NoiseProfile:51041},i.ExifIFD={ExposureTime:33434,FNumber:33437,ExposureProgram:34850,SpectralSensitivity:34852,ISOSpeedRatings:34855,OECF:34856,SensitivityType:34864,StandardOutputSensitivity:34865,RecommendedExposureIndex:34866,ISOSpeed:34867,ISOSpeedLatitudeyyy:34868,ISOSpeedLatitudezzz:34869,ExifVersion:36864,DateTimeOriginal:36867,DateTimeDigitized:36868,ComponentsConfiguration:37121,CompressedBitsPerPixel:37122,ShutterSpeedValue:37377,ApertureValue:37378,BrightnessValue:37379,ExposureBiasValue:37380,MaxApertureValue:37381,SubjectDistance:37382,MeteringMode:37383,LightSource:37384,Flash:37385,FocalLength:37386,SubjectArea:37396,MakerNote:37500,UserComment:37510,SubSecTime:37520,SubSecTimeOriginal:37521,SubSecTimeDigitized:37522,FlashpixVersion:40960,ColorSpace:40961,PixelXDimension:40962,PixelYDimension:40963,RelatedSoundFile:40964,InteroperabilityTag:40965,FlashEnergy:41483,SpatialFrequencyResponse:41484,FocalPlaneXResolution:41486,FocalPlaneYResolution:41487,FocalPlaneResolutionUnit:41488,SubjectLocation:41492,ExposureIndex:41493,SensingMethod:41495,FileSource:41728,SceneType:41729,CFAPattern:41730,CustomRendered:41985,ExposureMode:41986,WhiteBalance:41987,DigitalZoomRatio:41988,FocalLengthIn35mmFilm:41989,SceneCaptureType:41990,GainControl:41991,Contrast:41992,Saturation:41993,Sharpness:41994,DeviceSettingDescription:41995,SubjectDistanceRange:41996,ImageUniqueID:42016,CameraOwnerName:42032,BodySerialNumber:42033,LensSpecification:42034,LensMake:42035,LensModel:42036,LensSerialNumber:42037,Gamma:42240},i.GPSIFD={GPSVersionID:0,GPSLatitudeRef:1,GPSLatitude:2,GPSLongitudeRef:3,GPSLongitude:4,GPSAltitudeRef:5,GPSAltitude:6,GPSTimeStamp:7,GPSSatellites:8,GPSStatus:9,GPSMeasureMode:10,GPSDOP:11,GPSSpeedRef:12,GPSSpeed:13,GPSTrackRef:14,GPSTrack:15,GPSImgDirectionRef:16,GPSImgDirection:17,GPSMapDatum:18,GPSDestLatitudeRef:19,GPSDestLatitude:20,GPSDestLongitudeRef:21,GPSDestLongitude:22,GPSDestBearingRef:23,GPSDestBearing:24,GPSDestDistanceRef:25,GPSDestDistance:26,GPSProcessingMethod:27,GPSAreaInformation:28,GPSDateStamp:29,GPSDifferential:30,GPSHPositioningError:31},i.InteropIFD={InteroperabilityIndex:1},i.GPSHelper={degToDmsRational:function(a){var r=Math.abs(a),s=r%1*60,p=s%1*60,x=Math.floor(r),l=Math.floor(s),d=Math.round(p*100);return[[x,1],[l,1],[d,100]]},dmsRationalToDeg:function(a,r){var s=r==="S"||r==="W"?-1:1,p=a[0][0]/a[0][1]+a[1][0]/a[1][1]/60+a[2][0]/a[2][1]/3600;return p*s}},t.exports&&(e=t.exports=i),e.piexif=i})()})(ye,ye.exports)),ye.exports}mi();async function pi(t,e,i,n){const o=te(Ne("js")),f=await N.Protocol.get(t);if(!f)throw new Error(`Protocole ${t} introuvable`);const u=await N.Metadata.list().then(S=>S.filter(v=>f.metadata.includes(v.id))),m=await xi(i.slice(0,65635),(u??[]).map(({infer:S,type:v,id:c})=>Ue.case([{exif:"string"},"|",{latitude:{exif:"string"},longitude:{exif:"string"}}],y=>({key:c,infer:y,type:v})).default(()=>{})(S)).filter(S=>S!==void 0)).catch(S=>(console.warn(S),n.type==="image/jpeg"&&q.warn(o.t(112,[n.name,S?.toString()??o.t(88)])),{})),h=await Gt("Image").then(S=>S.filter(v=>v.fileId===e));for(const{id:S}of h)for(const[v,{value:c,confidence:y}]of Object.entries(m))await Wt({db:mt(),subjectId:S,metadataId:Mt(v,t),value:c,confidence:y})}async function xi(t,e){const i=ci.create(t).enableImageSize(!1).parse();if(!i)return{};console.debug("Starting EXIF Extraction",{extractionPlan:e,exif:i});const n=Ue.case({type:'"location"',infer:{latitude:{exif:"string"},longitude:{exif:"string"}}},({infer:o})=>({confidence:1,alternatives:{},value:{longitude:Re(i.tags[o.longitude.exif],"float"),latitude:Re(i.tags[o.latitude.exif],"float")}})).case({type:kt.MetadataType,infer:{exif:"string"}},({infer:o,type:f})=>({confidence:1,alternatives:{},value:Re(i.tags[o.exif],f)})).default(()=>{});return Object.fromEntries(e.map(({key:o,...f})=>[o,n(f)]).filter(([,o])=>o!==void 0&&!Y({latitude:"number.NaN",longitude:"number.NaN"}).allows(o.value)&&!Number.isNaN(o.value)))}function Re(t,e){switch(e){case"string":return t?.toString()??"";case"boolean":return!!t;case"date":if(typeof t!="number")throw new Error("Date value must be a number");if(Number.isNaN(t))throw new Error("Date value is invalid");return new Date(t*1e3);case"boundingbox":throw new Error("Bounding box not supported in EXIF");case"enum":if(typeof t!="string")throw new Error("Enum value must be a string");return t;case"integer":case"float":return Number(t);default:throw new Error(`Unknown type ${e}`)}}const Qi=["image/jpeg","application/zip","image/png","image/tiff",".cr2",".rw2",".dng",".crw",".raw",".cr3"];async function hi(t,e){const i=te(ve("main"));if(!P.currentProtocol){q.error(i.t(35));return}const n=await t.arrayBuffer();if(n.byteLength>zt.maxMemoryUsageInMB*Math.pow(2,20)){q.error(dt());return}const[[o,f],u]=await gt({source:t});await St({id:e,resizedBytes:u,originalBytes:n,contentType:t.type,filename:t.name,width:o,height:f}),await N.Image.set({id:Ge(e,0),filename:t.name,addedAt:yt(Date.now()),contentType:t.type,dimensions:{width:o,height:f},fileId:e,metadata:{}}),P.processing.removeFile(e),await pi(P.currentProtocol.id,e,n,t).catch(m=>{const h=te(ve("main"));console.error(m),q.error(h.t(89,[t.name]))})}async function di(t,e,i){const n=te(ve("main"));if(!P.currentProtocol){q.error(n.t(35));return}if(!P.currentProtocol.crop.infer){console.warn("No crop inference defined, not analyzing image. Configure crop inference in the protocol (crop.infer) if this was not intentional.");return}if(!P.cropInferenceAvailable)return;const o=await N.Image.get(Ge(i,0));if(!o)throw new Error(`Image ${i} not found in database`);if(!o.fileId)throw new Error(`Image ${i} has no associated ImageFile in database`);const f=t.inferBoundingBoxes.cancelable({fileId:o.fileId,taskSettings:ht(P.currentProtocol.crop.infer[P.selectedCropModel])});e?.set(o.fileId,f.cancel);const{boxes:u,scores:m}=await f.request.catch(c=>/(maxMemoryUsageInMB|maxResolutionInMP) limit exceeded/.test(c?.toString())?Promise.reject(new Error(dt())):Promise.reject(c));let[h]=u,[S]=m;if(!h||!S){await N.Image.update(o.id,"boundingBoxesAnalyzed",!0);return}const v=([c,y,g,C])=>qt(P.currentProtocol)({x:c,y,w:g,h:C});for(let c=0;c<u.length;c++)await N.Image.set({...o,id:Ge(o.fileId,c),addedAt:yt(c===0?o.addedAt:Date.now()),boundingBoxesAnalyzed:!0,metadata:{...Jt(o.metadata),[P.cropMetadataId]:{value:JSON.stringify(v(u[c])),confidence:m[c],alternatives:{},manuallyModified:!1}}})}var k=Uint8Array,le=Uint16Array,gi=Int32Array,Ct=new k([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Pt=new k([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Si=new k([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),It=function(t,e){for(var i=new le(31),n=0;n<31;++n)i[n]=e+=1<<t[n-1];for(var o=new gi(i[30]),n=1;n<30;++n)for(var f=i[n];f<i[n+1];++f)o[f]=f-i[n]<<5|n;return{b:i,r:o}},bt=It(Ct,2),Dt=bt.b,yi=bt.r;Dt[28]=258,yi[258]=28;var vi=It(Pt,0),Ci=vi.b,Me=new le(32768);for(var B=0;B<32768;++B){var $=(B&43690)>>1|(B&21845)<<1;$=($&52428)>>2|($&13107)<<2,$=($&61680)>>4|($&3855)<<4,Me[B]=(($&65280)>>8|($&255)<<8)>>1}var he=(function(t,e,i){for(var n=t.length,o=0,f=new le(e);o<n;++o)t[o]&&++f[t[o]-1];var u=new le(e);for(o=1;o<e;++o)u[o]=u[o-1]+f[o-1]<<1;var m;if(i){m=new le(1<<e);var h=15-e;for(o=0;o<n;++o)if(t[o])for(var S=o<<4|t[o],v=e-t[o],c=u[t[o]-1]++<<v,y=c|(1<<v)-1;c<=y;++c)m[Me[c]>>h]=S}else for(m=new le(n),o=0;o<n;++o)t[o]&&(m[o]=Me[u[t[o]-1]++]>>15-t[o]);return m}),ge=new k(288);for(var B=0;B<144;++B)ge[B]=8;for(var B=144;B<256;++B)ge[B]=9;for(var B=256;B<280;++B)ge[B]=7;for(var B=280;B<288;++B)ge[B]=8;var Et=new k(32);for(var B=0;B<32;++B)Et[B]=5;var Pi=he(ge,9,1),Ii=he(Et,5,1),Le=function(t){for(var e=t[0],i=1;i<t.length;++i)t[i]>e&&(e=t[i]);return e},j=function(t,e,i){var n=e/8|0;return(t[n]|t[n+1]<<8)>>(e&7)&i},Be=function(t,e){var i=e/8|0;return(t[i]|t[i+1]<<8|t[i+2]<<16)>>(e&7)},bi=function(t){return(t+7)/8|0},ze=function(t,e,i){return(e==null||e<0)&&(e=0),(i==null||i>t.length)&&(i=t.length),new k(t.subarray(e,i))},Di=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],U=function(t,e,i){var n=new Error(e||Di[t]);if(n.code=t,Error.captureStackTrace&&Error.captureStackTrace(n,U),!i)throw n;return n},Ei=function(t,e,i,n){var o=t.length,f=n?n.length:0;if(!o||e.f&&!e.l)return i||new k(0);var u=!i,m=u||e.i!=2,h=e.i;u&&(i=new k(o*3));var S=function(ee){var oe=i.length;if(ee>oe){var fe=new k(Math.max(oe*2,ee));fe.set(i),i=fe}},v=e.f||0,c=e.p||0,y=e.b||0,g=e.l,C=e.d,D=e.m,T=e.n,L=o*8;do{if(!g){v=j(t,c,1);var O=j(t,c+1,3);if(c+=3,O)if(O==1)g=Pi,C=Ii,D=9,T=5;else if(O==2){var r=j(t,c,31)+257,s=j(t,c+10,15)+4,p=r+j(t,c+5,31)+1;c+=14;for(var x=new k(p),l=new k(19),d=0;d<s;++d)l[Si[d]]=j(t,c+d*3,7);c+=s*3;for(var E=Le(l),b=(1<<E)-1,I=he(l,E,1),d=0;d<p;){var R=I[j(t,c,b)];c+=R&15;var w=R>>4;if(w<16)x[d++]=w;else{var A=0,W=0;for(w==16?(W=3+j(t,c,3),c+=2,A=x[d-1]):w==17?(W=3+j(t,c,7),c+=3):w==18&&(W=11+j(t,c,127),c+=7);W--;)x[d++]=A}}var X=x.subarray(0,r),G=x.subarray(r);D=Le(X),T=Le(G),g=he(X,D,1),C=he(G,T,1)}else U(1);else{var w=bi(c)+4,F=t[w-4]|t[w-3]<<8,a=w+F;if(a>o){h&&U(0);break}m&&S(y+F),i.set(t.subarray(w,a),y),e.b=y+=F,e.p=c=a*8,e.f=v;continue}if(c>L){h&&U(0);break}}m&&S(y+131072);for(var _=(1<<D)-1,ie=(1<<T)-1,M=c;;M=c){var A=g[Be(t,c)&_],z=A>>4;if(c+=A&15,c>L){h&&U(0);break}if(A||U(2),z<256)i[y++]=z;else if(z==256){M=c,g=null;break}else{var ae=z-254;if(z>264){var d=z-257,V=Ct[d];ae=j(t,c,(1<<V)-1)+Dt[d],c+=V}var ne=C[Be(t,c)&ie],K=ne>>4;ne||U(3),c+=ne&15;var G=Ci[K];if(K>3){var V=Pt[K];G+=Be(t,c)&(1<<V)-1,c+=V}if(c>L){h&&U(0);break}m&&S(y+131072);var re=y+ae;if(y<G){var Q=f-G,Se=Math.min(G,re);for(Q+y<0&&U(3);y<Se;++y)i[y]=n[Q+y]}for(;y<re;++y)i[y]=i[y-G]}}e.l=g,e.p=M,e.b=y,e.f=v,g&&(v=1,e.m=D,e.d=C,e.n=T)}while(!v);return y!=i.length&&u?ze(i,0,y):i.subarray(0,y)},Fi=new k(0),J=function(t,e){return t[e]|t[e+1]<<8},H=function(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0},Te=function(t,e){return H(t,e)+H(t,e+4)*4294967296};function Ai(t,e){return Ei(t,{i:2},e&&e.out,e&&e.dictionary)}var ke=typeof TextDecoder<"u"&&new TextDecoder,wi=0;try{ke.decode(Fi,{stream:!0}),wi=1}catch{}var Ri=function(t){for(var e="",i=0;;){var n=t[i++],o=(n>127)+(n>223)+(n>239);if(i+o>t.length)return{s:e,r:ze(t,i-1)};o?o==3?(n=((n&15)<<18|(t[i++]&63)<<12|(t[i++]&63)<<6|t[i++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):o&1?e+=String.fromCharCode((n&31)<<6|t[i++]&63):e+=String.fromCharCode((n&15)<<12|(t[i++]&63)<<6|t[i++]&63):e+=String.fromCharCode(n)}};function Ft(t,e){if(e){for(var i="",n=0;n<t.length;n+=16384)i+=String.fromCharCode.apply(null,t.subarray(n,n+16384));return i}else{if(ke)return ke.decode(t);var o=Ri(t),f=o.s,i=o.r;return i.length&&U(8),f}}var Li=function(t,e){return e+30+J(t,e+26)+J(t,e+28)},Bi=function(t,e,i){var n=J(t,e+28),o=Ft(t.subarray(e+46,e+46+n),!(J(t,e+8)&2048)),f=e+46+n,u=H(t,e+20),m=i&&u==4294967295?Ti(t,f):[u,H(t,e+24),H(t,e+42)],h=m[0],S=m[1],v=m[2];return[J(t,e+10),h,S,o,f+J(t,e+30)+J(t,e+32),v]},Ti=function(t,e){for(;J(t,e)!=1;e+=4+J(t,e+2));return[Te(t,e+12),Te(t,e+4),Te(t,e+20)]};function ct(t,e){for(var i={},n=t.length-22;H(t,n)!=101010256;--n)(!n||t.length-n>65558)&&U(13);var o=J(t,n+8);if(!o)return{};var f=H(t,n+16),u=f==4294967295||o==65535;if(u){var m=H(t,n-12);u=H(t,m)==101075792,u&&(o=H(t,m+32),f=H(t,m+48))}for(var h=e&&e.filter,S=0;S<o;++S){var v=Bi(t,f,u),c=v[0],y=v[1],g=v[2],C=v[3],D=v[4],T=v[5],L=Li(t,T);f=D,(!h||h({name:C,size:y,originalSize:g,compression:c}))&&(c?c==8?i[C]=Ai(t.subarray(L,L+y),{out:new k(g)}):U(14,"unknown compression type "+c):i[C]=ze(t,L,L+y))}return i}const Oe=Y({"[string]":{value:[Y.or("null",se.boolean,se.integer,se.float,se.string,"string.date.iso",se.location,se.boundingbox),"@","Valeur de la métadonnée"],"valueLabel?":["string","@","Label de la valeur de la métadonnée. Existe pour les métadonnées de type enum, contient dans ce cas le label associé à la clé de l'option de l'enum choisie"],confidence:["number","@","Confiance dans la valeur de la métadonnée, entre 0 et 1"],manuallyModified:["boolean","@","La valeur de la métadonnée a été modifiée manuellement"],alternatives:Y({"[string]":["number","@","Confiance dans cette valeur alternative de la métadonnée, entre 0 et 1."]}).describe("Autres valeurs possibles. Les clés de l'objet sont les autres valeurs possibles pour cette métadonnée (converties en texte via JSON), les valeurs de l'objet sont les confiances associées à ces alternatives.")}}),Oi=Y({observations:Y({"[string]":{label:["string","@","Label de l'observation"],images:Y({id:["string","@","ID de l'image"],filename:["string","@","Nom du fichier utilisé pour cette image"],contentType:["string","@","Type de contenu de l'image, au format MIME (exemple: image/jpeg)"],sequence:["number","@","Numéro de séquence de l'image dans l'archive .zip. Unique à l'entièreté de l'export"],metadata:Oe,exportedAs:Y({original:["string","@","Chemin vers l'image originale"],cropped:["string","@","Chemin vers l'image recadrée"]}).describe("Chemins dans l'archive .zip vers l'image exportée")}).array(),metadata:Oe,protocolMetadata:Oe.describe("Métadonnées définies par le protocole. Les clés de l'objet sont les identifiants des métadonnées, sans le préfixe qui identifie leur protocole de provenance")}}).describe("Associe l'ID d'une observation à son label et les valeurs de ses métadonnées"),protocol:Nt.describe("Le protocole utilisé pour cette session d'analyse")});async function Gi(t,e,i){const n=te(ve("main")),o=new Uint8Array(await t.arrayBuffer()),f=ct(o,{filter:({name:c})=>c===(P.currentProtocol?.exports?.metadata.json??"analysis.json")});if(Object.keys(f).length===0){P.processing.removeFile(e),q.error(n.t(33,[t.name]));return}const[u]=Object.values(f).map(c=>Ft(c)).map(Yt).map(c=>c?Oi(c):void 0);if(u===void 0){P.processing.removeFile(e),q.error(n.t(124,[t.name]));return}if(u instanceof Ut){P.processing.removeFile(e),q.error(n.t(97,[t.name,u.summary]));return}const{protocol:m,observations:h}=u;if(i&&m.id!==i){P.processing.removeFile(e),q.error(n.t(123,[t.name,m.id,i]));return}const S=Object.values(h).flatMap(c=>c.images).map(c=>({id:c.id,name:c.exportedAs.original}));P.processing.files.push(...S);const v=ct(o,{filter:({name:c})=>S.some(y=>y.name===c)});if(Object.keys(v).length===0){P.processing.removeFile(e),P.processing.files=P.processing.files.filter(c=>!S.find(y=>y.id===c.id)),q.error(n.t(39,[t.name]));return}for(const[c,y]of Ze(v)){const g=S.find(F=>F.name===c)?.id;if(!g)continue;const C=Ze(h).map(([F,a])=>({id:F,...a})).find(F=>F.images.some(a=>a.exportedAs.original===c));if(!C){P.processing.removeFile(g);continue}const D=C.images.find(F=>F.exportedAs.original===c);if(!D){P.processing.removeFile(g);continue}await N.Observation.set({...Ke(C,"id","label"),images:C.images.map(F=>F.id),addedAt:new Date().toISOString(),metadataOverrides:$e(C.metadata,F=>({value:Qe(F.value),confidence:F.confidence,manuallyModified:F.manuallyModified,alternatives:F.alternatives}))});const T=Qt(y),[[L,O],w]=await gt({source:new File([T],D.filename,{type:D.contentType})});await St({id:Ye(D.id),resizedBytes:w,originalBytes:T,contentType:D.contentType,filename:D.filename,width:L,height:O}),await N.Image.set({...Ke(D,"id","filename","contentType"),dimensions:{width:L,height:O},fileId:Ye(D.id),boundingBoxesAnalyzed:!0,addedAt:new Date().toISOString(),metadata:$e(D.metadata,F=>({value:Qe(F.value),confidence:F.confidence,manuallyModified:F.manuallyModified,alternatives:F.alternatives}))}),P.processing.removeFile(D.id)}P.processing.removeFile(e)}let de;class Mi{constructor({swarpc:e,cancellers:i,parallelism:n=1}){this.swarpc=e,this.cancellers=i,this.parallelism=n,this.tasks=[],this.taskIds=new Set,this.abortController=new AbortController,Xe(()=>{this.start().finally(()=>this.logWarning(null,"Processing queue mainloop exited"))}),Xe(()=>{this.log(null,"Progress is",P.processing.done,"/",P.processing.total)})}async start(){for(this.log(null,`Starting processing queue mainloop with up to ${this.parallelism} concurrent tasks`);;){for(;this.tasks.length>0;)await new Promise((e,i)=>{this.abortController.signal.addEventListener("abort",()=>{e(void 0)}),Promise.allSettled(Zt(this.parallelism).map(async()=>this.pop())).then(n=>{n.some(o=>o.status==="rejected")?i(n.filter(o=>o.status==="rejected").map(o=>o.reason)):e(void 0),P.processing.done+=n.length,this.tasks.length===0&&this.#e()})});await new Promise(e=>setTimeout(e,100))}}log(e,i,...n){console.debug(`[ProcessingQueue] ${e?e+": ":""}${i}`,...n)}logWarning(e,i,...n){console.warn(`[ProcessingQueue] ${e?e+": ":""}${i}`,...n)}#e(){this.log(null,"Queue was drained"),P.loadingImages.clear(),P.queuedImages.clear(),document.dispatchEvent(new CustomEvent("processing-queue-drained")),setTimeout(()=>{P.processing.reset()},500)}taskSubjectId(e){if(e.importing)return e.importing.id;if(e.detection)return e.detection.fileId;if(e.classification)return e.classification.imageId;throw new Error("Task must have either importing, detection or classification")}taskId(e){return this.taskSubjectId(e)}push(e){const i=this.taskId(e);if(this.taskIds.has(i)){this.logWarning(i,"Task already in queue, skipping.",e);return}this.log(i,"push",e),this.tasks.push(e),this.taskIds.add(this.taskId(e)),P.processing.total++,P.queuedImages.add(this.taskSubjectId(e)),e.importing&&P.processing.files.push({name:e.importing.file.name,id:e.importing.id,addedAt:new Date})}cancel(e,i){this.log(e,"cancel",i),this.abortController.abort(e),this.cancellers?.get(e)?.(i),this.tasks=this.tasks.filter(o=>this.taskSubjectId(o)!==e),P.processing.removeFile(e),P.queuedImages.delete(e),P.loadingImages.delete(e),P.processing.total--}async pop(){const e=this.tasks.shift();if(!e){this.logWarning(null,"No task to pop, queue is empty");return}this.log(this.taskId(e),"pop",ht(e)),this.taskIds.delete(this.taskId(e)),P.queuedImages.delete(this.taskSubjectId(e)),P.loadingImages.add(this.taskSubjectId(e));const{detection:i,classification:n,importing:o}=e;P.processing.task=o?"import":i?"detection":"classification";try{if(o){const{file:f,id:u}=o;$t(f.type)?await Gi(f,u,P.currentProtocolId):await hi(f,u)}else i?await di(this.swarpc,this.cancellers,i.fileId):n&&await ti(this.swarpc,n.imageId,this.cancellers);P.processing.removeFile(this.taskSubjectId(e))}catch(f){P.erroredImages.set(this.taskSubjectId(e),_t(f))}finally{P.loadingImages.delete(this.taskSubjectId(e))}}}function Zi(t){de??=new Mi({parallelism:Math.ceil(navigator.hardwareConcurrency/2),...t})}function $i(t,e){At(de),de.cancel(t,e)}function Ve(t,{title:e,...i}){Promise.all(t.map(n=>{At(de),de.push(n)})).then(()=>{t.length!==0&&Kt(e,{icon:"/icon.png",badge:"/badge.png",...i})})}function Ki(t){Ve(t.map(e=>({importing:{file:e,id:Vt()}})),{title:"Import des images terminé",body:_e(t.length,["1 image importée","# images importées"]),tag:"import-complete"})}function ea(t){Ve(t.map(e=>({detection:{fileId:e}})),{title:"Détection terminée",body:_e(t.length,["1 image traitée","# images traitées"]),tag:"detection-complete"})}function ta(t){Ve(t.map(e=>({classification:{imageId:e}})),{title:"Classification terminée",body:_e(t.length,["1 image classée","# images classées"]),tag:"classification-complete"})}function At(t){if(!t)throw new Error("Processing queue not initialized. Call initializeProcessingQueue first.")}async function ia(t){const e=P.currentProtocol;if(!e)throw new Error("No protocol selected");const i=t.map(u=>N.Observation.getFromState(u)).filter(et),n=await Promise.all(t.map(async u=>N.Image.raw.get(u))).then(u=>u.filter(et)),o=new Set(i.flatMap(u=>u.images)).union(new Set(n.map(u=>u.id))),f=xt("Observation");return await N.Observation.do(async u=>{const m={id:f,images:[...o],addedAt:new Date().toISOString(),label:je([...i,...n]),metadataOverrides:Object.fromEntries(Object.entries(await Xt(mt(),i.map(h=>h.metadataOverrides))).map(([h,{value:S,...v}])=>[h,{...v,value:JSON.stringify(S)}]))};u.add({...m,label:wt({protocol:e,images:n,observation:m})});for(const{id:h}of i)u.delete(h)}),f}async function aa(t,{recursive:e=!1,notFoundOk:i=!0,tx:n=void 0}={}){await pt(["Observation","Image","ImageFile","ImagePreviewFile"],{},async o=>{const f=await o.objectStore("Observation").get(t);if(!f){if(i)return;throw"Observation non trouvée"}o.objectStore("Observation").delete(t);const u=await o.objectStore("Image").getAll().then(m=>m.filter(h=>f.images.includes(h.id)));if(e)for(const m of jt(u))await Ht(m,o,i);P.erroredImages.delete(t)})}function wt({images:t,observation:e,protocol:i}){return i?.observations?.defaultLabel?.render({images:t,observation:e})??je([e,...t])}function je(t){const e=te(Ne("js"));for(const i of t){if("label"in i)return i.label;if("filename"in i)return i.filename.replace(/\.[^.]+$/,"")}return e.t(140)}function ki(t,e){const n={id:xt("Observation"),images:[t.id],addedAt:new Date().toISOString(),label:je([t]),metadataOverrides:{}};return{...n,label:wt({images:[t],observation:n,protocol:e})}}async function na(t){const e=P.currentProtocol;if(!e)throw new Error("No protocol selected");await pt(["Observation","Image"],{},async i=>{const n=await i.objectStore("Image").getAll(),o=await i.objectStore("Observation").getAll();for(const f of n)if(!o.some(u=>u.images.includes(f.id))){const u=ki(f,e);i.objectStore("Observation").add(u),P.setSelection?.(P.selection.map(m=>m===f.id?u.id:m))}})}export{Qi as A,ii as a,$i as b,ta as c,aa as d,na as e,ea as f,Xi as g,Yi as h,Ki as i,ei as j,Zi as k,ia as m,ki as n};
